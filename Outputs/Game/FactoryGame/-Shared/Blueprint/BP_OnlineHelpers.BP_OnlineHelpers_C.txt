########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/-Shared/Blueprint/BP_OnlineHelpers.BP_OnlineHelpers_C
########################





============ BEGIN FUNCTION IsFriendInSession ==============
L0:            OnlinePresence mOnlinePresence = this->GetFriendPresence([ref] Friend, WorldContext, WorldContext);
L59:           this->IsInSession(mOnlinePresence, WorldContext, [ref] mbool);
L100:          bool Result = mbool;
============ END FUNCTION IsFriendInSession ==============





============ BEGIN FUNCTION IsFriendInPublicSession ==============
L0:            OnlinePresence mOnlinePresence = this->GetFriendPresence([ref] Friend, WorldContext, WorldContext);
L59:           this->IsPresenceInPublicSession(mOnlinePresence, WorldContext, [ref] mbool);
L100:          bool Result = mbool;
============ END FUNCTION IsFriendInPublicSession ==============





============ BEGIN FUNCTION IsPresenceInPublicSession ==============
L0:            FString mFString = FGPresenceLibrary->GetSessionIDFromPresence([ref] presence);
L59:           FString mFString1 = FGPresenceLibrary->GetSessionIDFromPresence([ref] presence);
L118:          bool mbool = KismetStringLibrary->NotEqual_StrStr(mFString, "");
L171:          bool mbool1 = KismetStringLibrary->NotEqual_StrStr(mFString1, "PRIVATE");
L231:          bool mbool2 = mbool && mbool1;
L269:          bool Result = mbool2;
============ END FUNCTION IsPresenceInPublicSession ==============





============ BEGIN FUNCTION GetConnectingNatIssue ==============
L0:            FText mFText = FGNetworkLibrary->NATTypeToText(HostNAT);
L59:           FText mFText1 = FGNetworkLibrary->NATTypeToText(ClientNat);
L118:          mFormatArgumentData.ArgumentName = "hostNat";
L154:          mFormatArgumentData.ArgumentValueType = 4;
L183:          mFormatArgumentData.ArgumentValue = mFText;
L219:          mFormatArgumentData.ArgumentValueInt = 0;
L251:          mFormatArgumentData.ArgumentValueFloat = 0;
L283:          mFormatArgumentData.ArgumentValueGender = 0;
L312:          mFormatArgumentData1.ArgumentName = "clientNat";
L350:          mFormatArgumentData1.ArgumentValueType = 4;
L379:          mFormatArgumentData1.ArgumentValue = mFText1;
L415:          mFormatArgumentData1.ArgumentValueInt = 0;
L447:          mFormatArgumentData1.ArgumentValueFloat = 0;
L479:          mFormatArgumentData1.ArgumentValueGender = 0;
L508:          TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData, mFormatArgumentData1];
L537:          FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L786:          FText Tooltip = mFText2;
============ END FUNCTION GetConnectingNatIssue ==============





============ BEGIN FUNCTION IsNATIssue ==============
L0:            bool mbool = HostNAT != 0;
L31:           if (!mbool) goto L185;
L45:           mbool = HostNAT != 1;
L76:           if (!mbool) goto L201;
L90:           mbool = HostNAT != 2;
L121:          if (!mbool) goto L386;
L135:          mbool = HostNAT != 3;
L166:          if (!mbool) goto L386;
L180:          // <End Inlined EventGraph Function>;
L185:          bool isIssue = false;
L196:          // <End Inlined EventGraph Function>;
L201:          bool mbool1 = ClientNat != 0;
L232:          if (!mbool1) goto L185;
L246:          mbool1 = ClientNat != 1;
L277:          if (!mbool1) goto L185;
L291:          mbool1 = ClientNat != 2;
L322:          if (!mbool1) goto L386;
L336:          mbool1 = ClientNat != 3;
L367:          if (!mbool1) goto L386;
L381:          // <End Inlined EventGraph Function>;
L386:          isIssue = true;
============ END FUNCTION IsNATIssue ==============





============ BEGIN FUNCTION IsInSession ==============
L0:            FString mFString = FGPresenceLibrary->GetSessionIDFromPresence([ref] presence);
L59:           bool mbool = KismetStringLibrary->NotEqual_StrStr(mFString, "");
L112:          bool Result = mbool;
============ END FUNCTION IsInSession ==============





============ BEGIN FUNCTION InsertionAddButton ==============
============ END FUNCTION InsertionAddButton ==============





============ BEGIN FUNCTION IsHost ==============
L0:            bool mbool = PlayerState == OwningPlayer->PlayerState;
L60:           bool isOurself = mbool;
============ END FUNCTION IsHost ==============





============ BEGIN FUNCTION CanJoinInviteToSession ==============
L0:            OnlinePresence mOnlinePresence = this->GetFriendPresence([ref] Friend, WorldContext, WorldContext);
L59:           bool mbool = FGPresenceLibrary->IsOnline([ref] mOnlinePresence);
L110:          bool mbool1 = !mbool;
L139:          if (!mbool1) goto L178;
L153:          uint8 Result = 2;
L173:          // <End Inlined EventGraph Function>;
L178:          bool mbool2 = FGSessionLibrary->IsSessionValid(session);
L229:          bool mbool3 = !mbool2;
L258:          if (!mbool3) goto L297;
L272:          Result = 1;
L292:          // <End Inlined EventGraph Function>;
L297:          int32 mint32 = FGSessionLibrary->GetMaxNumberOfPlayers([ref] session);
L356:          FGOnlineSessionSettings mFGOnlineSessionSettings = FGSessionLibrary->GetSessionSettings([ref] session);
L415:          bool mbool4 = mFGOnlineSessionSettings.NumConnectedPlayers >= mint32;
L462:          if (!mbool4) goto L501;
L476:          Result = 0;
L496:          // <End Inlined EventGraph Function>;
L501:          FGOnlineSessionSettings mFGOnlineSessionSettings1 = FGSessionLibrary->GetSessionSettings([ref] session);
L560:          bool mbool5 = FGSessionLibrary->CheckIsCompatibleVersion([ref] mFGOnlineSessionSettings1);
L611:          bool mbool6 = !mbool5;
L640:          if (!mbool6) goto L679;
L654:          Result = 3;
L674:          // <End Inlined EventGraph Function>;
L679:          Result = 4;
============ END FUNCTION CanJoinInviteToSession ==============





============ BEGIN FUNCTION IsInThisGame ==============
L0:            BlueprintSessionResult mBlueprintSessionResult = FGSessionLibrary->GetMySession(LocalPlayer);
L59:           OnlinePresence mOnlinePresence = this->GetFriendPresence([ref] onlineFriend, LocalPlayer, LocalPlayer);
L118:          FGOnlineSessionSettings mFGOnlineSessionSettings = FGSessionLibrary->GetSessionSettings([ref] mBlueprintSessionResult);
L177:          FString mFString = FGPresenceLibrary->GetSessionIDFromPresence([ref] mOnlinePresence);
L236:          bool mbool = KismetStringLibrary->NotEqual_StrStr(mFString, "");
L289:          bool mbool1 = KismetStringLibrary->EqualEqual_StrStr(mFString, mFGOnlineSessionSettings.CSS_SessionId);
L358:          bool mbool2 = mbool1 && mbool;
L396:          bool inThisGame = mbool2;
============ END FUNCTION IsInThisGame ==============





============ BEGIN FUNCTION CanSendInvite ==============
L0:            OnlinePresence mOnlinePresence = this->GetFriendPresence([ref] Friend, LocalPlayer, LocalPlayer);
L59:           bool mbool = FGPresenceLibrary->IsPlayingThisGame([ref] mOnlinePresence);
L110:          if (!mbool) goto L213;
L124:          this->IsInThisGame([ref] Friend, LocalPlayer, LocalPlayer, [ref] mbool1);
L174:          if (!mbool1) goto L238;
L188:          uint8 canSend = 1;
L208:          // <End Inlined EventGraph Function>;
L213:          canSend = 0;
L233:          // <End Inlined EventGraph Function>;
L238:          canSend = 3;
============ END FUNCTION CanSendInvite ==============





============ BEGIN FUNCTION GetCompactPresence ==============
L0:            bool mbool = FGPresenceLibrary->IsValid_OnlinePresence([ref] presence);
L51:           if (!mbool) goto L429;
L65:           bool mbool1 = FGPresenceLibrary->IsPlayingOtherGame([ref] presence);
L116:          bool mbool2 = FGPresenceLibrary->IsPlayingThisGame([ref] presence);
L167:          bool mbool3 = FGPresenceLibrary->IsOnline([ref] presence);
L218:          FString mFString = FGPresenceLibrary->GetPresenceString([ref] presence);
L277:          mFCompactPresence.PresenceString_8_73B095B54A983F2391EE189D60CC1495 = mFString;
L313:          mFCompactPresence.IsOnline_3_0B4A819747012DC786FA4097038402CD = mbool3;
L341:          mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA = mbool2;
L369:          mFCompactPresence.IsPlayingOtherGame_7_ED9DBFB84A164DABCD8A488B070BE8C3 = mbool1;
L397:          FCompactPresence compactPresence = mFCompactPresence;
L424:          // <End Inlined EventGraph Function>;
L429:          compactPresence = UserDefinedStruct /Game/FactoryGame/-Shared/Blueprint/FCompactPresence.FCompactPresence(PresenceString_8_73B095B54A983F2391EE189D60CC1495 = "", IsOnline_3_0B4A819747012DC786FA4097038402CD = false, IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA = false, IsPlayingOtherGame_7_ED9DBFB84A164DABCD8A488B070BE8C3 = false);
============ END FUNCTION GetCompactPresence ==============





============ BEGIN FUNCTION GetInvitePresence ==============
L0:            UniqueNetIdRepl mUniqueNetIdRepl = FGInviteLibrary->GetInviteSenderUniqueNetId([ref] invite);
L59:           OnlinePresence mOnlinePresence = FGPresenceLibrary->GetPresenceFromNetId(WorldContext, [ref] mUniqueNetIdRepl);
L127:          OnlinePresence presence = mOnlinePresence;
============ END FUNCTION GetInvitePresence ==============





============ BEGIN FUNCTION GetFriendPresence ==============
L0:            UniqueNetIdRepl mUniqueNetIdRepl = FGFriendsLibrary->GetFriendUniqueNetId([ref] onlineFriend);
L59:           bool mbool = FGNetworkLibrary->IsValid_UniqueNetId([ref] mUniqueNetIdRepl);
L110:          if (!mbool) goto L416;
L124:          mUniqueNetIdRepl = FGFriendsLibrary->GetFriendUniqueNetId([ref] onlineFriend);
L183:          bool mbool1 = FGPresenceLibrary->NetIdHasValidPresence(WorldContext, [ref] mUniqueNetIdRepl);
L243:          if (!mbool1) goto L416;
L257:          mUniqueNetIdRepl = FGFriendsLibrary->GetFriendUniqueNetId([ref] onlineFriend);
L316:          OnlinePresence mOnlinePresence = FGPresenceLibrary->GetPresenceFromNetId(WorldContext, [ref] mUniqueNetIdRepl);
L384:          OnlinePresence ReturnValue = mOnlinePresence;
L411:          goto L448;
L416:          ReturnValue = ScriptStruct /Script/FactoryGame.OnlinePresence();
============ END FUNCTION GetFriendPresence ==============





============ BEGIN FUNCTION SessionVisibilityStringToEnum ==============
L0:            TMap<FString, uint8> mTMapFString, uint8 = [(0 = "Private"), (1 = "Friends Only")];
L42:           TMap<FString, uint8> sessionVisibilityLookup = mTMapFString, uint8;
L69:           bool mbool = BlueprintMapLibrary->Map_Find([ref] sessionVisibilityLookup, [ref] string, [ref] muint8);
L138:          uint8 Enum = muint8;
============ END FUNCTION SessionVisibilityStringToEnum ==============
