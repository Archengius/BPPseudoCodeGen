########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Equipment/NobeliskDetonator/BP_NobeliskExplosive.BP_NobeliskExplosive_C
########################





============ BEGIN FUNCTION ShouldSave ==============
L0:            bool ReturnValue = true;
============ END FUNCTION ShouldSave ==============





============ BEGIN FUNCTION GatherDependencies ==============
L0:            TArray<Object*> mTArrayObject = [];
L11:           TArray<Object*> out_dependentObjects = mTArrayObject;
============ END FUNCTION GatherDependencies ==============





============ BEGIN FUNCTION NeedTransform ==============
L0:            bool ReturnValue = false;
============ END FUNCTION NeedTransform ==============





============ BEGIN FUNCTION PlayExplosionEffects ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PlayExplosionEffects;
L0:            // Implementation: Function ExecuteUbergraph_BP_NobeliskExplosive, from label L1741;
============ END FUNCTION PlayExplosionEffects ==============





============ BEGIN FUNCTION ReceiveHit ==============
L144:          // EventGraph implemented function stub;
L144:          // Function Name: ReceiveHit;
L144:          // Implementation: Function ExecuteUbergraph_BP_NobeliskExplosive, from label L964;
============ END FUNCTION ReceiveHit ==============





============ BEGIN FUNCTION ExecuteUbergraph_BP_NobeliskExplosive ==============
L10:           bool mbool = KismetStringLibrary->NotEqual_StriStri(this->mPhysicalMaterialExplosion, "PhysMat_Rock");
L75:           if (!mbool) goto L173;
L89:           mbool = KismetStringLibrary->NotEqual_StriStri(this->mPhysicalMaterialExplosion, "PhysMat_Tree");
L154:          if (!mbool) goto L280;
L168:          // <End Inlined EventGraph Function>;
L173:          Vector mVector = this->K2_GetActorLocation();
L201:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEventAtLocation(this, ObjectConst(AkAudioEvent /Game/FactoryGame/Equipment/NobeliskDetonator/Audio/WorldDestruction/Play_Nobelisk_WorldDestruction_SmallRock.Play_Nobelisk_WorldDestruction_SmallRock), mVector, Rotator::FromPitchYawRoll(0, 0, 0));
L275:          // <End Inlined EventGraph Function>;
L280:          mVector = this->K2_GetActorLocation();
L308:          AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAtLocation(this, ObjectConst(AkAudioEvent /Game/FactoryGame/Equipment/NobeliskDetonator/Audio/WorldDestruction/Play_Nobelisk_WorldDestruction_Tree.Play_Nobelisk_WorldDestruction_Tree), mVector, Rotator::FromPitchYawRoll(0, 0, 0));
L382:          // <End Inlined EventGraph Function>;
L387:          this->NobelisExplosive_Skel->SetHiddenInGame(true, true);
L421:          this->RadialForce->FireImpulse();
L457:          Vector mVector1 = this->K2_GetActorLocation();
L485:          ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Equipment/Weapons/Nobelisk/P_Nobelisk_Explosion_01.P_Nobelisk_Explosion_01), mVector1, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L575:          Vector mVector2 = this->K2_GetActorLocation();
L603:          AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEventAtLocation(this, ObjectConst(AkAudioEvent /Game/FactoryGame/Equipment/NobeliskDetonator/Audio/Play_E_Nobelisk_Explosion.Play_E_Nobelisk_Explosion), mVector2, Rotator::FromPitchYawRoll(0, 0, 0));
L677:          mVector2 = this->K2_GetActorLocation();
L705:          GameplayStatics->PlayWorldCameraShake(this, ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Player/CameraShake/NobeliskExplosion_01.NobeliskExplosion_01_C), mVector2, 0, 10000, 1, 1, false);
L777:          bool mbool1 = KismetStringLibrary->EqualEqual_StrStr(this->mPhysicalMaterialExplosion, "PhysMat_Tree");
L842:          bool mbool2 = KismetStringLibrary->EqualEqual_StrStr(this->mPhysicalMaterialExplosion, "PhysMat_Rock");
L907:          bool mbool3 = mbool2 || mbool1;
L945:          if (!mbool3) goto L1746;
L959:          goto L10;
L964:          this->ReceiveHit(mPrimitiveComponent, mActor, mPrimitiveComponent1, mbool4, mVector3, mVector4, mVector5, [ref] mconst HitResult);
L1046:         AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Equipment/NobeliskDetonator/Audio/Play_E_Nobelisk_Explosion_StickBump.Play_E_Nobelisk_Explosion_StickBump), this, true);
L1099:         MaterialInterface* mMaterialInterface = mPrimitiveComponent1->GetMaterial(0);
L1150:         bool mbool5 = KismetSystemLibrary->IsValid(mMaterialInterface);
L1201:         if (!mbool5) goto L1746;
L1215:         mMaterialInterface = mPrimitiveComponent1->GetMaterial(0);
L1266:         PhysicalMaterial* mPhysicalMaterial = mMaterialInterface->GetPhysicalMaterial();
L1312:         FString mFString = KismetSystemLibrary->GetDisplayName(mPhysicalMaterial);
L1371:         bool mbool6 = KismetStringLibrary->EqualEqual_StrStr(mFString, "PhysMat_Tree");
L1436:         bool mbool7 = KismetStringLibrary->EqualEqual_StrStr(mFString, "PhysMat_Rock");
L1501:         bool mbool8 = mbool7 || mbool6;
L1539:         if (!mbool8) goto L1746;
L1553:         mMaterialInterface = mPrimitiveComponent1->GetMaterial(0);
L1604:         mPhysicalMaterial = mMaterialInterface->GetPhysicalMaterial();
L1650:         mFString = KismetSystemLibrary->GetDisplayName(mPhysicalMaterial);
L1709:         this->mPhysicalMaterialExplosion = mFString;
L1736:         // <End Inlined EventGraph Function>;
L1741:         // <Begin Inlined EventGraph Function PlayExplosionEffects>;
L1741:         goto L387;
============ END FUNCTION ExecuteUbergraph_BP_NobeliskExplosive ==============
