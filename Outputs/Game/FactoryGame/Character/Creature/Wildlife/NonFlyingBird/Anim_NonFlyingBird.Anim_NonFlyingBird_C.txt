########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Anim_NonFlyingBird.Anim_NonFlyingBird_C
########################





============ BEGIN FUNCTION CalculateAnimGraphVariables ==============
L0:            bool mbool = this->mSpeed > 65;
L34:           this->mAg_WalkToRunTranstition = mbool;
L53:           bool mbool1 = this->mSpeed < 60;
L87:           this->mAG_RunToWalk = mbool1;
L106:          bool mbool2 = this->mCachedMovementMode == 3;
L137:          bool mbool3 = this->mSpeedZ > 0;
L171:          bool mbool4 = mbool2 && mbool3;
L209:          this->mAG_IsJumping = mbool4;
L228:          bool mbool5 = this->mCachedMovementMode == 3;
L259:          this->mAG_IsFalling = mbool5;
L278:          bool mbool6 = this->mSpeed > 0;
L312:          this->mAG_IdleToWalkTransition = mbool6;
L331:          bool mbool7 = this->mSpeed < 10;
L365:          this->mAG_WalkToIdleTransition = mbool7;
L384:          bool mbool8 = this->mSpeed > 0;
L418:          bool mbool9 = !this->mIsLuring;
L447:          bool mbool10 = mbool9 && mbool8;
L485:          this->mAG_LuringToMovingTransition = mbool10;
L504:          bool mbool11 = this->mCachedMovementMode == this->mCachedDefaultWalkMode;
L542:          this->mAG_IsWalking = mbool11;
L561:          BreakRotator(this->mRootRotation, [ref] mfloat, [ref] mfloat1, [ref] mfloat2);
L607:          float mfloat3 = ClampAngle(mfloat1, -5, 5);
L654:          float mfloat4 = ClampAngle(mfloat, -25, 25);
L701:          Rotator mRotator = MakeRotator(mfloat4, mfloat3, 0);
L752:          this->mAG_SurfaceRotationClamp = mRotator;
L779:          bool mbool12 = this->mCachedMovementMode == this->mCachedDefaultWalkMode;
L817:          bool mbool13 = this->mSpeed > 100;
L851:          bool mbool14 = mbool13 && mbool12;
L889:          this->mAG_IsRunning = mbool14;
L908:          float mfloat5 = ClampAngle(this->mYawDelta, -45, 45);
L955:          Rotator mRotator1 = MakeRotator(0, 0, mfloat5);
L1002:         this->mAG_RunLeanRotationSpine = mRotator1;
L1029:         float mfloat6 = ClampAngle(this->mYawDelta, -30, 30);
L1076:         Rotator mRotator2 = MakeRotator(0, mfloat6, 0);
L1123:         this->mAG_RunLeanRotationPelvis = mRotator2;
L1150:         float mfloat7 = ClampAngle(this->mYawDelta, -25, 25);
L1197:         Rotator mRotator3 = MakeRotator(mfloat7, 0, 0);
L1244:         this->mAG_WalkLeanRotationHead = mRotator3;
L1271:         float mfloat8 = ClampAngle(this->mYawDelta, -35, 35);
L1318:         Rotator mRotator4 = MakeRotator(0, mfloat8, 0);
L1365:         this->mAG_WalkLeanRotationSpine = mRotator4;
L1392:         float mfloat9 = ClampAngle(this->mYawDelta, -30, 30);
L1439:         Rotator mRotator5 = MakeRotator(0, mfloat9, 0);
L1486:         this->mAG_WalkLeanRotationTail = mRotator5;
============ END FUNCTION CalculateAnimGraphVariables ==============





============ BEGIN FUNCTION EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_60BE805E4E0C482A65AABD803219B2BD ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_60BE805E4E0C482A65AABD803219B2BD;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L484;
============ END FUNCTION EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_60BE805E4E0C482A65AABD803219B2BD ==============





============ BEGIN FUNCTION EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_93F56C3644CD506A5E44A9B89733CE4D ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_93F56C3644CD506A5E44A9B89733CE4D;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L311;
============ END FUNCTION EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_93F56C3644CD506A5E44A9B89733CE4D ==============





============ BEGIN FUNCTION OnRadialDamageTaken ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnRadialDamageTaken;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L914;
============ END FUNCTION OnRadialDamageTaken ==============





============ BEGIN FUNCTION OnPointDamageTaken ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnPointDamageTaken;
L18:           // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L919;
============ END FUNCTION OnPointDamageTaken ==============





============ BEGIN FUNCTION AnimNotify_NFBEnteredIdleLuringState ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_NFBEnteredIdleLuringState;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1243;
============ END FUNCTION AnimNotify_NFBEnteredIdleLuringState ==============





============ BEGIN FUNCTION AnimNotify_AnimNotify_NFB_Jump ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AnimNotify_NFB_Jump;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1375;
============ END FUNCTION AnimNotify_AnimNotify_NFB_Jump ==============





============ BEGIN FUNCTION AnimNotify_AnimNotify_NFB_Land ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AnimNotify_NFB_Land;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1407;
============ END FUNCTION AnimNotify_AnimNotify_NFB_Land ==============





============ BEGIN FUNCTION AnimNotify_NFB_EnteredMoving ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_NFB_EnteredMoving;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1412;
============ END FUNCTION AnimNotify_NFB_EnteredMoving ==============





============ BEGIN FUNCTION AnimNotify_NFBLeftLuringState ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_NFBLeftLuringState;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1666;
============ END FUNCTION AnimNotify_NFBLeftLuringState ==============





============ BEGIN FUNCTION AnimNotify_NFB_LeftMoving ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_NFB_LeftMoving;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1667;
============ END FUNCTION AnimNotify_NFB_LeftMoving ==============





============ BEGIN FUNCTION AnimNotify_AnimNotify_NFB_VO_Long ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AnimNotify_NFB_VO_Long;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1672;
============ END FUNCTION AnimNotify_AnimNotify_NFB_VO_Long ==============





============ BEGIN FUNCTION BlueprintUpdateAnimation ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: BlueprintUpdateAnimation;
L18:           // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1692;
============ END FUNCTION BlueprintUpdateAnimation ==============





============ BEGIN FUNCTION AnimNotify_AnimNotify_NFB_JumpLoop ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AnimNotify_NFB_JumpLoop;
L0:            // Implementation: Function ExecuteUbergraph_Anim_NonFlyingBird, from label L1716;
============ END FUNCTION AnimNotify_AnimNotify_NFB_JumpLoop ==============





============ BEGIN FUNCTION ExecuteUbergraph_Anim_NonFlyingBird ==============
L5:            goto ComputedJump(EntryPoint);
L15:           ExecutionFlow.Push(L183);
L20:           Actor* mActor = this->GetOwningActor();
L40:           AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Play_E_NonFlyingBird_Land.Play_E_NonFlyingBird_Land), mActor, true);
L101:          mActor = this->GetOwningActor();
L121:          AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Stop_E_NonFlyingBird_Call_Long.Stop_E_NonFlyingBird_Call_Long), mActor, true);
L182:          goto ExecutionFlow.Pop();
L183:          bool Temp_bool_IsClosed_Variable = false;
L194:          bool Temp_bool_Has_Been_Initd_Variable = true;
L205:          goto ExecutionFlow.Pop();
L206:          this->mPointDmgTaken = false;
L217:          goto ExecutionFlow.Pop();
L218:          this->mRadialDmgTaken = false;
L229:          Actor* mActor1 = this->GetOwningActor();
L249:          AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Play_E_NonFlyingBird_Hurt.Play_E_NonFlyingBird_Hurt), mActor1, true);
L310:          goto ExecutionFlow.Pop();
L311:          // <Begin Inlined EventGraph Function EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_93F56C3644CD506A5E44A9B89733CE4D>;
L311:          float mfloat = this->GetRelevantAnimTimeRemaining(38, 4);
L349:          bool mbool = mfloat < 0.20000000298023224;
L383:          bool mbool1 = this->mSpeed < 5;
L417:          bool mbool2 = mbool && mbool1;
L455:          this->AnimGraphNode_TransitionResult_93F56C3644CD506A5E44A9B89733CE4D.bCanEnterTransition = mbool2;
L483:          goto ExecutionFlow.Pop();
L484:          // <Begin Inlined EventGraph Function EvaluateGraphExposedInputs_ExecuteUbergraph_Anim_NonFlyingBird_AnimGraphNode_TransitionResult_60BE805E4E0C482A65AABD803219B2BD>;
L484:          float mfloat1 = this->GetRelevantAnimTimeRemaining(38, 4);
L522:          bool mbool3 = this->mSpeed > 10;
L556:          bool mbool4 = mfloat1 < 0.20000000298023224;
L590:          bool mbool5 = mbool4 && mbool3;
L628:          this->AnimGraphNode_TransitionResult_60BE805E4E0C482A65AABD803219B2BD.bCanEnterTransition = mbool5;
L656:          goto ExecutionFlow.Pop();
L657:          this->mPointDmgTaken = true;
L668:          Actor* mActor2 = this->GetOwningActor();
L688:          AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Play_E_NonFlyingBird_Hurt.Play_E_NonFlyingBird_Hurt), mActor2, true);
L749:          KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 206, UUID = 1513111543, ExecutionFunction = "ExecuteUbergraph_Anim_NonFlyingBird", CallbackTarget = this));
L825:          goto ExecutionFlow.Pop();
L826:          this->mRadialDmgTaken = true;
L837:          KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 218, UUID = -1729238364, ExecutionFunction = "ExecuteUbergraph_Anim_NonFlyingBird", CallbackTarget = this));
L913:          goto ExecutionFlow.Pop();
L914:          // <Begin Inlined EventGraph Function OnRadialDamageTaken>;
L914:          goto L826;
L919:          Vector mVector = mVector1 * -1;
L961:          FGCharacterBase* mFGCharacterBase = this->GetCachedCharacter();
L981:          Transform mTransform = mFGCharacterBase->GetTransform();
L1031:         Vector mVector2 = InverseTransformDirection([ref] mTransform, mVector);
L1077:         Vector mVector3 = Normal(mVector2, 0.00009999999747378752);
L1119:         BreakVector(mVector3, [ref] mfloat2, [ref] mfloat3, [ref] mfloat4);
L1165:         float mfloat5 = DegAtan2(mfloat3, mfloat2);
L1211:         this->mHitDirection = mfloat5;
L1238:         goto L657;
L1243:         // <Begin Inlined EventGraph Function AnimNotify_NFBEnteredIdleLuringState>;
L1243:         goto ExecutionFlow.Pop();
L1244:         if (!Temp_bool_IsClosed_Variable) goto L1259;
L1258:         goto ExecutionFlow.Pop();
L1259:         Temp_bool_IsClosed_Variable = true;
L1270:         mActor = this->GetOwningActor();
L1290:         AkComponent* mAkComponent4 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Play_E_NonFlyingBird_Jump.Play_E_NonFlyingBird_Jump), mActor, true);
L1351:         goto L101;
L1356:         Temp_bool_IsClosed_Variable = true;
L1367:         goto ExecutionFlow.Pop();
L1368:         if (!false) goto ExecutionFlow.Pop();
L1370:         goto L1356;
L1375:         // <Begin Inlined EventGraph Function AnimNotify_AnimNotify_NFB_Jump>;
L1375:         goto ExecutionFlow.Pop();
L1376:         Temp_bool_Has_Been_Initd_Variable = true;
L1387:         goto L1368;
L1392:         if (!Temp_bool_Has_Been_Initd_Variable) goto L1376;
L1406:         goto ExecutionFlow.Pop();
L1407:         // <Begin Inlined EventGraph Function AnimNotify_AnimNotify_NFB_Land>;
L1407:         goto L15;
L1412:         // <Begin Inlined EventGraph Function AnimNotify_NFB_EnteredMoving>;
L1412:         mActor = this->GetOwningActor();
L1432:         AkComponent* mAkComponent5 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Play_E_NonFlyingBird_Walk_Rustling.Play_E_NonFlyingBird_Walk_Rustling), mActor, true);
L1493:         goto L101;
L1498:         mActor = this->GetOwningActor();
L1518:         AkComponent* mAkComponent6 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Stop_E_NonFlyingBird_Walk_Rustling.Stop_E_NonFlyingBird_Walk_Rustling), mActor, true);
L1579:         goto L101;
L1584:         mActor = this->GetOwningActor();
L1604:         AkComponent* mAkComponent7 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/NonFlyingBird/Audio/Play_E_NonFlyingBird_Call_Long.Play_E_NonFlyingBird_Call_Long), mActor, true);
L1665:         goto ExecutionFlow.Pop();
L1666:         // <Begin Inlined EventGraph Function AnimNotify_NFBLeftLuringState>;
L1666:         goto ExecutionFlow.Pop();
L1667:         // <Begin Inlined EventGraph Function AnimNotify_NFB_LeftMoving>;
L1667:         goto L1498;
L1672:         // <Begin Inlined EventGraph Function AnimNotify_AnimNotify_NFB_VO_Long>;
L1672:         goto L1584;
L1677:         this->CalculateAnimGraphVariables();
L1691:         goto ExecutionFlow.Pop();
L1692:         this->BlueprintUpdateAnimation(mfloat6);
L1711:         goto L1677;
L1716:         // <Begin Inlined EventGraph Function AnimNotify_AnimNotify_NFB_JumpLoop>;
L1716:         ExecutionFlow.Push(L1244);
L1721:         goto L1392;
============ END FUNCTION ExecuteUbergraph_Anim_NonFlyingBird ==============
