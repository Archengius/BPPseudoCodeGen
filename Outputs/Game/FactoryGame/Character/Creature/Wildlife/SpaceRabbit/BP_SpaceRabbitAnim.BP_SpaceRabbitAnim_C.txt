########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/BP_SpaceRabbitAnim.BP_SpaceRabbitAnim_C
########################





============ BEGIN FUNCTION CalculateAnimGraphValues ==============
L0:            bool mbool = this->mSpeed > 450;
L34:           this->mAG_WalkToRunTransition = mbool;
L53:           bool mbool1 = this->mSpeed < 350;
L87:           this->mAG_RunToWalkTransition = mbool1;
L106:          bool mbool2 = this->mCachedMovementMode == 3;
L137:          this->mAG_IsFalling = mbool2;
L156:          bool mbool3 = this->mSpeed > 0;
L190:          this->mAG_IdleToWalkTransition = mbool3;
L209:          bool mbool4 = this->mSpeed < 10;
L243:          this->mAG_WalkToIdleTransition = mbool4;
L262:          bool mbool5 = this->mSpeed > 0;
L296:          bool mbool6 = this->mCachedMovementMode == this->mCachedDefaultWalkMode;
L334:          bool mbool7 = mbool6 && mbool5;
L372:          this->mAG_FallingToWalkTransition = mbool7;
L391:          bool mbool8 = this->mCachedMovementMode == this->mCachedDefaultWalkMode;
L429:          this->mAG_IsWalking = mbool8;
L448:          bool mbool9 = !this->mIsWalkingBackwards;
L477:          bool mbool10 = this->mSpeed > 0;
L511:          bool mbool11 = mbool10 && mbool9;
L549:          this->mAG_WalkingBwdToWalkingTransition = mbool11;
L568:          bool mbool12 = this->mSpeed < 10;
L602:          bool mbool13 = !this->mIsWalkingBackwards;
L631:          bool mbool14 = mbool12 && mbool13;
L669:          this->mAG_WalkingBwdToIdleTransition = mbool14;
L688:          float mfloat = this->mAimYaw * -1;
L730:          this->mAG_InvertedAimYaw = mfloat;
L757:          BreakRotator(this->mRootRotation, [ref] mfloat1, [ref] mfloat2, [ref] mfloat3);
L803:          float mfloat4 = ClampAngle(mfloat2, -5, 5);
L850:          float mfloat5 = ClampAngle(mfloat1, -25, 25);
L897:          Rotator mRotator = MakeRotator(mfloat5, mfloat4, 0);
L948:          this->mAG_SurfaceRotationClamp = mRotator;
L975:          bool mbool15 = this->mSpeed > 200;
L1009:         bool mbool16 = this->mCachedMovementMode == this->mCachedDefaultWalkMode;
L1047:         bool mbool17 = mbool15 && mbool16;
L1085:         this->mAG_IsRunning = mbool17;
L1104:         bool mbool18 = this->mCachedMovementMode == this->mCachedDefaultWalkMode;
L1142:         bool mbool19 = mbool18 && this->mIsWalkingBackwards;
L1180:         this->mAG_WalkingBwdLean = mbool19;
L1199:         float mfloat6 = ClampAngle(this->mYawDelta, -60, 60);
L1246:         Rotator mRotator1 = MakeRotator(0, mfloat6, 0);
L1293:         this->mAG_WalkBwdLeanRotationHead = mRotator1;
L1320:         float mfloat7 = ClampAngle(this->mYawDelta, -45, 45);
L1367:         Rotator mRotator2 = MakeRotator(0, mfloat7, 0);
L1414:         Rotator mRotator3 = NegateRotator(mRotator2);
L1451:         this->mAG_WalkBwdLeanRotationSpine = mRotator3;
L1478:         float mfloat8 = ClampAngle(this->mYawDelta, -45, 45);
L1525:         Rotator mRotator4 = MakeRotator(0, 0, mfloat8);
L1572:         this->mAG_RunLeanRotationSpine = mRotator4;
L1599:         float mfloat9 = ClampAngle(this->mYawDelta, -30, 30);
L1646:         Rotator mRotator5 = MakeRotator(0, mfloat9, 0);
L1693:         this->mAG_RunLeanRotationPelvis = mRotator5;
============ END FUNCTION CalculateAnimGraphValues ==============





============ BEGIN FUNCTION BlueprintUpdateAnimation ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: BlueprintUpdateAnimation;
L18:           // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L886;
============ END FUNCTION BlueprintUpdateAnimation ==============





============ BEGIN FUNCTION OnRadialDamageTaken ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnRadialDamageTaken;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1194;
============ END FUNCTION OnRadialDamageTaken ==============





============ BEGIN FUNCTION OnPointDamageTaken ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnPointDamageTaken;
L18:           // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1199;
============ END FUNCTION OnPointDamageTaken ==============





============ BEGIN FUNCTION AnimNotify_AudioNotify_SpaceBunny_RTPC_1 ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AudioNotify_SpaceBunny_RTPC_1;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1523;
============ END FUNCTION AnimNotify_AudioNotify_SpaceBunny_RTPC_1 ==============





============ BEGIN FUNCTION AnimNotify_AudioNotify_SpaceBunny_RTPC_2 ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AudioNotify_SpaceBunny_RTPC_2;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1612;
============ END FUNCTION AnimNotify_AudioNotify_SpaceBunny_RTPC_2 ==============





============ BEGIN FUNCTION AnimNotify_AudioNotify_SpaceBunny_RTPC_3 ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AudioNotify_SpaceBunny_RTPC_3;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1701;
============ END FUNCTION AnimNotify_AudioNotify_SpaceBunny_RTPC_3 ==============





============ BEGIN FUNCTION AnimNotify_AudioNotify_SpaceBunny_SupressBreath ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AudioNotify_SpaceBunny_SupressBreath;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1790;
============ END FUNCTION AnimNotify_AudioNotify_SpaceBunny_SupressBreath ==============





============ BEGIN FUNCTION AnimNotify_AudioNotify_SpaceBunny_ReleaseBreath ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AnimNotify_AudioNotify_SpaceBunny_ReleaseBreath;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpaceRabbitAnim, from label L1885;
============ END FUNCTION AnimNotify_AudioNotify_SpaceBunny_ReleaseBreath ==============





============ BEGIN FUNCTION ExecuteUbergraph_BP_SpaceRabbitAnim ==============
L5:            goto ComputedJump(EntryPoint);
L15:           ExecutionFlow.Push(L397);
L20:           Pawn* mPawn = this->TryGetPawnOwner();
L44:           Char_SpaceRabbit* mChar_SpaceRabbit = Cast<BlueprintGeneratedClass /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/Char_SpaceRabbit.Char_SpaceRabbit_C>(mPawn);
L80:           bool mbool = mChar_SpaceRabbit;
L109:          if (!mbool) goto ExecutionFlow.Pop();
L119:          this->mRabbitPawn = mChar_SpaceRabbit;
L138:          this->mIsWalkingBackwards = this->mRabbitPawn->mIsWalkingBackwards;
L179:          bool mbool1 = KismetSystemLibrary->IsValid(this->mRabbitPawn->mFriendActor);
L252:          this->mIsFriend = mbool1;
L271:          bool mbool2 = KismetSystemLibrary->IsValid(this->mRabbitPawn->mPotentialThreat);
L344:          this->mIsThreatened = mbool2;
L363:          if (!this->mIsFriend) goto L412;
L377:          ExecutionFlow.Push(L600);
L382:          if (!Temp_bool_Has_Been_Initd_Variable1) goto L837;
L396:          goto ExecutionFlow.Pop();
L397:          this->CalculateAnimGraphValues();
L411:          goto ExecutionFlow.Pop();
L412:          ExecutionFlow.Push(L457);
L417:          if (!Temp_bool_Has_Been_Initd_Variable) goto L432;
L431:          goto ExecutionFlow.Pop();
L432:          bool Temp_bool_Has_Been_Initd_Variable = true;
L443:          if (!false) goto ExecutionFlow.Pop();
L445:          bool Temp_bool_IsClosed_Variable = true;
L456:          goto ExecutionFlow.Pop();
L457:          if (!Temp_bool_IsClosed_Variable) goto L472;
L471:          goto ExecutionFlow.Pop();
L472:          Temp_bool_IsClosed_Variable = true;
L483:          SkeletalMeshComponent* mSkeletalMeshComponent = this->GetOwningComponent();
L503:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/Audio/Stop_E_SpaceBunny_VO_Breathing.Stop_E_SpaceBunny_VO_Breathing), mSkeletalMeshComponent, "jaw", true);
L577:          bool Temp_bool_IsClosed_Variable1 = false;
L588:          bool Temp_bool_Has_Been_Initd_Variable1 = true;
L599:          goto ExecutionFlow.Pop();
L600:          if (!Temp_bool_IsClosed_Variable1) goto L615;
L614:          goto ExecutionFlow.Pop();
L615:          Temp_bool_IsClosed_Variable1 = true;
L626:          mSkeletalMeshComponent = this->GetOwningComponent();
L646:          AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/Audio/Play_E_SpaceBunny_VO_Breathing.Play_E_SpaceBunny_VO_Breathing), mSkeletalMeshComponent, "jaw", true);
L720:          mSkeletalMeshComponent = this->GetOwningComponent();
L740:          AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/Audio/Reset_Voice_Volume_E_SpaceBunny_VO_Breathing.Reset_Voice_Volume_E_SpaceBunny_VO_Breathing), mSkeletalMeshComponent, "jaw", true);
L814:          Temp_bool_IsClosed_Variable = false;
L825:          Temp_bool_Has_Been_Initd_Variable = true;
L836:          goto ExecutionFlow.Pop();
L837:          Temp_bool_Has_Been_Initd_Variable1 = true;
L848:          if (!false) goto ExecutionFlow.Pop();
L850:          Temp_bool_IsClosed_Variable1 = true;
L861:          goto ExecutionFlow.Pop();
L862:          this->mPointDmgTaken = false;
L873:          goto ExecutionFlow.Pop();
L874:          this->mRadialDmgTaken = false;
L885:          goto ExecutionFlow.Pop();
L886:          this->mDeltaTime = mfloat;
L913:          this->BlueprintUpdateAnimation(this->mDeltaTime);
L932:          FGCharacterBase* mFGCharacterBase = this->GetCachedCharacter();
L952:          bool mbool3 = KismetSystemLibrary->IsValid(mFGCharacterBase);
L1003:         if (!mbool3) goto ExecutionFlow.Pop();
L1013:         goto L15;
L1018:         this->mPointDmgTaken = true;
L1029:         KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 862, UUID = 553882366, ExecutionFunction = "ExecuteUbergraph_BP_SpaceRabbitAnim", CallbackTarget = this));
L1105:         goto ExecutionFlow.Pop();
L1106:         this->mRadialDmgTaken = true;
L1117:         KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 874, UUID = -547565271, ExecutionFunction = "ExecuteUbergraph_BP_SpaceRabbitAnim", CallbackTarget = this));
L1193:         goto ExecutionFlow.Pop();
L1194:         // <Begin Inlined EventGraph Function OnRadialDamageTaken>;
L1194:         goto L1106;
L1199:         Vector mVector = mVector1 * -1;
L1241:         FGCharacterBase* mFGCharacterBase1 = this->GetCachedCharacter();
L1261:         Transform mTransform = mFGCharacterBase1->GetTransform();
L1311:         Vector mVector2 = InverseTransformDirection([ref] mTransform, mVector);
L1357:         Vector mVector3 = Normal(mVector2, 0.00009999999747378752);
L1399:         BreakVector(mVector3, [ref] mfloat1, [ref] mfloat2, [ref] mfloat3);
L1445:         float mfloat4 = DegAtan2(mfloat2, mfloat1);
L1491:         this->mHitDirection = mfloat4;
L1518:         goto L1018;
L1523:         // <Begin Inlined EventGraph Function AnimNotify_AudioNotify_SpaceBunny_RTPC_1>;
L1523:         Actor* mActor = this->GetOwningActor();
L1543:         AkGameplayStatics->SetActorRTPCValue("RTPC_E_SpaceBunny_Breathing", 0.5, 0, mActor);
L1607:         goto L363;
L1612:         // <Begin Inlined EventGraph Function AnimNotify_AudioNotify_SpaceBunny_RTPC_2>;
L1612:         mActor = this->GetOwningActor();
L1632:         AkGameplayStatics->SetActorRTPCValue("RTPC_E_SpaceBunny_Breathing", 1.5, 0, mActor);
L1696:         goto L363;
L1701:         // <Begin Inlined EventGraph Function AnimNotify_AudioNotify_SpaceBunny_RTPC_3>;
L1701:         mActor = this->GetOwningActor();
L1721:         AkGameplayStatics->SetActorRTPCValue("RTPC_E_SpaceBunny_Breathing", 2.5, 0, mActor);
L1785:         goto L363;
L1790:         // <Begin Inlined EventGraph Function AnimNotify_AudioNotify_SpaceBunny_SupressBreath>;
L1790:         SkeletalMeshComponent* mSkeletalMeshComponent1 = this->GetOwningComponent();
L1810:         AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/Audio/Set_Voice_Volume_E_SpaceBunny_VO_Breathing.Set_Voice_Volume_E_SpaceBunny_VO_Breathing), mSkeletalMeshComponent1, "jaw", true);
L1884:         goto ExecutionFlow.Pop();
L1885:         // <Begin Inlined EventGraph Function AnimNotify_AudioNotify_SpaceBunny_ReleaseBreath>;
L1885:         mSkeletalMeshComponent1 = this->GetOwningComponent();
L1905:         AkComponent* mAkComponent4 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Wildlife/SpaceRabbit/Audio/Reset_Voice_Volume_E_SpaceBunny_VO_Breathing.Reset_Voice_Volume_E_SpaceBunny_VO_Breathing), mSkeletalMeshComponent1, "jaw", true);
L1979:         goto ExecutionFlow.Pop();
============ END FUNCTION ExecuteUbergraph_BP_SpaceRabbitAnim ==============
