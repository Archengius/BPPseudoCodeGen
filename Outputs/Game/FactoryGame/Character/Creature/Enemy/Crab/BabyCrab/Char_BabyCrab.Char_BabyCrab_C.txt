########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Character/Creature/Enemy/Crab/BabyCrab/Char_BabyCrab.Char_BabyCrab_C
########################





============ BEGIN FUNCTION ReceiveHit ==============
L144:          // EventGraph implemented function stub;
L144:          // Function Name: ReceiveHit;
L144:          // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L3715;
============ END FUNCTION ReceiveHit ==============





============ BEGIN FUNCTION Got Damaged ==============
L90:           // EventGraph implemented function stub;
L90:           // Function Name: Got Damaged;
L90:           // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L5253;
============ END FUNCTION Got Damaged ==============





============ BEGIN FUNCTION ResetMovement ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ResetMovement;
L0:            // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L5534;
============ END FUNCTION ResetMovement ==============





============ BEGIN FUNCTION BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature ==============
L108:          // EventGraph implemented function stub;
L108:          // Function Name: BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature;
L108:          // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L5539;
============ END FUNCTION BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature ==============





============ BEGIN FUNCTION KillOrphanCrabs ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: KillOrphanCrabs;
L0:            // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L6198;
============ END FUNCTION KillOrphanCrabs ==============





============ BEGIN FUNCTION Event Check Subtitle Distance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Event Check Subtitle Distance;
L0:            // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L6474;
============ END FUNCTION Event Check Subtitle Distance ==============





============ BEGIN FUNCTION ChargingMovement ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ChargingMovement;
L0:            // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L6475;
============ END FUNCTION ChargingMovement ==============





============ BEGIN FUNCTION ReceiveTick ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ReceiveTick;
L18:           // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L9937;
============ END FUNCTION ReceiveTick ==============





============ BEGIN FUNCTION ReceiveDied ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ReceiveDied;
L0:            // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L9976;
============ END FUNCTION ReceiveDied ==============





============ BEGIN FUNCTION ReceiveEndPlay ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ReceiveEndPlay;
L18:           // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L9981;
============ END FUNCTION ReceiveEndPlay ==============





============ BEGIN FUNCTION ReceiveBeginPlay ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ReceiveBeginPlay;
L0:            // Implementation: Function ExecuteUbergraph_Char_BabyCrab, from label L10024;
============ END FUNCTION ReceiveBeginPlay ==============





============ BEGIN FUNCTION ExecuteUbergraph_Char_BabyCrab ==============
L5:            goto ComputedJump(EntryPoint);
L15:           this->mCanAttack = true;
L26:           this->CapsuleComponent->SetSimulatePhysics(false);
L63:           goto ExecutionFlow.Pop();
L64:           this->mCanAttack = true;
L75:           this->CapsuleComponent->SetSimulatePhysics(false);
L112:          goto ExecutionFlow.Pop();
L113:          Vector mVector = this->CapsuleComponent->GetPhysicsLinearVelocity("None");
L176:          Vector mVector1 = mVector * Vector(1, 1, 0.10000000149011612);
L226:          Vector mVector2 = Normal(mVector1, 0.00009999999747378752);
L268:          Vector mVector3 = mVector2 * -600;
L310:          this->mTargetOffsetTargetPos = mVector3;
L337:          this->mReEvalTimer = 2.4000000953674316;
L360:          float mfloat = RandomFloatInRange(459, 800);
L398:          this->CharacterMovement->MaxFlySpeed = mfloat;
L447:          this->mRotationRate = 30;
L470:          this->mTargetDistance = 500;
L493:          Vector mVector4 = mVector * -1.3300000429153442;
L535:          float mfloat1 = RandomFloatInRange(-600, 600);
L573:          float mfloat2 = RandomFloatInRange(-600, 600);
L611:          float mfloat3 = RandomFloatInRange(100, 600);
L649:          Vector mVector5 = MakeVector(mfloat1, mfloat2, mfloat3);
L704:          Vector mVector6 = mVector4 + mVector5;
L750:          this->CapsuleComponent->AddImpulse(mVector6, "None", true);
L809:          KismetSystemLibrary->Delay(this, 1.7999999523162842, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 15, UUID = 179724655, ExecutionFunction = "ExecuteUbergraph_Char_BabyCrab", CallbackTarget = this));
L885:          goto ExecutionFlow.Pop();
L886:          this->CapsuleComponent->SetSimulatePhysics(false);
L923:          this->mCanAttack = true;
L934:          goto ExecutionFlow.Pop();
L935:          this->CapsuleComponent->SetSimulatePhysics(true);
L972:          KismetSystemLibrary->Delay(this, 1, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 886, UUID = 136485694, ExecutionFunction = "ExecuteUbergraph_Char_BabyCrab", CallbackTarget = this));
L1048:         goto ExecutionFlow.Pop();
L1049:         mFScriptDelegate->BindUFunction(this, Got Damaged);
L1072:         this->OnTakeAnyDamage.AddUnique(mFScriptDelegate);
L1091:         KismetSystemLibrary->Delay(this, 0.5, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 64, UUID = -1983139921, ExecutionFunction = "ExecuteUbergraph_Char_BabyCrab", CallbackTarget = this));
L1167:         goto ExecutionFlow.Pop();
L1168:         bool mbool = this->mReEvalTimer <= 0;
L1202:         if (!mbool) goto ExecutionFlow.Pop();
L1212:         this->ChargingMovement();
L1226:         goto ExecutionFlow.Pop();
L1227:         this->mCanAttack = false;
L1238:         KismetSystemLibrary->Delay(this, 0.10000000149011612, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 113, UUID = 1921766502, ExecutionFunction = "ExecuteUbergraph_Char_BabyCrab", CallbackTarget = this));
L1314:         goto ExecutionFlow.Pop();
L1315:         bool mbool1 = this->IsAliveAndWell();
L1335:         bool mbool2 = mbool1 && this->mCanAttack;
L1373:         if (!mbool2) goto ExecutionFlow.Pop();
L1383:         FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mActor);
L1419:         bool mbool3 = mFGCharacterPlayer;
L1448:         if (!mbool3) goto ExecutionFlow.Pop();
L1458:         Controller* mController = this->GetController();
L1478:         bool mbool4 = KismetSystemLibrary->IsValid(mController);
L1529:         if (!mbool4) goto ExecutionFlow.Pop();
L1539:         Controller* mController1 = this->GetController();
L1559:         float mfloat4 = GameplayStatics->ApplyDamage(mFGCharacterPlayer, 5, mController1, this, ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Creature/Enemy/Hog/DamageType_HogHit.DamageType_HogHit_C));
L1642:         SkeletalMeshComponent* mSkeletalMeshComponent = this->GetMesh3P();
L1666:         Vector mVector7 = mSkeletalMeshComponent->K2_GetComponentLocation();
L1716:         ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/Character/Creature/Enemy/Crab/Particle/BabyCrabTakeDmg_01.BabyCrabTakeDmg_01), mVector7, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L1806:         this->CapsuleComponent->SetSimulatePhysics(true);
L1843:         goto L1227;
L1848:         this->mCanAttack = false;
L1859:         KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 935, UUID = 1261590653, ExecutionFunction = "ExecuteUbergraph_Char_BabyCrab", CallbackTarget = this));
L1935:         goto ExecutionFlow.Pop();
L1936:         this->CapsuleComponent->SetSimulatePhysics(false);
L1973:         AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Enemy/CrabHatcher/Audio/Play_E_Hatchery_Baby.Play_E_Hatchery_Baby), this, true);
L2026:         float mfloat5 = RandomFloatInRange(-1, 1);
L2064:         float mfloat6 = RandomFloatInRange(-1, 1);
L2102:         Vector mVector8 = MakeVector(mfloat5, mfloat6, 0);
L2153:         Vector mVector9 = Normal(mVector8, 0.00009999999747378752);
L2195:         this->mTargetMoveDir = mVector9;
L2222:         this->mTargetDistance = 500;
L2245:         ExecutionFlow.Push(L2270);
L2250:         ExecutionFlow.Push(L1049);
L2255:         this->ResetMovement();
L2269:         goto ExecutionFlow.Pop();
L2270:         this->Event Check Subtitle Distance();
L2284:         mFScriptDelegate1->BindUFunction(this, Event Check Subtitle Distance);
L2307:         TimerHandle mTimerHandle = KismetSystemLibrary->K2_SetTimerDelegate(mFScriptDelegate1, 1, true);
L2372:         this->mSubtitleTimer = mTimerHandle;
L2399:         goto ExecutionFlow.Pop();
L2400:         if (!this->mCanAttack) goto L3657;
L2414:         Actor* mActor1 = this->GetCurrentAggroTarget();
L2434:         bool mbool5 = KismetSystemLibrary->IsValid(mActor1);
L2485:         if (!mbool5) goto ExecutionFlow.Pop();
L2495:         Rotator mRotator = this->K2_GetActorRotation();
L2523:         Vector mVector10 = this->Mesh->K2_GetComponentLocation();
L2573:         float mfloat7 = GameplayStatics->GetWorldDeltaSeconds(this);
L2624:         Actor* mActor2 = this->GetCurrentAggroTarget();
L2644:         Vector mVector11 = mActor2->K2_GetActorLocation();
L2694:         Vector mVector12 = mVector11 + this->mTargetOffsetTargetPos;
L2740:         Rotator mRotator1 = FindLookAtRotation([ref] mVector10, [ref] mVector12);
L2786:         float mfloat8 = this->mTargetDistance * this->mReEvalTimer;
L2832:         float mfloat9 = FClamp(mfloat8, 0.029999999329447746, 1);
L2879:         float mfloat10 = mfloat9 * this->mRotationRate;
L2925:         Rotator mRotator2 = RInterpTo(mRotator, mRotator1, mfloat7, mfloat10);
L2989:         bool mbool6 = this->K2_SetActorRotation(mRotator2, false);
L3019:         mRotator = this->K2_GetActorRotation();
L3047:         mVector10 = this->Mesh->K2_GetComponentLocation();
L3097:         mfloat7 = GameplayStatics->GetWorldDeltaSeconds(this);
L3148:         mActor2 = this->GetCurrentAggroTarget();
L3168:         mVector11 = mActor2->K2_GetActorLocation();
L3218:         mVector12 = mVector11 + this->mTargetOffsetTargetPos;
L3264:         mRotator1 = FindLookAtRotation([ref] mVector10, [ref] mVector12);
L3310:         mfloat8 = this->mTargetDistance * this->mReEvalTimer;
L3356:         mfloat9 = FClamp(mfloat8, 0.029999999329447746, 1);
L3403:         mfloat10 = mfloat9 * this->mRotationRate;
L3449:         mRotator2 = RInterpTo(mRotator, mRotator1, mfloat7, mfloat10);
L3513:         Vector mVector13 = Conv_RotatorToVector(mRotator2);
L3550:         this->AddMovementInput(mVector13, 1, false);
L3579:         float mfloat11 = this->mReEvalTimer - mfloat12;
L3625:         this->mReEvalTimer = mfloat11;
L3652:         goto L1168;
L3657:         Vector mVector14 = this->GetActorForwardVector();
L3685:         this->AddMovementInput(mVector14, 1, false);
L3714:         goto ExecutionFlow.Pop();
L3715:         goto L1315;
L3720:         int32 mint32 = RandomIntegerInRange(0, 2);
L3758:         this->mStrategyType = mint32;
L3785:         this->ReceiveBeginPlay();
L3795:         goto L1936;
L3800:         float mfloat13 = RandomFloatInRange(0.4000000059604645, 9);
L3838:         int32 Temp_int_Variable1 = this->mStrategyType;
L3865:         float mfloat14 = RandomFloatInRange(3, 12);
L3903:         this->mRotationRate = switch (Temp_int_Variable1) {
case 0 -> mfloat13;
case 1 -> mfloat14;
case 2 -> mfloat14;
default -> mfloat15;
};
L4000:         float Temp_float_Variable = 1200;
L4023:         float mfloat16 = RandomFloatInRange(520, 1000);
L4061:         bool mbool7 = this->mTargetDistance > 900;
L4095:         bool mbool8 = this->mTargetDistance > 1400;
L4129:         bool Temp_bool_Variable2 = mbool8;
L4148:         int32 Temp_int_Variable2 = this->mStrategyType;
L4175:         float Temp_float_Variable1 = 1430;
L4198:         bool Temp_bool_Variable10 = mbool7;
L4217:         this->CharacterMovement->MaxFlySpeed = switch (Temp_int_Variable2) {
case 0 -> switch (Temp_bool_Variable2) {
case false -> mfloat16;
case true -> Temp_float_Variable;
default -> mfloat18;
};
case 1 -> switch (Temp_bool_Variable10) {
case false -> mfloat16;
case true -> Temp_float_Variable1;
default -> mfloat19;
};
case 2 -> switch (Temp_bool_Variable10) {
case false -> mfloat16;
case true -> Temp_float_Variable1;
default -> mfloat19;
};
default -> mfloat17;
};
L4468:         goto ExecutionFlow.Pop();
L4469:         float mfloat20 = RandomFloatInRange(50, 364);
L4507:         bool mbool9 = this->mTargetDistance > 300;
L4541:         bool Temp_bool_Variable = mbool9;
L4560:         float mfloat21 = RandomFloatInRange(0, 54);
L4598:         this->mRandomUp = switch (Temp_bool_Variable) {
case false -> mfloat21;
case true -> mfloat20;
default -> mfloat22;
};
L4669:         goto L3800;
L4674:         float mfloat23 = RandomFloatInRange(0.05000000074505806, 0.4000000059604645);
L4712:         bool mbool10 = this->mTargetDistance < 600;
L4746:         bool Temp_bool_Variable8 = mbool10;
L4765:         float mfloat24 = RandomFloatInRange(1, 2);
L4803:         bool mbool11 = this->mTargetDistance > 700;
L4837:         bool Temp_bool_Variable1 = mbool11;
L4856:         float mfloat25 = RandomFloatInRange(0.10000000149011612, 0.699999988079071);
L4894:         int32 Temp_int_Variable3 = this->mStrategyType;
L4921:         this->mReEvalTimer = switch (Temp_int_Variable3) {
case 0 -> switch (Temp_bool_Variable1) {
case false -> mfloat25;
case true -> mfloat24;
default -> mfloat27;
};
case 1 -> switch (Temp_bool_Variable8) {
case false -> switch (Temp_bool_Variable1) {
case false -> mfloat25;
case true -> mfloat24;
default -> mfloat27;
};
case true -> mfloat23;
default -> mfloat28;
};
case 2 -> switch (Temp_bool_Variable8) {
case false -> switch (Temp_bool_Variable1) {
case false -> mfloat25;
case true -> mfloat24;
default -> mfloat27;
};
case true -> mfloat23;
default -> mfloat28;
};
default -> mfloat26;
};
L5238:         this->ResetMovement();
L5252:         goto ExecutionFlow.Pop();
L5253:         Vector mVector15 = mActor3->K2_GetActorLocation();
L5303:         Vector mVector16 = this->Mesh->K2_GetComponentLocation();
L5353:         Vector mVector17 = mVector16 - mVector15;
L5399:         Vector mVector18 = Normal(mVector17, 0.00009999999747378752);
L5441:         Vector mVector19 = mVector18 * 2500;
L5483:         this->CharacterMovement->AddImpulse(mVector19, true);
L5529:         goto L1848;
L5534:         // <Begin Inlined EventGraph Function ResetMovement>;
L5534:         goto L4469;
L5539:         bool mbool12 = this->IsAliveAndWell();
L5559:         bool mbool13 = mbool12 && this->mCanAttack;
L5597:         if (!mbool13) goto ExecutionFlow.Pop();
L5607:         FGCharacterPlayer* mFGCharacterPlayer1 = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mActor4);
L5643:         bool mbool14 = mFGCharacterPlayer1;
L5672:         if (!mbool14) goto ExecutionFlow.Pop();
L5682:         Controller* mController2 = this->GetController();
L5702:         bool mbool15 = KismetSystemLibrary->IsValid(mController2);
L5753:         if (!mbool15) goto ExecutionFlow.Pop();
L5763:         Controller* mController3 = this->GetController();
L5783:         float mfloat29 = GameplayStatics->ApplyDamage(mFGCharacterPlayer1, 5, mController3, this, ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Creature/Enemy/Hog/DamageType_HogHit.DamageType_HogHit_C));
L5866:         goto L1642;
L5871:         SkeletalMeshComponent* mSkeletalMeshComponent1 = this->GetMesh3P();
L5895:         Vector mVector20 = mSkeletalMeshComponent1->K2_GetComponentLocation();
L5945:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAtLocation(this, ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Enemy/CrabHatcher/Audio/Play_E_Hatchery_Baby_Suicide.Play_E_Hatchery_Baby_Suicide), mVector20, Rotator::FromPitchYawRoll(0, 0, 0));
L6019:         mSkeletalMeshComponent1 = this->GetMesh3P();
L6043:         mVector20 = mSkeletalMeshComponent1->K2_GetComponentLocation();
L6093:         ParticleSystemComponent* mParticleSystemComponent1 = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/Character/Creature/Enemy/Crab/Particle/ProjectileExplosion_01.ProjectileExplosion_01), mVector20, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L6183:         this->K2_DestroyActor();
L6197:         goto ExecutionFlow.Pop();
L6198:         // <Begin Inlined EventGraph Function KillOrphanCrabs>;
L6198:         FGCreatureSpawner* mFGCreatureSpawner = this->GetSpawner();
L6218:         bool mbool16 = this->HasAuthority();
L6238:         bool mbool17 = KismetSystemLibrary->IsValid(mFGCreatureSpawner);
L6289:         bool mbool18 = !mbool17;
L6318:         bool mbool19 = mbool18 && mbool16;
L6356:         if (!mbool19) goto ExecutionFlow.Pop();
L6366:         this->K2_DestroyActor();
L6380:         goto ExecutionFlow.Pop();
L6381:         mFScriptDelegate2->BindUFunction(this, KillOrphanCrabs);
L6404:         TimerHandle mTimerHandle1 = KismetSystemLibrary->K2_SetTimerDelegate(mFScriptDelegate2, 30, false);
L6469:         goto L3720;
L6474:         // <Begin Inlined EventGraph Function Event Check Subtitle Distance>;
L6474:         goto ExecutionFlow.Pop();
L6475:         // <Begin Inlined EventGraph Function ChargingMovement>;
L6475:         Actor* mActor5 = this->GetCurrentAggroTarget();
L6495:         bool mbool20 = KismetSystemLibrary->IsValid(mActor5);
L6546:         if (!mbool20) goto ExecutionFlow.Pop();
L6556:         Vector mVector21 = this->Mesh->K2_GetComponentLocation();
L6606:         mActor5 = this->GetCurrentAggroTarget();
L6626:         Vector mVector22 = mActor5->K2_GetActorLocation();
L6676:         Vector mVector23 = mVector22 - mVector21;
L6722:         float mfloat30 = VSize(mVector23);
L6759:         bool mbool21 = mfloat30 < 5000;
L6793:         bool mbool22 = KismetSystemLibrary->IsValid(mActor5);
L6844:         bool mbool23 = this->IsAliveAndWell();
L6864:         bool mbool24 = mbool22 && this->mCanMove;
L6902:         bool mbool25 = mbool24 && mbool23;
L6940:         bool mbool26 = mbool25 && mbool21;
L6978:         if (!mbool26) goto ExecutionFlow.Pop();
L6988:         mActor5 = this->GetCurrentAggroTarget();
L7008:         Vector mVector24 = mActor5->GetVelocity();
L7062:         float mfloat31 = VSize(mVector24);
L7099:         bool mbool27 = mfloat31 > 20;
L7133:         if (!mbool27) goto L7561;
L7147:         mActor5 = this->GetCurrentAggroTarget();
L7167:         mVector24 = mActor5->GetVelocity();
L7221:         mfloat31 = VSize(mVector24);
L7258:         Vector mVector25 = mVector24 / mfloat31;
L7304:         this->mTargetMoveDir = mVector25;
L7331:         mVector21 = this->Mesh->K2_GetComponentLocation();
L7381:         mActor5 = this->GetCurrentAggroTarget();
L7401:         mVector22 = mActor5->K2_GetActorLocation();
L7451:         mVector23 = mVector22 - mVector21;
L7497:         mfloat30 = VSize(mVector23);
L7534:         this->mTargetDistance = mfloat30;
L7561:         Vector Temp_struct_Variable = Vector(0, 0, 0);
L7592:         Vector Temp_struct_Variable1 = Vector(0, 0, 0);
L7623:         int32 Temp_int_Variable = this->mStrategyType;
L7650:         mVector21 = this->Mesh->K2_GetComponentLocation();
L7700:         Vector mVector26 = Cross_VectorVector(this->mTargetMoveDir, Vector(0, 0, 1));
L7750:         Vector mVector27 = NegateVector(mVector26);
L7787:         Vector mVector28 = this->mTargetMoveDir * 150;
L7829:         Vector mVector29 = this->mTargetMoveDir * 400;
L7871:         Vector mVector30 = this->mTargetMoveDir * 150;
L7913:         Vector mVector31 = this->mTargetMoveDir * 400;
L7955:         Vector mVector32 = MakeVector(0, 0, this->mRandomUp);
L8002:         mActor5 = this->GetCurrentAggroTarget();
L8022:         mVector22 = mActor5->K2_GetActorLocation();
L8072:         mVector23 = mVector22 - mVector21;
L8118:         mVector24 = mActor5->GetVelocity();
L8172:         mfloat30 = VSize(mVector23);
L8209:         Vector mVector33 = mVector24 * 3;
L8251:         float mfloat32 = FClamp(mfloat30, 450, 1700);
L8298:         bool mbool28 = mfloat30 < 400;
L8332:         float mfloat33 = mfloat32 * 0.4000000059604645;
L8374:         bool mbool29 = mfloat30 < 300;
L8408:         Vector mVector34 = this->mTargetMoveDir * mfloat33;
L8454:         float mfloat34 = FMin(mfloat30, 800);
L8496:         Vector mVector35 = mVector23 / mfloat30;
L8542:         mfloat31 = VSize(mVector24);
L8579:         float mfloat35 = Dot_VectorVector(this->mTargetMoveDir, mVector35);
L8625:         bool mbool30 = mfloat35 < 0;
L8659:         bool Temp_bool_Variable4 = mbool30;
L8678:         bool mbool31 = mfloat35 < -0.7699999809265137;
L8712:         bool mbool32 = mfloat31 > 300;
L8746:         bool mbool33 = mbool31 || mbool28;
L8784:         bool Temp_bool_Variable3 = mbool32;
L8803:         bool Temp_bool_Variable5 = mbool33;
L8822:         float mfloat36 = Dot_VectorVector(this->mTargetMoveDir, mVector35);
L8868:         bool mbool34 = mfloat36 < -0.10000000149011612;
L8902:         bool mbool35 = mfloat36 < 0.05000000074505806;
L8936:         bool mbool36 = mbool34 || mbool29;
L8974:         bool Temp_bool_Variable7 = mbool35;
L8993:         bool Temp_bool_Variable6 = mbool36;
L9012:         float mfloat37 = Dot_VectorVector(mVector26, mVector35);
L9058:         bool mbool37 = mfloat37 < 0;
L9092:         bool Temp_bool_Variable9 = mbool37;
L9111:         Vector mVector36 = switch (Temp_bool_Variable9) {
case false -> mVector27;
case true -> mVector26;
default -> mVector37;
} * mfloat32;
L9201:         Vector mVector38 = switch (Temp_bool_Variable9) {
case false -> mVector27;
case true -> mVector26;
default -> mVector37;
} * mfloat34;
L9291:         Vector mVector39 = mVector36 + mVector34;
L9337:         Vector mVector40 = mVector38 + mVector30;
L9383:         Vector mVector41 = mVector39 + mVector28;
L9429:         Vector mVector42 = MakeVector(0, 0, this->mRandomUp);
L9476:         Vector mVector43 = switch (Temp_bool_Variable4) {
case false -> mVector41;
case true -> switch (Temp_bool_Variable3) {
case false -> mVector29;
case true -> mVector33;
default -> mVector45;
};
default -> mVector44;
} + mVector42;
L9610:         Vector mVector46 = MakeVector(0, 0, this->mRandomUp);
L9657:         Vector mVector47 = switch (Temp_bool_Variable7) {
case false -> mVector40;
case true -> mVector31;
default -> mVector48;
} + mVector46;
L9747:         this->mTargetOffsetTargetPos = switch (Temp_int_Variable) {
case 0 -> mVector32;
case 1 -> switch (Temp_bool_Variable5) {
case false -> mVector43;
case true -> Temp_struct_Variable;
default -> mVector50;
};
case 2 -> switch (Temp_bool_Variable6) {
case false -> mVector47;
case true -> Temp_struct_Variable1;
default -> mVector51;
};
default -> mVector49;
};
L9932:         goto L4674;
L9937:         this->ReceiveTick(mfloat12);
L9956:         goto L2400;
L9961:         this->ReceiveDied();
L9971:         goto L5871;
L9976:         // <Begin Inlined EventGraph Function ReceiveDied>;
L9976:         goto L9961;
L9981:         KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mSubtitleTimer);
L10023:        goto ExecutionFlow.Pop();
L10024:        // <Begin Inlined EventGraph Function ReceiveBeginPlay>;
L10024:        goto L6381;
============ END FUNCTION ExecuteUbergraph_Char_BabyCrab ==============
