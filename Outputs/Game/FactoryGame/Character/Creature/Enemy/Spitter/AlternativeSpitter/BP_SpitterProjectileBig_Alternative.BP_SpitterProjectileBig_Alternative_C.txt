########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Character/Creature/Enemy/Spitter/AlternativeSpitter/BP_SpitterProjectileBig_Alternative.BP_SpitterProjectileBig_Alternative_C
########################





============ BEGIN FUNCTION GetNewTarget ==============
L0:            ExecutionFlow.Push(L1080);
L5:            int32 Temp_int_Variable = 0;
L28:           bool mbool = Temp_int_Variable <= 8;
L62:           if (!mbool) goto ExecutionFlow.Pop();
L72:           ExecutionFlow.Push(L1006);
L77:           Pawn* mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L129:          bool mbool1 = KismetSystemLibrary->IsValid(mPawn);
L180:          if (!mbool1) goto ExecutionFlow.Pop();
L190:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L242:          Vector mVector = mPawn->K2_GetActorLocation();
L292:          Vector mVector1 = this->K2_GetActorLocation();
L320:          Vector mVector2 = mVector - mVector1;
L366:          float mfloat = VSize(mVector2);
L403:          bool mbool2 = mfloat <= 9999;
L437:          if (!mbool2) goto ExecutionFlow.Pop();
L447:          bool mbool3 = KismetSystemLibrary->IsValid(this->mTargetPawn);
L498:          if (!mbool3) goto L934;
L512:          Vector mVector3 = this->mTargetPawn->K2_GetActorLocation();
L562:          Vector mVector4 = this->K2_GetActorLocation();
L590:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L642:          Vector mVector5 = mVector3 - mVector4;
L688:          float mfloat1 = VSize(mVector5);
L725:          mVector = mPawn->K2_GetActorLocation();
L775:          mVector1 = this->K2_GetActorLocation();
L803:          mVector2 = mVector - mVector1;
L849:          mfloat = VSize(mVector2);
L886:          bool mbool4 = mfloat < mfloat1;
L924:          if (!mbool4) goto ExecutionFlow.Pop();
L934:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L986:          this->mTargetPawn = mPawn;
L1005:         goto ExecutionFlow.Pop();
L1006:         int32 mint32 = Temp_int_Variable + 1;
L1048:         Temp_int_Variable = mint32;
L1075:         goto L28;
============ END FUNCTION GetNewTarget ==============





============ BEGIN FUNCTION GetNewTargetLocation ==============
L0:            ExecutionFlow.Push(L1023);
L5:            int32 Temp_int_Variable = 0;
L28:           bool mbool = Temp_int_Variable <= 8;
L62:           if (!mbool) goto ExecutionFlow.Pop();
L72:           ExecutionFlow.Push(L949);
L77:           Pawn* mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L129:          bool mbool1 = KismetSystemLibrary->IsValid(mPawn);
L180:          if (!mbool1) goto ExecutionFlow.Pop();
L190:          Vector mVector = this->K2_GetActorLocation();
L218:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L270:          Vector mVector1 = mPawn->K2_GetActorLocation();
L320:          Vector mVector2 = mVector1 - mVector;
L366:          float mfloat = VSize(mVector2);
L403:          bool mbool2 = mfloat <= 3000;
L437:          if (!mbool2) goto ExecutionFlow.Pop();
L447:          Vector mVector3 = this->K2_GetActorLocation();
L475:          mVector = this->K2_GetActorLocation();
L503:          Vector mVector4 = this->mAttackLocation - mVector3;
L549:          float mfloat1 = VSize(mVector4);
L586:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L638:          mVector1 = mPawn->K2_GetActorLocation();
L688:          mVector2 = mVector1 - mVector;
L734:          mfloat = VSize(mVector2);
L771:          bool mbool3 = mfloat < mfloat1;
L809:          if (!mbool3) goto ExecutionFlow.Pop();
L819:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L871:          mVector1 = mPawn->K2_GetActorLocation();
L921:          this->mAttackLocation = mVector1;
L948:          goto ExecutionFlow.Pop();
L949:          int32 mint32 = Temp_int_Variable + 1;
L991:          Temp_int_Variable = mint32;
L1018:         goto L28;
============ END FUNCTION GetNewTargetLocation ==============





============ BEGIN FUNCTION ReceiveBeginPlay ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ReceiveBeginPlay;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpitterProjectileBig_Alternative, from label L2413;
============ END FUNCTION ReceiveBeginPlay ==============





============ BEGIN FUNCTION SplitProjectile ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: SplitProjectile;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpitterProjectileBig_Alternative, from label L2553;
============ END FUNCTION SplitProjectile ==============





============ BEGIN FUNCTION ReceiveTick ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ReceiveTick;
L18:           // Implementation: Function ExecuteUbergraph_BP_SpitterProjectileBig_Alternative, from label L2601;
============ END FUNCTION ReceiveTick ==============





============ BEGIN FUNCTION BndEvt__mProjectileMovement_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: BndEvt__mProjectileMovement_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature;
L36:           // Implementation: Function ExecuteUbergraph_BP_SpitterProjectileBig_Alternative, from label L2693;
============ END FUNCTION BndEvt__mProjectileMovement_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature ==============





============ BEGIN FUNCTION PlayExplosionEffects ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PlayExplosionEffects;
L0:            // Implementation: Function ExecuteUbergraph_BP_SpitterProjectileBig_Alternative, from label L3180;
============ END FUNCTION PlayExplosionEffects ==============





============ BEGIN FUNCTION OnTakeAnyDamage_Event_0 ==============
L90:           // EventGraph implemented function stub;
L90:           // Function Name: OnTakeAnyDamage_Event_0;
L90:           // Implementation: Function ExecuteUbergraph_BP_SpitterProjectileBig_Alternative, from label L3804;
============ END FUNCTION OnTakeAnyDamage_Event_0 ==============





============ BEGIN FUNCTION ExecuteUbergraph_BP_SpitterProjectileBig_Alternative ==============
L5:            goto ComputedJump(EntryPoint);
L15:           this->FlushNetDormancy();
L25:           this->mDoSplit = false;
L36:           bool mbool = this->mNumberofSplitProjectiles > 0;
L70:           if (!mbool) goto L1796;
L84:           int32 mint32 = this->mNumberofSplitProjectiles - 1;
L126:          int32 Temp_int_Variable = mint32;
L153:          this->mNumberofSplitProjectiles = Temp_int_Variable;
L180:          Vector mVector = this->mTargetPawn->K2_GetActorLocation();
L230:          this->mAttackLocation = mVector;
L257:          Transform mTransform = this->GetTransform();
L285:          BreakTransform([ref] mTransform, [ref] mVector1, [ref] mRotator, [ref] mVector2);
L331:          Actor* mActor = this->GetOwner();
L351:          Vector mVector3 = Normal(this->mProjectileMovement->Velocity, 0.00009999999747378752);
L415:          Vector mVector4 = mVector3 * 100;
L457:          Vector mVector5 = mVector1 + mVector4;
L503:          Transform mTransform1 = MakeTransform(mVector5, mRotator, mVector2);
L558:          Actor* mActor1 = GameplayStatics->BeginDeferredActorSpawnFromClass(this, ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Creature/Enemy/Spitter/AlternativeSpitter/BP_SpitterProjectileSplitAlt.BP_SpitterProjectileSplitAlt_C), [ref] mTransform1, 0, mActor);
L630:          KismetSystemLibrary->SetObjectPropertyByName(mActor1, "Instigator", this->Instigator);
L693:          mTransform = this->GetTransform();
L721:          BreakTransform([ref] mTransform, [ref] mVector1, [ref] mRotator, [ref] mVector2);
L767:          mVector3 = Normal(this->mProjectileMovement->Velocity, 0.00009999999747378752);
L831:          mVector4 = mVector3 * 100;
L873:          mVector5 = mVector1 + mVector4;
L919:          mTransform1 = MakeTransform(mVector5, mRotator, mVector2);
L974:          BP_SpitterProjectileSplitAlt* mBP_SpitterProjectileSplitAlt = GameplayStatics->FinishSpawningActor(mActor1, [ref] mTransform1);
L1034:         Vector mVector6 = this->K2_GetActorLocation();
L1062:         float mfloat = DegreesToRadians(this->mSplitConeHalfAngle);
L1099:         Vector mVector7 = this->mAttackLocation - mVector6;
L1145:         Vector mVector8 = Normal(mVector7, 0.00009999999747378752);
L1187:         Vector mVector9 = RandomUnitVectorInConeInRadians(mVector8, mfloat);
L1233:         Vector mVector10 = mVector9 * Vector(1, 1, 0.30000001192092896);
L1283:         Vector mVector11 = mVector10 * this->mSpeedAdjustment;
L1329:         mBP_SpitterProjectileSplitAlt->mProjectileMovement->Velocity = mVector11;
L1400:         mBP_SpitterProjectileSplitAlt->SetInitialVelocity(mBP_SpitterProjectileSplitAlt->mProjectileMovement->Velocity);
L1485:         mBP_SpitterProjectileSplitAlt->mProjectileMovement->ProjectileGravityScale = 0;
L1552:         int32 mint321 = this->mNumberofSplitProjectiles / 5;
L1594:         float mfloat1 = Conv_IntToFloat(mint321);
L1631:         float mfloat2 = mfloat1 / 10;
L1673:         float mfloat3 = mfloat2 + 0.20000000298023224;
L1715:         KismetSystemLibrary->Delay(this, mfloat3, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 2122, UUID = -1942778634, ExecutionFunction = "ExecuteUbergraph_BP_SpitterProjectileBig_Alternative", CallbackTarget = this));
L1795:         goto ExecutionFlow.Pop();
L1796:         Vector mVector12 = this->K2_GetActorLocation();
L1824:         SphereComponent* mSphereComponent = this->GetCollisionSphere();
L1844:         Vector mVector13 = MakeVector(0, 0, mSphereComponent->SphereRadius);
L1913:         Vector mVector14 = mVector12 - mVector13;
L1959:         ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Character/Creature/Spitter/P_SpitImpact_01.P_SpitImpact_01), mVector14, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L2049:         mParticleSystemComponent->SetVectorParameter("Color", Vector(0, 5, 3));
L2107:         this->K2_DestroyActor();
L2121:         goto ExecutionFlow.Pop();
L2122:         this->SplitProjectile();
L2136:         goto ExecutionFlow.Pop();
L2137:         this->mProjectileMovement->Activate(false);
L2174:         this->GetNewTarget();
L2188:         mFScriptDelegate->BindUFunction(this, OnTakeAnyDamage_Event_0);
L2211:         this->OnTakeAnyDamage.AddUnique(mFScriptDelegate);
L2230:         goto ExecutionFlow.Pop();
L2231:         this->SplitProjectile();
L2245:         goto ExecutionFlow.Pop();
L2246:         if (!Temp_bool_IsClosed_Variable) goto L2261;
L2260:         goto ExecutionFlow.Pop();
L2261:         bool Temp_bool_IsClosed_Variable = true;
L2272:         KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 2231, UUID = -752057316, ExecutionFunction = "ExecuteUbergraph_BP_SpitterProjectileBig_Alternative", CallbackTarget = this));
L2348:         goto ExecutionFlow.Pop();
L2349:         Temp_bool_IsClosed_Variable = true;
L2360:         goto ExecutionFlow.Pop();
L2361:         if (!false) goto ExecutionFlow.Pop();
L2363:         bool Temp_bool_IsClosed_Variable1 = true;
L2374:         goto ExecutionFlow.Pop();
L2375:         ExecutionFlow.Push(L2246);
L2380:         if (!Temp_bool_Has_Been_Initd_Variable) goto L2395;
L2394:         goto ExecutionFlow.Pop();
L2395:         bool Temp_bool_Has_Been_Initd_Variable = true;
L2406:         if (!false) goto ExecutionFlow.Pop();
L2408:         goto L2349;
L2413:         this->ReceiveBeginPlay();
L2423:         AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Enemy/Spitter/Audio/Play_E_Spitter_Projectile_Loop.Play_E_Spitter_Projectile_Loop), this, true);
L2476:         KismetSystemLibrary->Delay(this, 0.10000000149011612, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 2137, UUID = -2441045, ExecutionFunction = "ExecuteUbergraph_BP_SpitterProjectileBig_Alternative", CallbackTarget = this));
L2552:         goto ExecutionFlow.Pop();
L2553:         // <Begin Inlined EventGraph Function SplitProjectile>;
L2553:         goto L15;
L2558:         this->SetLifeSpan(1);
L2577:         this->mNumberofSplitProjectiles = 0;
L2600:         goto ExecutionFlow.Pop();
L2601:         this->ReceiveTick(mfloat4);
L2620:         bool mbool1 = this->HasAuthority();
L2640:         bool mbool2 = this->mDoSplit && mbool1;
L2678:         if (!mbool2) goto ExecutionFlow.Pop();
L2688:         goto L2375;
L2693:         Vector mVector15 = this->GetProjectileTargetLocation();
L2721:         Vector mVector16 = this->K2_GetActorLocation();
L2749:         Vector mVector17 = mVector15 - mVector16;
L2795:         Vector mVector18 = Normal(mVector17, 0.00009999999747378752);
L2837:         Vector mVector19 = mVector18 + Vector(0, 0, 0.009999999776482582);
L2887:         Vector mVector20 = mVector19 * 500;
L2929:         this->mProjectileMovement->Velocity = mVector20;
L2978:         goto ExecutionFlow.Pop();
L2979:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Enemy/Spitter/Audio/Stop_E_Spitter_Projectile_Loop.Stop_E_Spitter_Projectile_Loop), this, true);
L3032:         Vector mVector21 = this->K2_GetActorLocation();
L3060:         AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEventAtLocation(this, ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Creature/Enemy/Spitter/Audio/Play_E_Spitter_Projectile_Land.Play_E_Spitter_Projectile_Land), mVector21, Rotator::FromPitchYawRoll(0, 0, 0));
L3134:         goto L2558;
L3139:         this->Projectile->Deactivate();
L3175:         goto L2979;
L3180:         Vector mVector22 = this->K2_GetActorLocation();
L3208:         SphereComponent* mSphereComponent1 = this->GetCollisionSphere();
L3228:         Vector mVector23 = MakeVector(0, 0, mSphereComponent1->SphereRadius);
L3297:         Vector mVector24 = mVector22 - mVector23;
L3343:         ParticleSystemComponent* mParticleSystemComponent1 = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Character/Creature/Spitter/P_SpitImpact_01.P_SpitImpact_01), mVector24, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L3433:         mParticleSystemComponent1->SetVectorParameter("Color", Vector(0, 5, 3));
L3491:         goto L3139;
L3496:         ExecutionFlow.Push(L3532);
L3501:         if (!Temp_bool_Has_Been_Initd_Variable1) goto L3516;
L3515:         goto ExecutionFlow.Pop();
L3516:         bool Temp_bool_Has_Been_Initd_Variable1 = true;
L3527:         goto L2361;
L3532:         if (!Temp_bool_IsClosed_Variable1) goto L3547;
L3546:         goto ExecutionFlow.Pop();
L3547:         Temp_bool_IsClosed_Variable1 = true;
L3558:         Vector mVector25 = this->K2_GetActorLocation();
L3586:         ParticleSystemComponent* mParticleSystemComponent2 = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/Character/Creature/Enemy/Spitter/Particle/C4ExplosionBlue.C4ExplosionBlue), mVector25, Rotator::FromPitchYawRoll(0, 0, 0), Vector(3, 3, 3), true, 0);
L3676:         mVector25 = this->K2_GetActorLocation();
L3704:         bool mbool3 = GameplayStatics->ApplyRadialDamage(this, 40, [ref] mVector25, 500, ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Equipment/C4Dispenser/DamageType_C4.DamageType_C4_C), [ref] Temp_object_Variable, nullptr, nullptr, false, 3);
L3789:         this->K2_DestroyActor();
L3803:         goto ExecutionFlow.Pop();
L3804:         goto L3496;
============ END FUNCTION ExecuteUbergraph_BP_SpitterProjectileBig_Alternative ==============
