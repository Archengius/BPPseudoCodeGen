########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C
########################





============ BEGIN FUNCTION GetNewTarget ==============
L0:            ExecutionFlow.Push(L1080);
L5:            int32 Temp_int_Variable = 0;
L28:           bool mbool = LessEqual_IntInt(Temp_int_Variable, 8);
L62:           if (!mbool) goto ExecutionFlow.Pop();
L72:           ExecutionFlow.Push(L1006);
L77:           Pawn* mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L129:          bool mbool1 = KismetSystemLibrary->IsValid(mPawn);
L180:          if (!mbool1) goto ExecutionFlow.Pop();
L190:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L242:          Vector mVector = mPawn->K2_GetActorLocation();
L292:          Vector mVector1 = this->K2_GetActorLocation();
L320:          Vector mVector2 = Subtract_VectorVector(mVector, mVector1);
L366:          float mfloat = VSize(mVector2);
L403:          bool mbool2 = LessEqual_FloatFloat(mfloat, 9999);
L437:          if (!mbool2) goto ExecutionFlow.Pop();
L447:          bool mbool3 = KismetSystemLibrary->IsValid(this->mTargetPawn);
L498:          if (!mbool3) goto L934;
L512:          Vector mVector3 = this->mTargetPawn->K2_GetActorLocation();
L562:          Vector mVector4 = this->K2_GetActorLocation();
L590:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L642:          Vector mVector5 = Subtract_VectorVector(mVector3, mVector4);
L688:          float mfloat1 = VSize(mVector5);
L725:          mVector = mPawn->K2_GetActorLocation();
L775:          mVector1 = this->K2_GetActorLocation();
L803:          mVector2 = Subtract_VectorVector(mVector, mVector1);
L849:          mfloat = VSize(mVector2);
L886:          bool mbool4 = Less_FloatFloat(mfloat, mfloat1);
L924:          if (!mbool4) goto ExecutionFlow.Pop();
L934:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L986:          this->mTargetPawn = mPawn;
L1005:         goto ExecutionFlow.Pop();
L1006:         int32 mint32 = Add_IntInt(Temp_int_Variable, 1);
L1048:         Temp_int_Variable = mint32;
L1075:         goto L28;
============ END FUNCTION GetNewTarget ==============





============ BEGIN FUNCTION GetNewTargetLocation ==============
L0:            ExecutionFlow.Push(L1023);
L5:            int32 Temp_int_Variable = 0;
L28:           bool mbool = LessEqual_IntInt(Temp_int_Variable, 8);
L62:           if (!mbool) goto ExecutionFlow.Pop();
L72:           ExecutionFlow.Push(L949);
L77:           Pawn* mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L129:          bool mbool1 = KismetSystemLibrary->IsValid(mPawn);
L180:          if (!mbool1) goto ExecutionFlow.Pop();
L190:          Vector mVector = this->K2_GetActorLocation();
L218:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L270:          Vector mVector1 = mPawn->K2_GetActorLocation();
L320:          Vector mVector2 = Subtract_VectorVector(mVector1, mVector);
L366:          float mfloat = VSize(mVector2);
L403:          bool mbool2 = LessEqual_FloatFloat(mfloat, 3000);
L437:          if (!mbool2) goto ExecutionFlow.Pop();
L447:          Vector mVector3 = this->K2_GetActorLocation();
L475:          mVector = this->K2_GetActorLocation();
L503:          Vector mVector4 = Subtract_VectorVector(this->mAttackLocation, mVector3);
L549:          float mfloat1 = VSize(mVector4);
L586:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L638:          mVector1 = mPawn->K2_GetActorLocation();
L688:          mVector2 = Subtract_VectorVector(mVector1, mVector);
L734:          mfloat = VSize(mVector2);
L771:          bool mbool3 = Less_FloatFloat(mfloat, mfloat1);
L809:          if (!mbool3) goto ExecutionFlow.Pop();
L819:          mPawn = GameplayStatics->GetPlayerPawn(this, Temp_int_Variable);
L871:          mVector1 = mPawn->K2_GetActorLocation();
L921:          this->mAttackLocation = mVector1;
L948:          goto ExecutionFlow.Pop();
L949:          int32 mint32 = Add_IntInt(Temp_int_Variable, 1);
L991:          Temp_int_Variable = mint32;
L1018:         goto L28;
============ END FUNCTION GetNewTargetLocation ==============





============ BEGIN FUNCTION ReceiveBeginPlay ==============
L0:            this->ExecuteUbergraph_BP_SpitterProjectileBig(2960);
============ END FUNCTION ReceiveBeginPlay ==============





============ BEGIN FUNCTION SplitProjectile ==============
L0:            this->ExecuteUbergraph_BP_SpitterProjectileBig(1946);
============ END FUNCTION SplitProjectile ==============





============ BEGIN FUNCTION ReceiveTick ==============
L0:            PERSISTENT_FRAME(FloatProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_Event_DeltaSeconds) = DeltaSeconds;
L18:           this->ExecuteUbergraph_BP_SpitterProjectileBig(1961);
============ END FUNCTION ReceiveTick ==============





============ BEGIN FUNCTION BndEvt__mProjectileMovement_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature ==============
L0:            PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_ComponentBoundEvent_Component) = component;
L18:           PERSISTENT_FRAME(BoolProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_ComponentBoundEvent_bReset) = bReset;
L36:           this->ExecuteUbergraph_BP_SpitterProjectileBig(2674);
============ END FUNCTION BndEvt__mProjectileMovement_K2Node_ComponentBoundEvent_0_ActorComponentActivatedSignature__DelegateSignature ==============





============ BEGIN FUNCTION PlayExplosionEffects ==============
L0:            this->ExecuteUbergraph_BP_SpitterProjectileBig(2965);
============ END FUNCTION PlayExplosionEffects ==============





============ BEGIN FUNCTION OnTakeAnyDamage_Event_0 ==============
L0:            PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_CustomEvent_damagedActor) = DamagedActor;
L18:           PERSISTENT_FRAME(FloatProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_CustomEvent_Damage) = Damage;
L36:           PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_CustomEvent_damageType) = DamageType;
L54:           PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_CustomEvent_instigatedBy) = InstigatedBy;
L72:           PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_CustomEvent_damageCauser) = DamageCauser;
L90:           this->ExecuteUbergraph_BP_SpitterProjectileBig(3292);
============ END FUNCTION OnTakeAnyDamage_Event_0 ==============





============ BEGIN FUNCTION SpitterDied ==============
L0:            PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Character/Creature/Enemy/Spitter/BP_SpitterProjectileBig.BP_SpitterProjectileBig_C:ExecuteUbergraph_BP_SpitterProjectileBig.K2Node_CustomEvent_DeadActor) = DeadActor;
L18:           this->ExecuteUbergraph_BP_SpitterProjectileBig(3297);
============ END FUNCTION SpitterDied ==============





============ BEGIN FUNCTION DestroySelf ==============
L0:            this->ExecuteUbergraph_BP_SpitterProjectileBig(3302);
============ END FUNCTION DestroySelf ==============





============ BEGIN FUNCTION ExecuteUbergraph_BP_SpitterProjectileBig ==============
L5:            goto ComputedJump(EntryPoint);
L15:           this->mActive = false;
L26:           Vector mVector = this->K2_GetActorLocation();
L54:           SphereComponent* mSphereComponent = this->GetCollisionSphere();
L74:           Vector mVector1 = MakeVector(0, 0, mSphereComponent->SphereRadius);
L143:          Vector mVector2 = Subtract_VectorVector(mVector, mVector1);
L189:          ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAtLocation(this, P_SpitImpact_01, mVector2, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L279:          this->Projectile->Deactivate();
L315:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(Stop_E_Spitter_Projectile_Loop, this, true);
L368:          Vector mVector3 = this->K2_GetActorLocation();
L396:          AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAtLocation(this, Play_E_Spitter_Projectile_Land, mVector3, Rotator::FromPitchYawRoll(0, 0, 0));
L470:          this->SetLifeSpan(1);
L489:          SphereComponent* mSphereComponent1 = this->GetCollisionSphere();
L509:          mSphereComponent1->SetCollisionEnabled(0);
L547:          goto ExecutionFlow.Pop();
L548:          this->FlushNetDormancy();
L558:          this->mDoSplit = false;
L569:          bool mbool = Greater_IntInt(this->mNumberofSplitProjectiles, 0);
L603:          if (!mbool) goto L1822;
L617:          int32 mint32 = Subtract_IntInt(this->mNumberofSplitProjectiles, 1);
L659:          int32 Temp_int_Variable = mint32;
L686:          this->mNumberofSplitProjectiles = Temp_int_Variable;
L713:          Vector mVector4 = this->mTargetPawn->GetVelocity();
L767:          Vector mVector5 = this->mTargetPawn->K2_GetActorLocation();
L817:          Vector mVector6 = Add_VectorVector(mVector5, mVector4);
L863:          this->mAttackLocation = mVector6;
L890:          Actor* mActor = this->GetOwner();
L910:          Transform mTransform = this->GetTransform();
L938:          Actor* mActor1 = GameplayStatics->BeginDeferredActorSpawnFromClass(this, BP_SpitterProjectileSplit, [ref] mTransform, 0, mActor);
L1010:         KismetSystemLibrary->SetObjectPropertyByName(mActor1, "Instigator", this->Instigator);
L1073:         mTransform = this->GetTransform();
L1101:         BP_SpitterProjectileSplit* mBP_SpitterProjectileSplit = GameplayStatics->FinishSpawningActor(mActor1, [ref] mTransform);
L1161:         Vector mVector7 = this->K2_GetActorLocation();
L1189:         Vector mVector8 = Subtract_VectorVector(this->mAttackLocation, mVector7);
L1235:         Vector mVector9 = Normal(mVector8, 0.00009999999747378752);
L1277:         Vector mVector10 = this->mTargetPawn->GetVelocity();
L1331:         float mfloat = VSize(mVector10);
L1368:         float mfloat1 = Divide_FloatFloat(mfloat, this->mSplitConeHalfAngle);
L1414:         float mfloat2 = Add_FloatFloat(mfloat1, 3);
L1456:         float mfloat3 = DegreesToRadians(mfloat2);
L1493:         Vector mVector11 = RandomUnitVectorInConeInRadians(mVector9, mfloat3);
L1539:         Vector mVector12 = Multiply_VectorFloat(mVector11, this->mSpeedAdjustment);
L1585:         mBP_SpitterProjectileSplit->mProjectileMovement->Velocity = mVector12;
L1656:         mBP_SpitterProjectileSplit->SetInitialVelocity(mBP_SpitterProjectileSplit->mProjectileMovement->Velocity);
L1741:         KismetSystemLibrary->Delay(this, this->SplitDelay, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 1837, UUID = 523142578, ExecutionFunction = "ExecuteUbergraph_BP_SpitterProjectileBig", CallbackTarget = this));
L1821:         goto ExecutionFlow.Pop();
L1822:         this->K2_DestroyActor();
L1836:         goto ExecutionFlow.Pop();
L1837:         this->SplitProjectile();
L1851:         goto ExecutionFlow.Pop();
L1852:         this->mProjectileMovement->Activate(false);
L1889:         this->GetNewTarget();
L1903:         mFScriptDelegate->BindUFunction(this, OnTakeAnyDamage_Event_0);
L1926:         this->OnTakeAnyDamage.AddUnique(mFScriptDelegate);
L1945:         goto ExecutionFlow.Pop();
L1946:         if (!this->mActive) goto ExecutionFlow.Pop();
L1956:         goto L548;
L1961:         this->ReceiveTick(mfloat4);
L1980:         float mfloat5 = VSize(this->mProjectileMovement->Velocity);
L2039:         bool mbool1 = Less_FloatFloat(mfloat5, 50);
L2073:         bool mbool2 = BooleanAND(mbool1, this->mDoSplit);
L2111:         bool mbool3 = this->HasAuthority();
L2131:         bool mbool4 = BooleanAND(mbool2, mbool3);
L2169:         if (!mbool4) goto L2198;
L2183:         this->SplitProjectile();
L2197:         goto ExecutionFlow.Pop();
L2198:         if (!this->mDoSplit) goto ExecutionFlow.Pop();
L2208:         Vector mVector13 = Multiply_VectorFloat(this->mProjectileMovement->Velocity, 0.949999988079071);
L2272:         this->mProjectileMovement->Velocity = mVector13;
L2321:         goto ExecutionFlow.Pop();
L2322:         AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEvent(Play_E_Spitter_Projectile_Loop, this, true);
L2375:         KismetSystemLibrary->Delay(this, 0.10000000149011612, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 1852, UUID = -61613411, ExecutionFunction = "ExecuteUbergraph_BP_SpitterProjectileBig", CallbackTarget = this));
L2451:         goto ExecutionFlow.Pop();
L2452:         this->ReceiveBeginPlay();
L2462:         ExecutionFlow.Push(L2472);
L2467:         goto L2322;
L2472:         Actor* mActor2 = this->GetOwner();
L2492:         FGCharacterBase* mFGCharacterBase = Cast<Class /Script/FactoryGame.FGCharacterBase>(mActor2);
L2528:         bool mbool5 = mFGCharacterBase;
L2557:         if (!mbool5) goto ExecutionFlow.Pop();
L2567:         mFScriptDelegate1->BindUFunction(this, SpitterDied);
L2590:         FGHealthComponent* mFGHealthComponent = mFGCharacterBase->GetHealthComponent();
L2632:         mFGHealthComponent->DeathDelegate.AddUnique(mFScriptDelegate1);
L2673:         goto ExecutionFlow.Pop();
L2674:         Vector mVector14 = this->GetProjectileTargetLocation();
L2702:         Vector mVector15 = this->K2_GetActorLocation();
L2730:         Vector mVector16 = Subtract_VectorVector(mVector14, mVector15);
L2776:         Vector mVector17 = Normal(mVector16, 0.00009999999747378752);
L2818:         Vector mVector18 = Add_VectorVector(mVector17, Vector(0, 0, 0.8999999761581421));
L2868:         Vector mVector19 = Multiply_VectorFloat(mVector18, 900);
L2910:         this->mProjectileMovement->Velocity = mVector19;
L2959:         goto ExecutionFlow.Pop();
L2960:         goto L2452;
L2965:         goto L26;
L2970:         if (!false) goto ExecutionFlow.Pop();
L2972:         bool Temp_bool_IsClosed_Variable = true;
L2983:         goto ExecutionFlow.Pop();
L2984:         ExecutionFlow.Push(L3020);
L2989:         if (!Temp_bool_Has_Been_Initd_Variable) goto L3004;
L3003:         goto ExecutionFlow.Pop();
L3004:         bool Temp_bool_Has_Been_Initd_Variable = true;
L3015:         goto L2970;
L3020:         if (!Temp_bool_IsClosed_Variable) goto L3035;
L3034:         goto ExecutionFlow.Pop();
L3035:         Temp_bool_IsClosed_Variable = true;
L3046:         Vector mVector20 = this->K2_GetActorLocation();
L3074:         ParticleSystemComponent* mParticleSystemComponent1 = GameplayStatics->SpawnEmitterAtLocation(this, C4Explosion, mVector20, Rotator::FromPitchYawRoll(0, 0, 0), Vector(3, 3, 3), true, 0);
L3164:         mVector20 = this->K2_GetActorLocation();
L3192:         bool mbool6 = GameplayStatics->ApplyRadialDamage(this, 40, [ref] mVector20, 500, DamageType_C4, [ref] Temp_object_Variable, nullptr, nullptr, false, 3);
L3277:         this->DestroySelf();
L3291:         goto ExecutionFlow.Pop();
L3292:         goto L2984;
L3297:         goto L15;
L3302:         goto L15;
============ END FUNCTION ExecuteUbergraph_BP_SpitterProjectileBig ==============
