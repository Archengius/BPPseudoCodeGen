########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Character/Player/Widget_PlayerInventory.Widget_PlayerInventory_C
########################





============ BEGIN FUNCTION AnimateNewInventorySlots ==============
L0:            bool mbool = NumOfNewSlots > 0;
L34:           if (!mbool) goto L115;
L48:           this->mInventoryWidget->mInventoryWidget->AnimateNewSlots(NumOfNewSlots);
============ END FUNCTION AnimateNewInventorySlots ==============





============ BEGIN FUNCTION OnKeyUp ==============
L0:            bool mbool = this->mInventoryWindow->HasFocusedDescendants();
L42:           bool mbool1 = !mbool;
L71:           if (!mbool1) goto L175;
L85:           EventReply mEventReply = this->mInventoryWindow->OnNumKeyDown(InKeyEvent);
L148:          EventReply ReturnValue = mEventReply;
============ END FUNCTION OnKeyUp ==============





============ BEGIN FUNCTION SetupArmInventoryResize ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController);
L60:           bool mbool = mFGPlayerController;
L89:           if (!mbool) goto L401;
L103:          Pawn* mPawn = this->GetOwningPlayerPawn();
L123:          FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L159:          bool mbool1 = mFGCharacterPlayer;
L188:          if (!mbool1) goto L401;
L202:          int32 mint32 = mFGCharacterPlayer->GetTotalPlayerArmEquipmentSlots();
L252:          BP_RemoteCallObject* mBP_RemoteCallObject = mFGPlayerController->GetRemoteCallObjectOfClass(ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_RemoteCallObject.BP_RemoteCallObject_C));
L303:          FGInventoryComponentEquipment* mFGInventoryComponentEquipment = mFGCharacterPlayer->GetEquipmentSlot(1);
L347:          mBP_RemoteCallObject->Server_ResizeInventory(mint32, mFGInventoryComponentEquipment);
============ END FUNCTION SetupArmInventoryResize ==============





============ BEGIN FUNCTION IsArmEquipmentInventoryOutdated ==============
L0:            Pawn* mPawn = this->GetOwningPlayerPawn();
L20:           FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L56:           bool mbool = mFGCharacterPlayer;
L85:           if (!mbool) goto L300;
L99:           FGInventoryComponentEquipment* mFGInventoryComponentEquipment = mFGCharacterPlayer->GetEquipmentSlot(1);
L143:          int32 mint32 = mFGCharacterPlayer->GetTotalPlayerArmEquipmentSlots();
L193:          int32 mint321 = mFGInventoryComponentEquipment->GetSizeLinear();
L243:          bool mbool1 = mint32 != mint321;
L281:          bool isOutdated = mbool1;
============ END FUNCTION IsArmEquipmentInventoryOutdated ==============





============ BEGIN FUNCTION OnPreviewKeyDown ==============
L0:            Key mKey = KismetInputLibrary->GetKey([ref] InKeyEvent);
L59:           bool mbool = KismetInputLibrary->EqualEqual_KeyKey(mKey, ScriptStruct /Script/InputCore.Key(KeyName = "Tab"));
L137:          if (!mbool) goto L247;
L151:          this->OnEscapePressed();
L165:          EventReply mEventReply = WidgetBlueprintLibrary->Handled();
L215:          EventReply ReturnValue = mEventReply;
L242:          goto L324;
L247:          EventReply mEventReply1 = WidgetBlueprintLibrary->Unhandled();
L297:          ReturnValue = mEventReply1;
============ END FUNCTION OnPreviewKeyDown ==============





============ BEGIN FUNCTION OnDrop ==============
L0:            bool ReturnValue = true;
============ END FUNCTION OnDrop ==============





============ BEGIN FUNCTION TryGetCentralStorages ==============
L0:            GameStateBase* mGameStateBase = GameplayStatics->GetGameState(this);
L43:           FGCentralStorageSubsystem* mFGCentralStorageSubsystem = FGCentralStorageSubsystem->Get(mGameStateBase);
L94:           TArray<FGCentralStorageContainer*> mTArrayFGCentralStorageContainer = mFGCentralStorageSubsystem->GetCentralStorageContainers();
L144:          this->mCentralStorages = mTArrayFGCentralStorageContainer;
============ END FUNCTION TryGetCentralStorages ==============





============ BEGIN FUNCTION OnKeyDown ==============
L0:            Key mKey = KismetInputLibrary->GetKey([ref] InKeyEvent);
L59:           bool mbool = KismetInputLibrary->EqualEqual_KeyKey(mKey, ScriptStruct /Script/InputCore.Key(KeyName = "I"));
L137:          bool mbool1 = KismetInputLibrary->EqualEqual_KeyKey(mKey, ScriptStruct /Script/InputCore.Key(KeyName = "Tab"));
L215:          bool mbool2 = mbool1 || mbool;
L253:          if (!mbool2) goto L363;
L267:          this->OnEscapePressed();
L281:          EventReply mEventReply = WidgetBlueprintLibrary->Handled();
L331:          EventReply ReturnValue = mEventReply;
L358:          goto L440;
L363:          EventReply mEventReply1 = WidgetBlueprintLibrary->Unhandled();
L413:          ReturnValue = mEventReply1;
============ END FUNCTION OnKeyDown ==============





============ BEGIN FUNCTION Cleanup ==============
L0:            this->mInventoryWindow->OnClose->Clear();
L32:           this->mEquipmentWindowContainer->OnClose->Clear();
L64:           PlayerController* mPlayerController = this->GetOwningPlayer();
L88:           HUD* mHUD = mPlayerController->GetHUD();
L130:          FGHUD* mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L166:          bool mbool = mFGHUD;
L195:          FGGameUI* mFGGameUI = mFGHUD->GetGameUI();
L237:          mFGGameUI->SetWindowWantsInventoryAddon(false);
L270:          mPlayerController = this->GetOwningPlayer();
L294:          mHUD = mPlayerController->GetHUD();
L336:          mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L372:          mbool = mFGHUD;
L401:          mFGGameUI = mFGHUD->GetGameUI();
L443:          mFGGameUI->SetShowInventory(false);
============ END FUNCTION Cleanup ==============





============ BEGIN FUNCTION SetInventoryComponents ==============
L0:            this->mInventoryComponent = InventoryComponent;
L19:           this->mEquipmentArmsInventoryComponent = arms;
L38:           this->mEquipmentBackInventoryComponent = Back;
L57:           this->mBeltIntentoryComponent = head;
L76:           this->mTrashInventoryComponent = Trash;
============ END FUNCTION SetInventoryComponents ==============





============ BEGIN FUNCTION Init ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Init;
L0:            // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L3135;
============ END FUNCTION Init ==============





============ BEGIN FUNCTION CloseInventory ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: CloseInventory;
L0:            // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L3658;
============ END FUNCTION CloseInventory ==============





============ BEGIN FUNCTION Destruct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Destruct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L3673;
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L3698;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION CentralStorageButtonClicked ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: CentralStorageButtonClicked;
L18:           // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L3713;
============ END FUNCTION CentralStorageButtonClicked ==============





============ BEGIN FUNCTION OnCentralStorageAddedOrRemoved ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnCentralStorageAddedOrRemoved;
L0:            // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L4264;
============ END FUNCTION OnCentralStorageAddedOrRemoved ==============





============ BEGIN FUNCTION BndEvt__Widget_StandardButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__Widget_StandardButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L4316;
============ END FUNCTION BndEvt__Widget_StandardButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature ==============





============ BEGIN FUNCTION PreConstruct ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PreConstruct;
L18:           // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L4321;
============ END FUNCTION PreConstruct ==============





============ BEGIN FUNCTION BndEvt__mInventory_K2Node_ComponentBoundEvent_0_OnRelevantShortcutPressed__DelegateSignature ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: BndEvt__mInventory_K2Node_ComponentBoundEvent_0_OnRelevantShortcutPressed__DelegateSignature;
L18:           // Implementation: Function ExecuteUbergraph_Widget_PlayerInventory, from label L4734;
============ END FUNCTION BndEvt__mInventory_K2Node_ComponentBoundEvent_0_OnRelevantShortcutPressed__DelegateSignature ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_PlayerInventory ==============
L5:            goto ComputedJump(EntryPoint);
L15:           ExecutionFlow.Push(L340);
L20:           Widget* mWidget = this->mInventoryWindow->InventorySlot->GetChildAt(0);
L89:           Widget_PlayerInventoryAddon* mWidget_PlayerInventoryAddon = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Character/Player/Widget_PlayerInventoryAddon.Widget_PlayerInventoryAddon_C>(mWidget);
L125:          bool mbool = mWidget_PlayerInventoryAddon;
L154:          if (!mbool) goto ExecutionFlow.Pop();
L164:          mWidget_PlayerInventoryAddon->SetDividerVisibility(false);
L201:          this->mInventoryWidget = mWidget_PlayerInventoryAddon;
L220:          int32 mint32 = this->PlayerState->GetNumObservedInventorySlots();
L270:          int32 mint321 = mint32 - this->mCurrentNumSlots;
L316:          this->AnimateNewInventorySlots(mint321);
L339:          goto ExecutionFlow.Pop();
L340:          int32 Temp_int_Loop_Counter_Variable2 = 0;
L363:          int32 Temp_int_Array_Index_Variable2 = 0;
L386:          int32 mint322 = KismetArrayLibrary->Array_Length([ref] this->mExtraInputToPassThrough);
L445:          bool mbool1 = Temp_int_Loop_Counter_Variable2 < mint322;
L483:          if (!mbool1) goto L657;
L497:          Temp_int_Array_Index_Variable2 = Temp_int_Loop_Counter_Variable2;
L524:          ExecutionFlow.Push(L1696);
L529:          KismetArrayLibrary->Array_Get([ref] this->mExtraInputToPassThrough, Temp_int_Array_Index_Variable2, [ref] mFName);
L588:          int32 mint323 = KismetArrayLibrary->Array_Add([ref] this->mInputToPassThrough, [ref] mFName);
L656:          goto ExecutionFlow.Pop();
L657:          int32 mint324 = KismetArrayLibrary->Array_Length([ref] this->mCentralStorages);
L716:          bool mbool2 = mint324 > 0;
L750:          bool mbool3 = this->mShowCentralStorageIfPossible && mbool2;
L788:          if (!mbool3) goto L1657;
L802:          int32 Temp_int_Loop_Counter_Variable1 = 0;
L825:          int32 Temp_int_Array_Index_Variable = 0;
L848:          int32 mint325 = KismetArrayLibrary->Array_Length([ref] this->mCentralStorages);
L907:          bool mbool4 = Temp_int_Loop_Counter_Variable1 < mint325;
L945:          if (!mbool4) goto ExecutionFlow.Pop();
L955:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable1;
L982:          ExecutionFlow.Push(L1770);
L987:          PlayerController* mPlayerController = this->GetOwningPlayer();
L1011:         Widget_Button* mWidget_Button = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Button.Widget_Button_C), mPlayerController);
L1072:         mFScriptDelegate->BindUFunction(this, CentralStorageButtonClicked);
L1095:         mWidget_Button->OnClickedWithRef.AddUnique(mFScriptDelegate);
L1136:         PanelSlot* mPanelSlot = this->mSideMenuVerticalSlot->AddChild(mWidget_Button);
L1187:         int32 mint326 = Temp_int_Array_Index_Variable + 1;
L1229:         FString mFString = KismetStringLibrary->Conv_IntToString(mint326);
L1288:         FString mFString1 = KismetStringLibrary->Concat_StrStr("Storage #", mFString);
L1358:         FText mFText = KismetTextLibrary->Conv_StringToText(mFString1);
L1417:         mWidget_Button->mText = mFText;
L1466:         bool mbool5 = Temp_int_Array_Index_Variable == 0;
L1500:         if (!mbool5) goto ExecutionFlow.Pop();
L1510:         KismetArrayLibrary->Array_Get([ref] this->mCentralStorages, Temp_int_Array_Index_Variable, [ref] mFGCentralStorageContainer);
L1569:         FGInventoryComponent* mFGInventoryComponent = mFGCentralStorageContainer->GetStorageInventory();
L1611:         this->mCentralStorageInventory->Init(mFGInventoryComponent);
L1656:         goto ExecutionFlow.Pop();
L1657:         this->mCentralStorageWindow->SetVisibility(1);
L1695:         goto ExecutionFlow.Pop();
L1696:         int32 mint327 = Temp_int_Loop_Counter_Variable2 + 1;
L1738:         Temp_int_Loop_Counter_Variable2 = mint327;
L1765:         goto L386;
L1770:         int32 mint328 = Temp_int_Loop_Counter_Variable1 + 1;
L1812:         Temp_int_Loop_Counter_Variable1 = mint328;
L1839:         goto L848;
L1844:         ExecutionFlow.Push(L1897);
L1849:         bool mbool6 = this->mSideMenuVerticalSlot->RemoveChildAt(0);
L1896:         goto ExecutionFlow.Pop();
L1897:         int32 mint329 = this->mSideMenuVerticalSlot->GetChildrenCount();
L1947:         bool mbool7 = mint329 > 0;
L1981:         if (!mbool7) goto L657;
L1995:         goto L1844;
L2000:         int32 Temp_int_Loop_Counter_Variable = 0;
L2023:         int32 Temp_int_Array_Index_Variable1 = 0;
L2046:         int32 mint3210 = KismetArrayLibrary->Array_Length([ref] this->mExtraInputToPassThrough);
L2105:         bool mbool8 = Temp_int_Loop_Counter_Variable < mint3210;
L2143:         if (!mbool8) goto L2391;
L2157:         Temp_int_Array_Index_Variable1 = Temp_int_Loop_Counter_Variable;
L2184:         ExecutionFlow.Push(L2317);
L2189:         KismetArrayLibrary->Array_Get([ref] this->mExtraInputToPassThrough, Temp_int_Array_Index_Variable1, [ref] mFName1);
L2248:         int32 mint3211 = KismetArrayLibrary->Array_Add([ref] this->mInputToPassThrough, [ref] mFName1);
L2316:         goto ExecutionFlow.Pop();
L2317:         int32 mint3212 = Temp_int_Loop_Counter_Variable + 1;
L2359:         Temp_int_Loop_Counter_Variable = mint3212;
L2386:         goto L2046;
L2391:         if (!this->mShowCentralStorageIfPossible) goto L2527;
L2405:         this->TryGetCentralStorages();
L2419:         int32 mint3213 = KismetArrayLibrary->Array_Length([ref] this->mCentralStorages);
L2478:         bool mbool9 = mint3213 > 0;
L2512:         if (!mbool9) goto L2527;
L2526:         goto ExecutionFlow.Pop();
L2527:         this->mCentralStorageWindow->SetVisibility(1);
L2565:         PlayerController* mPlayerController1 = this->GetOwningPlayer();
L2589:         Vector2D mVector2D = WidgetLayoutLibrary->GetViewportSize(this);
L2640:         BreakVector2D(mVector2D, [ref] mfloat, [ref] mfloat1);
L2677:         float mfloat2 = mfloat1 / 2;
L2719:         float mfloat3 = mfloat / 2;
L2761:         int32 mint3214 = FTrunc(mfloat2);
L2798:         int32 mint3215 = FTrunc(mfloat3);
L2835:         mPlayerController1->SetMouseLocation(mint3215, mint3214);
L2885:         PlayerController* mPlayerController2 = this->GetOwningPlayer();
L2909:         FGPlayerState* mFGPlayerState = Cast<Class /Script/FactoryGame.FGPlayerState>(mPlayerController2->PlayerState);
L2967:         bool mbool10 = mFGPlayerState;
L2996:         if (!mbool10) goto ExecutionFlow.Pop();
L3006:         this->PlayerState = mFGPlayerState;
L3025:         int32 mint3216 = this->PlayerState->GetNumObservedInventorySlots();
L3075:         this->mCurrentNumSlots = mint3216;
L3102:         this->PlayerState->UpdateNumObservedInventorySlots();
L3134:         goto ExecutionFlow.Pop();
L3135:         this->Init();
L3145:         this->PlayerEquipment->mHandsSlot->Init(this->mEquipmentArmsInventoryComponent);
L3212:         this->PlayerEquipment->mBackSlot->Init(this->mEquipmentBackInventoryComponent);
L3279:         if (!this->mShowCentralStorageIfPossible) goto L3451;
L3293:         GameStateBase* mGameStateBase = GameplayStatics->GetGameState(this);
L3336:         FGCentralStorageSubsystem* mFGCentralStorageSubsystem = FGCentralStorageSubsystem->Get(mGameStateBase);
L3387:         mFScriptDelegate1->BindUFunction(this, OnCentralStorageAddedOrRemoved);
L3410:         mFGCentralStorageSubsystem->CentralStorageAddedOrRemoved.AddUnique(mFScriptDelegate1);
L3451:         mFScriptDelegate2->BindUFunction(this, OnEscapePressed);
L3474:         this->mInventoryWindow->OnClose.AddUnique(mFScriptDelegate2);
L3515:         mFScriptDelegate3->BindUFunction(this, OnEscapePressed);
L3538:         this->mEquipmentWindowContainer->OnClose.AddUnique(mFScriptDelegate3);
L3579:         const TArray<TSubclassOf<FGItemDescriptor>> mconst TArrayTSubclassOfFGItemDescriptor = [ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Resource/BP_HealthGainDescriptor.BP_HealthGainDescriptor_C), ObjectConst(Class /Script/FactoryGame.FGEquipmentDescriptor)];
L3608:         this->mInventoryWindow->SetupRelevantInventory([ref] mconst TArrayTSubclassOfFGItemDescriptor);
L3653:         goto L15;
L3658:         // <Begin Inlined EventGraph Function CloseInventory>;
L3658:         this->OnEscapePressed();
L3672:         goto ExecutionFlow.Pop();
L3673:         this->Destruct();
L3683:         this->Cleanup();
L3697:         goto ExecutionFlow.Pop();
L3698:         this->Construct();
L3708:         goto L2000;
L3713:         int32 mint3217 = KismetArrayLibrary->Array_Length([ref] this->mCentralStorages);
L3772:         int32 mint3218 = this->mSideMenuVerticalSlot->GetChildIndex(mWidget_Button1);
L3831:         bool mbool11 = mint3218 < mint3217;
L3869:         if (!mbool11) goto ExecutionFlow.Pop();
L3879:         mint3218 = this->mSideMenuVerticalSlot->GetChildIndex(mWidget_Button1);
L3938:         KismetArrayLibrary->Array_Get([ref] this->mCentralStorages, mint3218, [ref] mFGCentralStorageContainer1);
L3997:         bool mbool12 = KismetSystemLibrary->IsValid(mFGCentralStorageContainer1);
L4048:         if (!mbool12) goto ExecutionFlow.Pop();
L4058:         mint3218 = this->mSideMenuVerticalSlot->GetChildIndex(mWidget_Button1);
L4117:         KismetArrayLibrary->Array_Get([ref] this->mCentralStorages, mint3218, [ref] mFGCentralStorageContainer1);
L4176:         FGInventoryComponent* mFGInventoryComponent1 = mFGCentralStorageContainer1->GetStorageInventory();
L4218:         this->mCentralStorageInventory->Init(mFGInventoryComponent1);
L4263:         goto ExecutionFlow.Pop();
L4264:         // <Begin Inlined EventGraph Function OnCentralStorageAddedOrRemoved>;
L4264:         this->TryGetCentralStorages();
L4278:         goto L1897;
L4283:         this->mInventoryComponent->SortInventory();
L4315:         goto ExecutionFlow.Pop();
L4316:         // <Begin Inlined EventGraph Function BndEvt__Widget_StandardButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature>;
L4316:         goto L4283;
L4321:         PlayerController* mPlayerController3 = this->GetOwningPlayer();
L4345:         HUD* mHUD = mPlayerController3->GetHUD();
L4387:         FGHUD* mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L4423:         bool mbool13 = mFGHUD;
L4452:         FGGameUI* mFGGameUI = mFGHUD->GetGameUI();
L4494:         mFGGameUI->SetWindowWantsInventoryAddon(true);
L4527:         mPlayerController3 = this->GetOwningPlayer();
L4551:         mHUD = mPlayerController3->GetHUD();
L4593:         mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L4629:         mbool13 = mFGHUD;
L4658:         mFGGameUI = mFGHUD->GetGameUI();
L4700:         mFGGameUI->SetShowInventory(true);
L4733:         goto ExecutionFlow.Pop();
L4734:         mWidget_InventorySlot->QuickMoveInventory(false);
L4771:         this->mInventoryWindow->bIsFocusable = true;
L4804:         PlayerController* mPlayerController4 = this->GetOwningPlayer();
L4828:         this->mInventoryWindow->SetUserFocus(mPlayerController4);
L4869:         goto ExecutionFlow.Pop();
============ END FUNCTION ExecuteUbergraph_Widget_PlayerInventory ==============
