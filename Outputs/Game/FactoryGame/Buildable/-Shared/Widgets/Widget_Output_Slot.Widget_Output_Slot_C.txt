########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/-Shared/Widgets/Widget_Output_Slot.Widget_Output_Slot_C
########################





============ BEGIN FUNCTION SetShowSecondPartsPerMin ==============
L0:            this->mShowSecondPartsPerMin = ShowSecondPartsPerMin;
L19:           bool mbool = KismetSystemLibrary->IsValidClass(SecondaryItemDesc);
L70:           uint8 Temp_byte_Variable = 3;
L90:           uint8 Temp_byte_Variable1 = 1;
L110:          bool mbool1 = this->mShowSecondPartsPerMin && mbool;
L148:          bool Temp_bool_Variable = mbool1;
L167:          this->mSecondPartsPerMin->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
});
L256:          this->mSecondaryItemDesc = SecondaryItemDesc;
============ END FUNCTION SetShowSecondPartsPerMin ==============





============ BEGIN FUNCTION UpdateProductionStats ==============
L0:            bool mbool = KismetSystemLibrary->IsValidClass(this->mItemDescriptor);
L51:           if (!mbool) goto L3746;
L65:           uint8 muint8 = FGItemDescriptor->GetForm(this->mItemDescriptor);
L124:          uint8 LocalForm = muint8;
L151:          float mfloat = 60 / cycletime;
L193:          float mfloat1 = FGInventoryLibrary->GetAmountConvertedByForm(NumPerCycle, LocalForm);
L261:          float mfloat2 = mfloat1 * mfloat;
L307:          FText mFText = KismetTextLibrary->Conv_FloatToText(mfloat2, 0, false, true, 1, 324, 1, 1);
L390:          this->mNumPerSecond->SetText(mFText);
L435:          bool mbool1 = LocalForm != 1;
L466:          FText mFText1 = FGInventoryLibrary->GetProductionSuffixFromFormType(LocalForm);
L525:          mFormatArgumentData.ArgumentName = "suffix";
L560:          mFormatArgumentData.ArgumentValueType = 4;
L589:          mFormatArgumentData.ArgumentValue = mFText1;
L625:          mFormatArgumentData.ArgumentValueInt = 0;
L657:          mFormatArgumentData.ArgumentValueFloat = 0;
L689:          mFormatArgumentData.ArgumentValueGender = 0;
L718:          bool mbool2 = KismetSystemLibrary->IsValidClass(this->mSecondaryItemDesc);
L769:          TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData];
L789:          FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L902:          bool mbool3 = this->mShowSecondPartsPerMin && mbool2;
L940:          bool Temp_bool_Variable = mbool3;
L959:          bool Temp_bool_Variable2 = mbool1;
L978:          mFormatArgumentData1.ArgumentName = "suffix";
L1013:         mFormatArgumentData1.ArgumentValueType = 4;
L1042:         mFormatArgumentData1.ArgumentValue = switch (Temp_bool_Variable2) {
case false -> mFText1;
case true -> mFText2;
default -> mFText3;
};
L1122:         mFormatArgumentData1.ArgumentValueInt = 0;
L1154:         mFormatArgumentData1.ArgumentValueFloat = 0;
L1186:         mFormatArgumentData1.ArgumentValueGender = 0;
L1215:         TArray<FormatArgumentData> mTArrayFormatArgumentData1 = [mFormatArgumentData1];
L1235:         FText mFText4 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData1);
L1353:         FText mFText5 = FGInventoryLibrary->GetProductionSuffixFromFormType(LocalForm);
L1412:         mFormatArgumentData2.ArgumentName = "suffix";
L1447:         mFormatArgumentData2.ArgumentValueType = 4;
L1476:         mFormatArgumentData2.ArgumentValue = mFText5;
L1512:         mFormatArgumentData2.ArgumentValueInt = 0;
L1544:         mFormatArgumentData2.ArgumentValueFloat = 0;
L1576:         mFormatArgumentData2.ArgumentValueGender = 0;
L1605:         TArray<FormatArgumentData> mTArrayFormatArgumentData2 = [mFormatArgumentData2];
L1625:         FText mFText6 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData2);
L1743:         this->mPerMinuteText->SetText(switch (Temp_bool_Variable) {
case false -> mFText6;
case true -> mFText4;
default -> mFText7;
});
L1832:         this->mEfficiency->mManufacturingStat = efficiency;
L1881:         FText mFText8 = KismetTextLibrary->Conv_FloatToText(cycletime, 0, false, true, 1, 324, 1, 1);
L1964:         FString mFString = KismetTextLibrary->Conv_TextToString([ref] mFText8);
L2023:         float mfloat3 = KismetStringLibrary->Conv_StringToFloat(mFString);
L2082:         this->mCycleTime->mManufacturingStat = mfloat3;
L2131:         FText mFText9 = KismetTextLibrary->Conv_FloatToText(PowerConsumption, 0, false, true, 1, 324, 1, 1);
L2214:         FString mFString1 = KismetTextLibrary->Conv_TextToString([ref] mFText9);
L2273:         float mfloat4 = KismetStringLibrary->Conv_StringToFloat(mFString1);
L2332:         this->mPowerConsumption->mManufacturingStat = mfloat4;
L2381:         bool mbool4 = KismetSystemLibrary->IsValidClass(this->mSecondaryItemDesc);
L2432:         bool mbool5 = this->mShowSecondPartsPerMin && mbool4;
L2470:         if (!mbool5) goto L3771;
L2484:         uint8 muint81 = FGItemDescriptor->GetForm(this->mSecondaryItemDesc);
L2543:         bool mbool6 = muint81 != 1;
L2574:         bool Temp_bool_Variable1 = mbool6;
L2593:         FText mFText10 = FGInventoryLibrary->GetProductionSuffixFromFormType(muint81);
L2652:         mFormatArgumentData3.ArgumentName = "suffix";
L2687:         mFormatArgumentData3.ArgumentValueType = 4;
L2716:         mFormatArgumentData3.ArgumentValue = mFText10;
L2752:         mFormatArgumentData3.ArgumentValueInt = 0;
L2784:         mFormatArgumentData3.ArgumentValueFloat = 0;
L2816:         mFormatArgumentData3.ArgumentValueGender = 0;
L2845:         TArray<FormatArgumentData> mTArrayFormatArgumentData3 = [mFormatArgumentData3];
L2865:         FText mFText11 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData3);
L2978:         mFormatArgumentData4.ArgumentName = "suffix";
L3013:         mFormatArgumentData4.ArgumentValueType = 4;
L3042:         mFormatArgumentData4.ArgumentValue = switch (Temp_bool_Variable1) {
case false -> mFText10;
case true -> mFText11;
default -> mFText12;
};
L3122:         mFormatArgumentData4.ArgumentValueInt = 0;
L3154:         mFormatArgumentData4.ArgumentValueFloat = 0;
L3186:         mFormatArgumentData4.ArgumentValueGender = 0;
L3215:         TArray<FormatArgumentData> mTArrayFormatArgumentData4 = [mFormatArgumentData4];
L3235:         FText mFText13 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData4);
L3353:         this->mSecondPerMinText->SetText(mFText13);
L3398:         uint8 muint82 = FGItemDescriptor->GetForm(this->mSecondaryItemDesc);
L3457:         float mfloat5 = FGInventoryLibrary->GetAmountConvertedByForm(SecondNumPerCycle, muint82);
L3525:         float mfloat6 = 60 / cycletime;
L3567:         float mfloat7 = mfloat5 * mfloat6;
L3613:         FText mFText14 = KismetTextLibrary->Conv_FloatToText(mfloat7, 0, false, true, 1, 324, 1, 1);
L3696:         this->mSecondNumPerSec->SetText(mFText14);
L3741:         // <End Inlined EventGraph Function>;
L3746:         LocalForm = 1;
L3766:         goto L151;
============ END FUNCTION UpdateProductionStats ==============





============ BEGIN FUNCTION UpdateCycleProgress ==============
L0:            float mfloat = CycleProgress * 10;
L42:           int32 mint32 = FTrunc(mfloat);
L79:           int32 mint321 = mint32 * 10;
L121:          FText mFText = KismetTextLibrary->Conv_IntToText(mint321, false, false, 1, 324);
L192:          mFormatArgumentData.ArgumentName = "A";
L222:          mFormatArgumentData.ArgumentValueType = 4;
L251:          mFormatArgumentData.ArgumentValue = mFText;
L287:          mFormatArgumentData.ArgumentValueInt = 0;
L319:          mFormatArgumentData.ArgumentValueFloat = 0;
L351:          mFormatArgumentData.ArgumentValueGender = 0;
L380:          TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData];
L400:          FText mFText1 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L503:          this->mPercentageText->SetText(mFText1);
L548:          this->mProgressBar->mProgressBar->SetPercent(CycleProgress);
============ END FUNCTION UpdateCycleProgress ==============





============ BEGIN FUNCTION UpdateStaticInfo ==============
L0:            this->mRecipeText = RecipeName;
L27:           this->mRecipeName->SetText(this->mRecipeText);
============ END FUNCTION UpdateStaticInfo ==============





============ BEGIN FUNCTION GenerateCostSlots ==============
L0:            ExecutionFlow.Push(L1110);
L5:            this->mSlotContainer->ClearChildren();
L41:           int32 Temp_int_Loop_Counter_Variable = 0;
L64:           int32 Temp_int_Array_Index_Variable = 0;
L87:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] OutputCostSlotData);
L146:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L184:          if (!mbool) goto ExecutionFlow.Pop();
L194:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L221:          ExecutionFlow.Push(L1036);
L226:          PlayerController* mPlayerController = this->GetOwningPlayer();
L250:          BPW_OutputInventorySlot* mBPW_OutputInventorySlot = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Buildable/-Shared/Widgets/BPW_OutputInventorySlot.BPW_OutputInventorySlot_C), mPlayerController);
L311:          KismetArrayLibrary->Array_Get([ref] OutputCostSlotData, Temp_int_Array_Index_Variable, [ref] mOutputCostSlotData_Struct);
L370:          KismetSystemLibrary->SetTextPropertyByName(mBPW_OutputInventorySlot, "mTitle", [ref] mOutputCostSlotData_Struct.Title_3_16865392480E04744923368E818FDF9E);
L442:          KismetArrayLibrary->Array_Get([ref] OutputCostSlotData, Temp_int_Array_Index_Variable, [ref] mOutputCostSlotData_Struct);
L501:          KismetSystemLibrary->SetObjectPropertyByName(mBPW_OutputInventorySlot, "mCachedInventoryCompontent", mOutputCostSlotData_Struct.InventoryComponent_6_670B318B4DE9249E98B040BFD46013A9);
L573:          KismetArrayLibrary->Array_Get([ref] OutputCostSlotData, Temp_int_Array_Index_Variable, [ref] mOutputCostSlotData_Struct);
L632:          KismetSystemLibrary->SetIntPropertyByName(mBPW_OutputInventorySlot, "mSlotIdx", mOutputCostSlotData_Struct.InventorySlotIndex_10_ECF91A0C4E759F6F2FC3768CE0512AB9);
L704:          uint8 muint8 = KismetSystemLibrary->MakeLiteralByte(1);
L756:          KismetSystemLibrary->SetBytePropertyByName(mBPW_OutputInventorySlot, "mSlotType", muint8);
L819:          KismetArrayLibrary->Array_Get([ref] OutputCostSlotData, Temp_int_Array_Index_Variable, [ref] mOutputCostSlotData_Struct);
L878:          KismetSystemLibrary->SetIntPropertyByName(mBPW_OutputInventorySlot, "mRequiredAmount", mOutputCostSlotData_Struct.RequiredAmount_14_830FF83949DA2C4550D4DFADE26300D5);
L950:          HorizontalBoxSlot* mHorizontalBoxSlot = this->mSlotContainer->AddChildToHorizontalBox(mBPW_OutputInventorySlot);
L1001:         mHorizontalBoxSlot->SetVerticalAlignment(0);
L1035:         goto ExecutionFlow.Pop();
L1036:         int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L1078:         Temp_int_Loop_Counter_Variable = mint321;
L1105:         goto L87;
============ END FUNCTION GenerateCostSlots ==============





============ BEGIN FUNCTION GetSlot ==============
L0:            int32 mint32 = this->mSlotContainer->GetChildrenCount();
L50:           bool mbool = index < mint32;
L88:           if (!mbool) goto L289;
L102:          Widget* mWidget = this->mSlotContainer->GetChildAt(index);
L153:          BPW_OutputInventorySlot* mBPW_OutputInventorySlot = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Buildable/-Shared/Widgets/BPW_OutputInventorySlot.BPW_OutputInventorySlot_C>(mWidget);
L189:          bool mbool1 = mBPW_OutputInventorySlot;
L218:          if (!mbool1) goto L289;
L232:          Widget_InventorySlot* InventorySlot = mBPW_OutputInventorySlot->mInventorySlot;
L273:          bool success = true;
L284:          // <End Inlined EventGraph Function>;
L289:          InventorySlot = nullptr;
L300:          success = false;
============ END FUNCTION GetSlot ==============





============ BEGIN FUNCTION GenerateOutputSlots ==============
L0:            ExecutionFlow.Push(L950);
L5:            this->mSlotContainer->ClearChildren();
L41:           int32 Temp_int_Loop_Counter_Variable = 0;
L64:           int32 Temp_int_Array_Index_Variable = 0;
L87:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] OutputSlotData);
L146:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L184:          if (!mbool) goto ExecutionFlow.Pop();
L194:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L221:          ExecutionFlow.Push(L876);
L226:          PlayerController* mPlayerController = this->GetOwningPlayer();
L250:          BPW_OutputInventorySlot* mBPW_OutputInventorySlot = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Buildable/-Shared/Widgets/BPW_OutputInventorySlot.BPW_OutputInventorySlot_C), mPlayerController);
L311:          KismetArrayLibrary->Array_Get([ref] OutputSlotData, Temp_int_Array_Index_Variable, [ref] mOutputSlotData_Struct);
L370:          KismetSystemLibrary->SetTextPropertyByName(mBPW_OutputInventorySlot, "mTitle", [ref] mOutputSlotData_Struct.Title_3_16865392480E04744923368E818FDF9E);
L442:          KismetArrayLibrary->Array_Get([ref] OutputSlotData, Temp_int_Array_Index_Variable, [ref] mOutputSlotData_Struct);
L501:          KismetSystemLibrary->SetObjectPropertyByName(mBPW_OutputInventorySlot, "mCachedInventoryCompontent", mOutputSlotData_Struct.InventoryComponent_6_670B318B4DE9249E98B040BFD46013A9);
L573:          KismetArrayLibrary->Array_Get([ref] OutputSlotData, Temp_int_Array_Index_Variable, [ref] mOutputSlotData_Struct);
L632:          KismetSystemLibrary->SetIntPropertyByName(mBPW_OutputInventorySlot, "mSlotIdx", mOutputSlotData_Struct.InventorySlotIndex_10_ECF91A0C4E759F6F2FC3768CE0512AB9);
L704:          HorizontalBoxSlot* mHorizontalBoxSlot = this->mSlotContainer->AddChildToHorizontalBox(mBPW_OutputInventorySlot);
L755:          mHorizontalBoxSlot->SetVerticalAlignment(0);
L789:          mFScriptDelegate->BindUFunction(this, OnInventorySlotStackMove);
L812:          mBPW_OutputInventorySlot->mInventorySlot->OnMoveStack.AddUnique(mFScriptDelegate);
L875:          goto ExecutionFlow.Pop();
L876:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L918:          Temp_int_Loop_Counter_Variable = mint321;
L945:          goto L87;
============ END FUNCTION GenerateOutputSlots ==============





============ BEGIN FUNCTION UpdateWasteSlotVisibility ==============
L0:            uint8 Temp_byte_Variable2 = 4;
L20:           uint8 Temp_byte_Variable3 = 1;
L40:           bool mbool = this->InsertWasteSlotHere->HasAnyChildren();
L82:           bool Temp_bool_Variable1 = mbool;
L101:          this->mWasteSlotContainer->SetVisibility(switch (Temp_bool_Variable1) {
case false -> Temp_byte_Variable3;
case true -> Temp_byte_Variable2;
default -> muint8;
});
L190:          uint8 Temp_byte_Variable = 4;
L210:          uint8 Temp_byte_Variable1 = 2;
L230:          bool mbool1 = this->InsertWasteSlotHere->HasAnyChildren();
L272:          bool Temp_bool_Variable = mbool1;
L291:          this->mInputLabel->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint81;
});
============ END FUNCTION UpdateWasteSlotVisibility ==============





============ BEGIN FUNCTION CreateEfficiencyToolTip ==============
L0:            FText efficiencyDescriptionText = "[object Object]";
L135:          FText efficiencyTitleText = "[object Object]";
L203:          PlayerController* mPlayerController = this->GetOwningPlayer();
L227:          Widget_Tooltip* mWidget_Tooltip = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Tooltip.Widget_Tooltip_C), mPlayerController);
L288:          KismetSystemLibrary->SetBoolPropertyByName(mWidget_Tooltip, "mIsManufacturingStat", true);
L343:          KismetSystemLibrary->SetTextPropertyByName(mWidget_Tooltip, "mDescriptionText", [ref] efficiencyDescriptionText);
L406:          KismetSystemLibrary->SetTextPropertyByName(mWidget_Tooltip, "mTitleText", [ref] efficiencyTitleText);
L469:          Widget* ReturnValue = mWidget_Tooltip;
============ END FUNCTION CreateEfficiencyToolTip ==============





============ BEGIN FUNCTION CreatePowerConsumptionToolTip ==============
L0:            FText productionDescriptionText = "[object Object]";
L95:           FText productionTitleText = "[object Object]";
L170:          PlayerController* mPlayerController = this->GetOwningPlayer();
L194:          Widget_Tooltip* mWidget_Tooltip = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Tooltip.Widget_Tooltip_C), mPlayerController);
L255:          KismetSystemLibrary->SetBoolPropertyByName(mWidget_Tooltip, "mIsManufacturingStat", true);
L310:          Widget_Tooltip* localTooltip = mWidget_Tooltip;
L329:          if (!this->isProductionSlot) goto L581;
L343:          localTooltip->mDescriptionText = "[object Object]";
L460:          localTooltip->mTitleText = "[object Object]";
L557:          Widget* ReturnValue = localTooltip;
L576:          goto L813;
L581:          localTooltip->mDescriptionText = "[object Object]";
L698:          localTooltip->mTitleText = "[object Object]";
L794:          ReturnValue = localTooltip;
============ END FUNCTION CreatePowerConsumptionToolTip ==============





============ BEGIN FUNCTION CreateCycleTimeTooltip ==============
L0:            FText cycleTimeDescription = "[object Object]";
L92:           FText cycleTimeTitle = "[object Object]";
L165:          PlayerController* mPlayerController = this->GetOwningPlayer();
L189:          Widget_Tooltip* mWidget_Tooltip = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Tooltip.Widget_Tooltip_C), mPlayerController);
L250:          KismetSystemLibrary->SetBoolPropertyByName(mWidget_Tooltip, "mIsManufacturingStat", true);
L305:          Widget_Tooltip* localTooltip = mWidget_Tooltip;
L324:          if (!this->isProductionSlot) goto L571;
L338:          localTooltip->mTitleText = "[object Object]";
L433:          localTooltip->mDescriptionText = "[object Object]";
L547:          Widget* ReturnValue = localTooltip;
L566:          goto L820;
L571:          localTooltip->mTitleText = "[object Object]";
L667:          localTooltip->mDescriptionText = "[object Object]";
L801:          ReturnValue = localTooltip;
============ END FUNCTION CreateCycleTimeTooltip ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Output_Slot, from label L10;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION PreConstruct ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PreConstruct;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Output_Slot, from label L1040;
============ END FUNCTION PreConstruct ==============





============ BEGIN FUNCTION OnInventorySlotStackMove ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnInventorySlotStackMove;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Output_Slot, from label L1281;
============ END FUNCTION OnInventorySlotStackMove ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_Output_Slot ==============
L10:           // <Begin Inlined EventGraph Function Construct>;
L10:           this->Construct();
L20:           uint8 Temp_byte_Variable = 0;
L40:           uint8 Temp_byte_Variable1 = 1;
L60:           PlayerController* mPlayerController = this->GetOwningPlayer();
L84:           FGUnlockSubsystem* mFGUnlockSubsystem = FGUnlockSubsystem->Get(mPlayerController);
L135:          bool mbool = mFGUnlockSubsystem->GetIsBuildingEfficiencyUnlocked();
L177:          bool Temp_bool_Variable = mbool;
L196:          this->mEfficiency->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
});
L285:          // <End Inlined EventGraph Function>;
L290:          uint8 Temp_byte_Variable2 = 0;
L310:          uint8 Temp_byte_Variable3 = 1;
L330:          bool Temp_bool_Variable1 = this->isProductionSlot;
L349:          this->mPerSecondHBox->SetVisibility(switch (Temp_bool_Variable1) {
case false -> Temp_byte_Variable3;
case true -> Temp_byte_Variable2;
default -> muint81;
});
L438:          this->mProducingTextBox->SetVisibility(switch (Temp_bool_Variable1) {
case false -> Temp_byte_Variable3;
case true -> Temp_byte_Variable2;
default -> muint81;
});
L527:          bool Temp_bool_Variable2 = this->isProductionSlot;
L546:          mMargin.Left = 0;
L578:          mMargin.Top = 24;
L610:          mMargin.Right = 0;
L642:          mMargin.Bottom = 5;
L674:          mMargin1.Left = 0;
L706:          mMargin1.Top = 24;
L738:          mMargin1.Right = 0;
L770:          mMargin1.Bottom = 16;
L802:          this->mProgressBar->SetPadding(switch (Temp_bool_Variable2) {
case false -> mMargin1;
case true -> mMargin;
default -> mMargin2;
});
L887:          bool Temp_bool_Variable4 = this->mUseCycleTime;
L906:          uint8 Temp_byte_Variable6 = 0;
L926:          uint8 Temp_byte_Variable7 = 1;
L946:          this->mCycleTime->SetVisibility(switch (Temp_bool_Variable4) {
case false -> Temp_byte_Variable7;
case true -> Temp_byte_Variable6;
default -> muint82;
});
L1035:         // <End Inlined EventGraph Function>;
L1040:         uint8 Temp_byte_Variable4 = 0;
L1060:         uint8 Temp_byte_Variable5 = 1;
L1080:         bool Temp_bool_Variable3 = this->mUseCustomSlot;
L1099:         this->mOldSlotContainer->SetVisibility(switch (Temp_bool_Variable3) {
case false -> Temp_byte_Variable5;
case true -> Temp_byte_Variable4;
default -> muint83;
});
L1188:         this->UpdateWasteSlotVisibility();
L1202:         bool mbool1 = !this->isProductionSlot;
L1231:         this->mProgressBar->SetUseIconContainer(mbool1);
L1276:         goto L290;
L1281:         Pawn* mPawn = this->GetOwningPlayerPawn();
L1301:         FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L1337:         bool mbool2 = mFGCharacterPlayer;
L1366:         FGInventoryComponent* mFGInventoryComponent = mFGCharacterPlayer->GetInventory();
L1408:         this->DropInventoryStackOnInventoryComponent(mWidget_InventorySlot, mFGInventoryComponent, [ref] mbool3);
L1449:         KismetSystemLibrary->PrintString(this, "Move Atempted", true, true, ScriptStruct /Script/CoreUObject.LinearColor(R = 0, G = 0.6600000262260437, B = 1, A = 1), 2);
============ END FUNCTION ExecuteUbergraph_Widget_Output_Slot ==============





============ BEGIN FUNCTION OnDropInventorySlotStack__DelegateSignature ==============
============ END FUNCTION OnDropInventorySlotStack__DelegateSignature ==============
