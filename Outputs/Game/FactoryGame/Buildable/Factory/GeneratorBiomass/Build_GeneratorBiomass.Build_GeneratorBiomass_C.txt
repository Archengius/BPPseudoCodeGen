########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Build_GeneratorBiomass.Build_GeneratorBiomass_C
########################





============ BEGIN FUNCTION HandleStartEffects ==============
L0:            ExecutionFlow.Push(L852);
L5:            ExecutionFlow.Push(L233);
L10:           AkComponent* mAkComponent = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Audio/Play_F_Generator_Biomass_Funnel.Play_F_Generator_Biomass_Funnel), this->MainMesh_skl, "AudioSocketGrinder", true);
L84:           AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Audio/Play_F_Generator_Biomass_Grinder.Play_F_Generator_Biomass_Grinder), this->MainMesh_skl, "AudioSocketGrinder", true);
L158:          AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Audio/Play_F_Generator_Biomass_LavaFire.Play_F_Generator_Biomass_LavaFire), this->MainMesh_skl, "burnerVfxSocket", true);
L232:          goto ExecutionFlow.Pop();
L233:          ExecutionFlow.Push(L512);
L238:          ExecutionFlow.Push(L309);
L243:          bool mbool = KismetSystemLibrary->IsValid(this->mFunnelVfx);
L294:          if (!mbool) goto L715;
L308:          goto ExecutionFlow.Pop();
L309:          bool mbool1 = KismetSystemLibrary->IsValid(this->mBioGenVfx01);
L360:          if (!mbool1) goto L375;
L374:          goto ExecutionFlow.Pop();
L375:          ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAttached(ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Factory/Generator_Biomass/P_Generator_Biomass_Smoke.P_Generator_Biomass_Smoke), this->MainMesh_skl, "burnerVfxSocket", Vector(0, 0, 0), Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), 0, true, 0);
L492:          this->mBioGenVfx01 = mParticleSystemComponent;
L511:          goto ExecutionFlow.Pop();
L512:          bool mbool2 = KismetSystemLibrary->IsValid(this->mBioGenVfx02);
L563:          if (!mbool2) goto L578;
L577:          goto ExecutionFlow.Pop();
L578:          ParticleSystemComponent* mParticleSystemComponent1 = GameplayStatics->SpawnEmitterAttached(ObjectConst(ParticleSystem /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Particle/Grinder.Grinder), this->MainMesh_skl, "grinderVfxSocket", Vector(0, 0, 0), Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), 0, true, 0);
L695:          this->mBioGenVfx02 = mParticleSystemComponent1;
L714:          goto ExecutionFlow.Pop();
L715:          ParticleSystemComponent* mParticleSystemComponent2 = GameplayStatics->SpawnEmitterAttached(ObjectConst(ParticleSystem /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Particle/FoliageFunnel.FoliageFunnel), this->MainMesh_skl, "funnelVfxSocket", Vector(0, 0, 0), Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), 0, true, 0);
L832:          this->mFunnelVfx = mParticleSystemComponent2;
L851:          goto ExecutionFlow.Pop();
============ END FUNCTION HandleStartEffects ==============





============ BEGIN FUNCTION HandleStopEffects ==============
L0:            ExecutionFlow.Push(L1120);
L5:            ExecutionFlow.Push(L247);
L10:           if (!bStopProducing) goto L538;
L24:           AkComponent* mAkComponent = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Audio/Stop_F_Generator_Biomass_Funnel.Stop_F_Generator_Biomass_Funnel), this->MainMesh_skl, "AudioSocketGrinder", true);
L98:           AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Audio/Stop_F_Generator_Biomass_Grinder.Stop_F_Generator_Biomass_Grinder), this->MainMesh_skl, "AudioSocketGrinder", true);
L172:          AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/GeneratorBiomass/Audio/Stop_F_Generator_Biomass_LavaFire.Stop_F_Generator_Biomass_LavaFire), this->MainMesh_skl, "burnerVfxSocket", true);
L246:          goto ExecutionFlow.Pop();
L247:          bool mbool = KismetSystemLibrary->IsValid(this->mFunnelVfx);
L298:          if (!mbool) goto L345;
L312:          this->mFunnelVfx->K2_DestroyComponent(this);
L345:          bool mbool1 = KismetSystemLibrary->IsValid(this->mBioGenVfx01);
L396:          if (!mbool1) goto L443;
L410:          this->mBioGenVfx01->K2_DestroyComponent(this);
L443:          bool mbool2 = KismetSystemLibrary->IsValid(this->mBioGenVfx02);
L494:          if (!mbool2) goto ExecutionFlow.Pop();
L504:          this->mBioGenVfx02->K2_DestroyComponent(this);
L537:          goto ExecutionFlow.Pop();
L538:          int32 Temp_int_Loop_Counter_Variable = 0;
L561:          int32 Temp_int_Array_Index_Variable = 0;
L584:          TArray<AkComponent*> mTArrayAkComponent = this->GetComponentsByClass(ObjectConst(Class /Script/AkAudio.AkComponent));
L621:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayAkComponent);
L680:          bool mbool3 = Temp_int_Loop_Counter_Variable < mint32;
L718:          if (!mbool3) goto ExecutionFlow.Pop();
L728:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L755:          ExecutionFlow.Push(L1046);
L760:          mTArrayAkComponent = this->GetComponentsByClass(ObjectConst(Class /Script/AkAudio.AkComponent));
L797:          KismetArrayLibrary->Array_Get([ref] mTArrayAkComponent, Temp_int_Array_Index_Variable, [ref] mAkComponent3);
L856:          bool mbool4 = KismetSystemLibrary->IsValid(mAkComponent3);
L907:          if (!mbool4) goto ExecutionFlow.Pop();
L917:          mTArrayAkComponent = this->GetComponentsByClass(ObjectConst(Class /Script/AkAudio.AkComponent));
L954:          KismetArrayLibrary->Array_Get([ref] mTArrayAkComponent, Temp_int_Array_Index_Variable, [ref] mAkComponent3);
L1013:         mAkComponent3->Stop();
L1045:         goto ExecutionFlow.Pop();
L1046:         int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L1088:         Temp_int_Loop_Counter_Variable = mint321;
L1115:         goto L584;
============ END FUNCTION HandleStopEffects ==============





============ BEGIN FUNCTION StartProductionLoopEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StartProductionLoopEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_GeneratorBiomass, from label L1566;
============ END FUNCTION StartProductionLoopEffects ==============





============ BEGIN FUNCTION StopProductionLoopEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StopProductionLoopEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_GeneratorBiomass, from label L1519;
============ END FUNCTION StopProductionLoopEffects ==============





============ BEGIN FUNCTION LostSignificance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: LostSignificance;
L0:            // Implementation: Function ExecuteUbergraph_Build_GeneratorBiomass, from label L1514;
============ END FUNCTION LostSignificance ==============





============ BEGIN FUNCTION ReceiveUpdateEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ReceiveUpdateEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_GeneratorBiomass, from label L443;
============ END FUNCTION ReceiveUpdateEffects ==============





============ BEGIN FUNCTION GainedSignificance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: GainedSignificance;
L0:            // Implementation: Function ExecuteUbergraph_Build_GeneratorBiomass, from label L1439;
============ END FUNCTION GainedSignificance ==============





============ BEGIN FUNCTION ExecuteUbergraph_Build_GeneratorBiomass ==============
L10:           this->GainedSignificance();
L20:           bool mbool = this->HasFuel();
L40:           if (!mbool) goto L1608;
L54:           this->TryStartProductionLoopEffects(false);
L65:           // <End Inlined EventGraph Function>;
L70:           bool mbool1 = KismetSystemLibrary->IsValid(this->mFunnelVfx);
L121:          if (!mbool1) goto L1608;
L135:          float mfloat = FClamp(this->mCachedLoadPercentage, 0.20000000298023224, 1);
L182:          this->mFunnelVfx->SetFloatParameter("FoliageRateScale", mfloat);
L236:          mfloat = FClamp(this->mCachedLoadPercentage, 0.20000000298023224, 1);
L283:          this->mFunnelVfx->SetFloatParameter("LeavesRateScale", mfloat);
L337:          mfloat = FClamp(this->mCachedLoadPercentage, 0.20000000298023224, 1);
L384:          this->mFunnelVfx->SetFloatParameter("SmokeRateScale", mfloat);
L438:          // <End Inlined EventGraph Function>;
L443:          this->ReceiveUpdateEffects(mfloat1);
L462:          float mfloat2 = this->GetLoadPercentage();
L490:          bool mbool2 = NearlyEqual_FloatFloat(mfloat2, this->mCachedLoadPercentage, 0.00009999999747378752);
L533:          bool mbool3 = !mbool2;
L562:          if (!mbool3) goto L1608;
L576:          float mfloat3 = this->GetLoadPercentage();
L604:          this->mCachedLoadPercentage = mfloat3;
L631:          float mfloat4 = this->mCachedLoadPercentage * 2;
L673:          float mfloat5 = FClamp(mfloat4, 0.10000000149011612, 2);
L720:          this->MainMesh_skl->SetScalarParameterValueOnMaterials("MoltenEmissive", mfloat5);
L774:          float mfloat6 = this->GetLoadPercentage();
L802:          AkGameplayStatics->SetActorRTPCValue("RTPC_B_LoadPercentage", mfloat6, 0, this);
L862:          bool mbool4 = KismetSystemLibrary->IsValid(this->mBioGenVfx01);
L913:          if (!mbool4) goto L1608;
L927:          float mfloat7 = FClamp(this->mCachedLoadPercentage, 0.20000000298023224, 1);
L974:          this->mBioGenVfx01->SetFloatParameter("SmokeShortRateScale", mfloat7);
L1028:         float mfloat8 = FClamp(this->mCachedLoadPercentage, 0.20000000298023224, 1);
L1075:         this->mBioGenVfx01->SetFloatParameter("SparksRateScale", mfloat8);
L1129:         float mfloat9 = FClamp(this->mCachedLoadPercentage, 0.20000000298023224, 1);
L1176:         this->mBioGenVfx01->SetFloatParameter("DistortionRateScale", mfloat9);
L1230:         this->mBioGenVfx01->SetFloatParameter("LightsRateScale", this->mCachedLoadPercentage);
L1284:         this->mBioGenVfx01->SetFloatParameter("SmokeLongRateScale", this->mCachedLoadPercentage);
L1338:         float mfloat10 = this->mCachedLoadPercentage * 10;
L1380:         this->mBioGenVfx01->SetFloatParameter("SmokeLongLifetime", mfloat10);
L1434:         goto L70;
L1439:         // <Begin Inlined EventGraph Function GainedSignificance>;
L1439:         goto L10;
L1444:         this->TryStopProductionLoopEffects(false);
L1455:         // <End Inlined EventGraph Function>;
L1460:         bool mbool5 = this->HasFuel();
L1480:         if (!mbool5) goto L1608;
L1494:         goto L1444;
L1499:         this->LostSignificance();
L1509:         goto L1460;
L1514:         // <Begin Inlined EventGraph Function LostSignificance>;
L1514:         goto L1499;
L1519:         this->StopProductionLoopEffects(mbool6);
L1538:         this->HandleStopEffects(mbool6);
L1561:         // <End Inlined EventGraph Function>;
L1566:         this->StartProductionLoopEffects(mbool7);
L1585:         this->HandleStartEffects(mbool7);
============ END FUNCTION ExecuteUbergraph_Build_GeneratorBiomass ==============
