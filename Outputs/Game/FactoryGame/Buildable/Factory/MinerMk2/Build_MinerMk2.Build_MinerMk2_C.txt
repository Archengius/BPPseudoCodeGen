########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/Factory/MinerMk2/Build_MinerMk2.Build_MinerMk2_C
########################





============ BEGIN FUNCTION GetMiningParticles ==============
L0:            ExecutionFlow.Push(L995);
L5:            this->GetExtractedResource([ref] mTSubclassOfFGItemDescriptor);
L28:           int32 mint32 = KismetArrayLibrary->Array_Add([ref] local_outputClasses, [ref] mTSubclassOfFGItemDescriptor);
L96:           bool Temp_bool_True_if_break_was_hit_Variable = false;
L107:          int32 Temp_int_Loop_Counter_Variable = 0;
L130:          int32 Temp_int_Array_Index_Variable = 0;
L153:          bool mbool = !Temp_bool_True_if_break_was_hit_Variable;
L182:          int32 mint321 = KismetArrayLibrary->Array_Length([ref] this->mParticleMap);
L241:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint321;
L279:          bool mbool2 = mbool && mbool1;
L317:          if (!mbool2) goto L859;
L331:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L358:          ExecutionFlow.Push(L921);
L363:          KismetArrayLibrary->Array_Get([ref] this->mParticleMap, Temp_int_Array_Index_Variable, [ref] mParticleMap);
L422:          ParticleMap local_ParticleMapInstance = mParticleMap;
L449:          int32 mint322 = KismetArrayLibrary->Array_Length([ref] local_outputClasses);
L508:          bool mbool3 = mint322 > 0;
L542:          if (!mbool3) goto ExecutionFlow.Pop();
L552:          KismetArrayLibrary->Array_Get([ref] local_outputClasses, 0, [ref] mTSubclassOfFGItemDescriptor1);
L607:          TSubclassOf<Object> mTSubclassOfObject = KismetSystemLibrary->Conv_SoftClassReferenceToClass([ref] local_ParticleMapInstance.ResourceNode_16_2100B5C34EE8DF7958D78A974512F3C3);
L667:          TSubclassOf<FGResourceDescriptor> mTSubclassOfFGResourceDescriptor = ClassCast<Class /Script/FactoryGame.FGResourceDescriptor>(mTSubclassOfObject);
L703:          bool mbool4 = mTSubclassOfFGResourceDescriptor;
L732:          bool mbool5 = mTSubclassOfFGResourceDescriptor == mTSubclassOfFGItemDescriptor1;
L770:          if (!mbool5) goto ExecutionFlow.Pop();
L780:          ParticleSystem* local_FirstParticle = local_ParticleMapInstance.ParticleSystem1_9_F0CF81514E1E1C5007AC99B0C59C63CD;
L808:          ParticleSystem* local_SecondParticle = local_ParticleMapInstance.ParticleSystem2_12_9CB1B6054B443457EF842EA10A375BF2;
L836:          bool local_FoundParticles = true;
L847:          Temp_bool_True_if_break_was_hit_Variable = true;
L858:          goto ExecutionFlow.Pop();
L859:          ParticleSystem* FirstParticle = local_FirstParticle;
L878:          ParticleSystem* SecondParticle = local_SecondParticle;
L897:          bool foundParticle = local_FoundParticles;
L916:          // <End Inlined EventGraph Function>;
L921:          int32 mint323 = Temp_int_Loop_Counter_Variable + 1;
L963:          Temp_int_Loop_Counter_Variable = mint323;
L990:          goto L153;
============ END FUNCTION GetMiningParticles ==============





============ BEGIN FUNCTION GetExtractedResource ==============
L0:            TScriptInterface<FGExtractableResourceInterface> mTScriptInterfaceFGExtractableResourceInterface = this->GetExtractableResource();
L28:           TSubclassOf<FGResourceDescriptor> mTSubclassOfFGResourceDescriptor = GetInterfaceUObject(mTScriptInterfaceFGExtractableResourceInterface)->GetResourceClass();
L75:           TSubclassOf<FGItemDescriptor> Resource = mTSubclassOfFGResourceDescriptor;
============ END FUNCTION GetExtractedResource ==============





============ BEGIN FUNCTION SetDisplayText ==============
============ END FUNCTION SetDisplayText ==============





============ BEGIN FUNCTION GainedSignificance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: GainedSignificance;
L0:            // Implementation: Function ExecuteUbergraph_Build_MinerMk2, from label L2030;
============ END FUNCTION GainedSignificance ==============





============ BEGIN FUNCTION LostSignificance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: LostSignificance;
L0:            // Implementation: Function ExecuteUbergraph_Build_MinerMk2, from label L1918;
============ END FUNCTION LostSignificance ==============





============ BEGIN FUNCTION StartProductionLoopEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StartProductionLoopEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_MinerMk2, from label L1270;
============ END FUNCTION StartProductionLoopEffects ==============





============ BEGIN FUNCTION StopProductionLoopEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StopProductionLoopEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_MinerMk2, from label L936;
============ END FUNCTION StopProductionLoopEffects ==============





============ BEGIN FUNCTION ReceiveDestroyed ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ReceiveDestroyed;
L0:            // Implementation: Function ExecuteUbergraph_Build_MinerMk2, from label L1294;
============ END FUNCTION ReceiveDestroyed ==============





============ BEGIN FUNCTION OnIsProducingChanged ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnIsProducingChanged;
L18:           // Implementation: Function ExecuteUbergraph_Build_MinerMk2, from label L1810;
============ END FUNCTION OnIsProducingChanged ==============





============ BEGIN FUNCTION ExecuteUbergraph_Build_MinerMk2 ==============
L5:            goto ComputedJump(EntryPoint);
L15:           bool mbool = this->IsProducing();
L39:           if (!mbool) goto ExecutionFlow.Pop();
L49:           AkComponent* mAkComponent = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Play_Miner_MK2_Startup_Dirt.Play_Miner_MK2_Startup_Dirt), this->MainMesh, "Root", true);
L123:          bool mbool1 = KismetSystemLibrary->IsValid(this->mDrillingVfx01);
L174:          if (!mbool1) goto L189;
L188:          goto ExecutionFlow.Pop();
L189:          this->GetMiningParticles([ref] mParticleSystem, [ref] mParticleSystem1, [ref] mbool2);
L230:          Vector mVector = this->MainMesh->GetSocketLocation("drillVfxSocket");
L297:          ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAtLocation(this, mParticleSystem, mVector, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), true, 0);
L387:          this->mDrillingVfx01 = mParticleSystemComponent;
L406:          ParticleSystemComponent* mParticleSystemComponent1 = GameplayStatics->SpawnEmitterAttached(ObjectConst(ParticleSystem /Game/FactoryGame/Buildable/Factory/MinerMk2/Particle/Ventilationsmoke.Ventilationsmoke), this->MainMesh, "ventVfxSocket_01", Vector(0, 0, 0), Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), 0, true, 0);
L523:          this->mVentVfx01 = mParticleSystemComponent1;
L542:          ParticleSystemComponent* mParticleSystemComponent2 = GameplayStatics->SpawnEmitterAttached(ObjectConst(ParticleSystem /Game/FactoryGame/Buildable/Factory/MinerMk2/Particle/Ventilationsmoke.Ventilationsmoke), this->MainMesh, "ventVfxSocket_02", Vector(0, 0, 0), Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), 0, true, 0);
L659:          this->mVentVfx02 = mParticleSystemComponent2;
L678:          goto ExecutionFlow.Pop();
L679:          bool mbool3 = this->IsStartupComplete();
L699:          if (!mbool3) goto L866;
L713:          AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Resume_Miner_MK2_Engine.Resume_Miner_MK2_Engine), this->MainMesh, "AudioSocket_Drill_StartStop", true);
L787:          AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Resume_Miner_MK2_Dirt.Resume_Miner_MK2_Dirt), this->MainMesh, "Root", true);
L861:          goto L123;
L866:          bool mbool4 = KismetSystemLibrary->IsValid(this->mIsPlayingDirtSFX);
L917:          if (!mbool4) goto L15;
L931:          goto L123;
L936:          this->StopProductionLoopEffects(mbool5);
L955:          ExecutionFlow.Push(L1109);
L960:          AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Stop_Miner_MK2_Engine.Stop_Miner_MK2_Engine), this->MainMesh, "AudioSocket_Drill_StartStop", true);
L1034:         AkComponent* mAkComponent4 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Stop_Miner_MK2_Dirt.Stop_Miner_MK2_Dirt), this->MainMesh, "Root", true);
L1108:         goto ExecutionFlow.Pop();
L1109:         bool mbool6 = KismetSystemLibrary->IsValid(this->mDrillingVfx01);
L1160:         if (!mbool6) goto ExecutionFlow.Pop();
L1170:         this->mDrillingVfx01->K2_DestroyComponent(this);
L1203:         this->mVentVfx01->K2_DestroyComponent(this);
L1236:         this->mVentVfx02->K2_DestroyComponent(this);
L1269:         goto ExecutionFlow.Pop();
L1270:         this->StartProductionLoopEffects(mbool7);
L1289:         goto L679;
L1294:         this->ReceiveDestroyed();
L1304:         bool mbool8 = KismetSystemLibrary->IsValid(this->mDrillingVfx01);
L1355:         if (!mbool8) goto ExecutionFlow.Pop();
L1365:         this->mDrillingVfx01->K2_DestroyComponent(this);
L1398:         goto ExecutionFlow.Pop();
L1399:         this->TryStartProductionLoopEffects(false);
L1410:         goto ExecutionFlow.Pop();
L1411:         this->TryStopProductionLoopEffects(false);
L1422:         goto ExecutionFlow.Pop();
L1423:         bool mbool9 = this->IsStartupComplete();
L1443:         if (!mbool9) goto L1458;
L1457:         goto ExecutionFlow.Pop();
L1458:         if (!mbool10) goto L1650;
L1472:         if (!this->mCanPlayAfterStartUpStopped) goto ExecutionFlow.Pop();
L1482:         AkComponent* mAkComponent5 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Resume_Miner_MK2_Engine.Resume_Miner_MK2_Engine), this->MainMesh, "AudioSocket_Drill_StartStop", true);
L1556:         AkComponent* mAkComponent6 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Resume_Miner_MK2_Dirt.Resume_Miner_MK2_Dirt), this->MainMesh, "Root", true);
L1630:         this->mIsPlayingDirtSFX = mAkComponent6;
L1649:         goto ExecutionFlow.Pop();
L1650:         AkComponent* mAkComponent7 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Stop_Miner_MK2_Engine.Stop_Miner_MK2_Engine), this->MainMesh, "AudioSocket_Drill_StartStop", true);
L1724:         AkComponent* mAkComponent8 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/MinerMk2/Audio/Stop_Miner_MK2_Dirt.Stop_Miner_MK2_Dirt), this->MainMesh, "Root", true);
L1798:         this->mCanPlayAfterStartUpStopped = true;
L1809:         goto ExecutionFlow.Pop();
L1810:         this->OnIsProducingChanged(mbool10);
L1829:         bool mbool11 = this->GetIsSignificant();
L1849:         if (!mbool11) goto ExecutionFlow.Pop();
L1859:         goto L1423;
L1864:         bool mbool12 = this->IsProducing();
L1888:         if (!mbool12) goto ExecutionFlow.Pop();
L1898:         goto L1411;
L1903:         this->LostSignificance();
L1913:         goto L1864;
L1918:         goto L1903;
L1923:         this->GainedSignificance();
L1933:         bool mbool13 = this->IsStartupComplete();
L1953:         bool mbool14 = this->IsProducing();
L1977:         bool mbool15 = mbool14 && mbool13;
L2015:         if (!mbool15) goto ExecutionFlow.Pop();
L2025:         goto L1399;
L2030:         goto L1923;
============ END FUNCTION ExecuteUbergraph_Build_MinerMk2 ==============
