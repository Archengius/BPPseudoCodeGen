########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/Factory/SpaceElevator/Build_SpaceElevator.Build_SpaceElevator_C
########################





============ BEGIN FUNCTION GetActorCompassViewDistance ==============
L0:            uint8 ReturnValue = 4;
============ END FUNCTION GetActorCompassViewDistance ==============





============ BEGIN FUNCTION SetActorCompassViewDistance ==============
L0:            uint8 ReturnValue = 0;
============ END FUNCTION SetActorCompassViewDistance ==============





============ BEGIN FUNCTION SetActorRepresentationText ==============
L0:            this->FlushNetDormancy();
L10:           this->mMapText = newText;
L37:           FText ReturnValue = this->mMapText;
============ END FUNCTION SetActorRepresentationText ==============





============ BEGIN FUNCTION UpdateRepresentation ==============
L0:            bool ReturnValue = false;
============ END FUNCTION UpdateRepresentation ==============





============ BEGIN FUNCTION GetActorRepresentationColor ==============
L0:            HUDHelpers->GetFactoryGameDarkGray(this, [ref] mSlateColor, [ref] mLinearColor);
L55:           LinearColor ReturnValue = mLinearColor;
============ END FUNCTION GetActorRepresentationColor ==============





============ BEGIN FUNCTION GetActorRepresentationText ==============
L0:            FText ReturnValue = this->mMapText;
============ END FUNCTION GetActorRepresentationText ==============





============ BEGIN FUNCTION GetActorRepresentationTexture ==============
L0:            Texture2D* ReturnValue = MapCompass_Icon_Spelevator;
============ END FUNCTION GetActorRepresentationTexture ==============





============ BEGIN FUNCTION GetActorRepresentationType ==============
L0:            uint8 ReturnValue = 8;
============ END FUNCTION GetActorRepresentationType ==============





============ BEGIN FUNCTION GetActorShouldShowInCompass ==============
L0:            bool ReturnValue = true;
============ END FUNCTION GetActorShouldShowInCompass ==============





============ BEGIN FUNCTION AddAsRepresentation ==============
L0:            bool mbool = this->HasAuthority();
L20:           if (!mbool) goto L145;
L34:           FGActorRepresentationManager* mFGActorRepresentationManager = FGActorRepresentationManager->Get(this);
L77:           bool mbool1 = mFGActorRepresentationManager->CreateAndAddNewRepresentation(this, false);
L121:          bool ReturnValue = mbool1;
L140:          goto L156;
L145:          ReturnValue = false;
============ END FUNCTION AddAsRepresentation ==============





============ BEGIN FUNCTION GetActorFogOfWarRevealRadius ==============
L0:            float ReturnValue = 80000;
============ END FUNCTION GetActorFogOfWarRevealRadius ==============





============ BEGIN FUNCTION GetActorFogOfWarRevealType ==============
L0:            uint8 ReturnValue = 1;
============ END FUNCTION GetActorFogOfWarRevealType ==============





============ BEGIN FUNCTION GetActorShouldShowOnMap ==============
L0:            bool ReturnValue = true;
============ END FUNCTION GetActorShouldShowOnMap ==============





============ BEGIN FUNCTION GetRealActorLocation ==============
L0:            Vector mVector = this->K2_GetActorLocation();
L28:           Vector ReturnValue = mVector;
============ END FUNCTION GetRealActorLocation ==============





============ BEGIN FUNCTION GetRealActorRotation ==============
L0:            Rotator mRotator = this->K2_GetActorRotation();
L28:           Rotator ReturnValue = mRotator;
============ END FUNCTION GetRealActorRotation ==============





============ BEGIN FUNCTION IsActorStatic ==============
L0:            bool ReturnValue = true;
============ END FUNCTION IsActorStatic ==============





============ BEGIN FUNCTION RemoveAsRepresentation ==============
L0:            bool mbool = this->HasAuthority();
L20:           if (!mbool) goto L144;
L34:           FGActorRepresentationManager* mFGActorRepresentationManager = FGActorRepresentationManager->Get(this);
L77:           bool mbool1 = mFGActorRepresentationManager->RemoveRepresentationOfActor(this);
L120:          bool ReturnValue = mbool1;
L139:          goto L155;
L144:          ReturnValue = false;
============ END FUNCTION RemoveAsRepresentation ==============





============ BEGIN FUNCTION SetActorRepresentationColor ==============
L0:            PERSISTENT_FRAME(StructProperty /Game/FactoryGame/Buildable/Factory/SpaceElevator/Build_SpaceElevator.Build_SpaceElevator_C:ExecuteUbergraph_Build_SpaceElevator.K2Node_Event_newColor) = NewColor;
L18:           this->ExecuteUbergraph_Build_SpaceElevator(258);
============ END FUNCTION SetActorRepresentationColor ==============





============ BEGIN FUNCTION CamShake_01 ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(263);
============ END FUNCTION CamShake_01 ==============





============ BEGIN FUNCTION CamShake_02 ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(839);
============ END FUNCTION CamShake_02 ==============





============ BEGIN FUNCTION CamShake_03 ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(844);
============ END FUNCTION CamShake_03 ==============





============ BEGIN FUNCTION CamShake_04 ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(849);
============ END FUNCTION CamShake_04 ==============





============ BEGIN FUNCTION UpperlineVisible ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(854);
============ END FUNCTION UpperlineVisible ==============





============ BEGIN FUNCTION Event_StartSound ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(893);
============ END FUNCTION Event_StartSound ==============





============ BEGIN FUNCTION ReceiveBeginPlay ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(1001);
============ END FUNCTION ReceiveBeginPlay ==============





============ BEGIN FUNCTION OnPhaseChanged ==============
L0:            PERSISTENT_FRAME(ByteProperty /Game/FactoryGame/Buildable/Factory/SpaceElevator/Build_SpaceElevator.Build_SpaceElevator_C:ExecuteUbergraph_Build_SpaceElevator.K2Node_CustomEvent_gamePhase) = gamePhase;
L18:           this->ExecuteUbergraph_Build_SpaceElevator(1148);
============ END FUNCTION OnPhaseChanged ==============





============ BEGIN FUNCTION PlayUpgradeSequence ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(1167);
============ END FUNCTION PlayUpgradeSequence ==============





============ BEGIN FUNCTION Event_SE_SendOff ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(1498);
============ END FUNCTION Event_SE_SendOff ==============





============ BEGIN FUNCTION ReceiveDestroyed ==============
L0:            this->ExecuteUbergraph_Build_SpaceElevator(1503);
============ END FUNCTION ReceiveDestroyed ==============





============ BEGIN FUNCTION ReceiveEndPlay ==============
L0:            PERSISTENT_FRAME(ByteProperty /Game/FactoryGame/Buildable/Factory/SpaceElevator/Build_SpaceElevator.Build_SpaceElevator_C:ExecuteUbergraph_Build_SpaceElevator.K2Node_Event_EndPlayReason) = EndPlayReason;
L18:           this->ExecuteUbergraph_Build_SpaceElevator(1724);
============ END FUNCTION ReceiveEndPlay ==============





============ BEGIN FUNCTION ExecuteUbergraph_Build_SpaceElevator ==============
L10:           bool mbool = this->HasAuthority();
L30:           if (!mbool) goto L1748;
L44:           FGGamePhaseManager* mFGGamePhaseManager = FGGamePhaseManager->Get(this);
L87:           mFScriptDelegate->BindUFunction(this, OnPhaseChanged);
L110:          mFGGamePhaseManager->mOnGamePhaseChanged.AddUnique(mFScriptDelegate);
L151:          this->SM_SpaceElevator_MidPart_01->SetVisibility(true, false);
L185:          this->SpaceElevator_Elevator_LOD0_static->SetVisibility(true, false);
L219:          this->SM_SpaceElevator_MidPart_02->SetVisibility(true, false);
L253:          <End of Inlined Event Graph Function>;
L258:          <End of Inlined Event Graph Function>;
L263:          Vector mVector = this->SpaceElevator_skl->GetSocketLocation("Root");
L330:          GameplayStatics->PlayWorldCameraShake(this, SpelevatorImpact_01, mVector, 0, 10000, 1, 2, false);
L402:          <End of Inlined Event Graph Function>;
L407:          mVector = this->SpaceElevator_skl->GetSocketLocation("Root");
L474:          GameplayStatics->PlayWorldCameraShake(this, SpelevatorImpact_02, mVector, 0, 8000, 1, 2, false);
L546:          <End of Inlined Event Graph Function>;
L551:          Vector mVector1 = this->SpaceElevator_skl->GetSocketLocation("Root");
L618:          GameplayStatics->PlayWorldCameraShake(this, SpelevatorImpact_04, mVector1, 0, 8000, 1, 2.5, false);
L690:          <End of Inlined Event Graph Function>;
L695:          mVector1 = this->SpaceElevator_skl->GetSocketLocation("Root");
L762:          GameplayStatics->PlayWorldCameraShake(this, SpelevatorImpact_03, mVector1, 0, 8000, 1, 3, false);
L834:          <End of Inlined Event Graph Function>;
L839:          goto L407;
L844:          goto L695;
L849:          goto L551;
L854:          this->UpperLine->SetVisibility(true, false);
L888:          <End of Inlined Event Graph Function>;
L893:          Actor* mActor = this->SpaceElevator_skl->GetOwner();
L935:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(Play_SpaceElevator_StartUp_TestVersion, mActor, true);
L996:          <End of Inlined Event Graph Function>;
L1001:         this->ReceiveBeginPlay();
L1011:         bool mbool1 = this->AddAsRepresentation();
L1035:         goto L10;
L1040:         mActor = this->SpaceElevator_skl->GetOwner();
L1082:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(Play_SpaceElevator_SendOff, mActor, true);
L1143:         <End of Inlined Event Graph Function>;
L1148:         this->PlayUpgradeSequence();
L1162:         <End of Inlined Event Graph Function>;
L1167:         LevelSequencePlayer* mLevelSequencePlayer = LevelSequencePlayer->CreateLevelSequencePlayer(this, SpaceElevatorSendOff, ScriptStruct /Script/MovieScene.MovieSceneSequencePlaybackSettings(bAutoPlay = false, LoopCount = ScriptStruct /Script/MovieScene.MovieSceneSequenceLoopCount(Value = 0), PlayRate = 1, StartTime = 0, bRandomStartTime = false, bRestoreState = false, bDisableMovementInput = false, bDisableLookAtInput = false, bHidePlayer = false, bHideHud = false, bDisableCameraCuts = false, bPauseAtEnd = false), [ref] mLevelSequenceActor);
L1280:         this->mSendOffSequence = mLevelSequenceActor;
L1299:         const TArray<Actor*> mconst TArray<Actor> = [this];
L1311:         this->mSendOffSequence->SetBinding(ScriptStruct /Script/MovieScene.MovieSceneObjectBindingID(SequenceID = 0, Space = 1, Guid = ScriptStruct /Script/CoreUObject.Guid(A = 1996000994, B = 1219085466, C = -68230497, D = -1298024804)), [ref] mconst TArray<Actor>, false);
L1408:         TArray<Actor*> mTArray<Actor> = [this];
L1420:         this->mSendOffSequence->SetEventReceivers(mTArray<Actor>);
L1461:         mLevelSequencePlayer->Play();
L1493:         <End of Inlined Event Graph Function>;
L1498:         goto L1040;
L1503:         this->ReceiveDestroyed();
L1513:         Actor* mActor1 = this->SpaceElevator_skl->GetOwner();
L1555:         AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEvent(Stop_SpaceElevator_StartUp_TestVersion, mActor1, true);
L1616:         mActor1 = this->SpaceElevator_skl->GetOwner();
L1658:         AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEvent(Stop_SpaceElevator_SendOff, mActor1, true);
L1719:         <End of Inlined Event Graph Function>;
L1724:         bool mbool2 = this->RemoveAsRepresentation();
============ END FUNCTION ExecuteUbergraph_Build_SpaceElevator ==============
