########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/Factory/TradingPost/Widget_TradingPostSchematicCostInfo.Widget_TradingPostSchematicCostInfo_C
########################





============ BEGIN FUNCTION UpdateSchematicCosts ==============
L0:            ExecutionFlow.Push(L2180);
L5:            bool mbool = KismetSystemLibrary->IsValidClass(mSchematic);
L56:           if (!mbool) goto ExecutionFlow.Pop();
L66:           this->mCostGrid->ClearChildren();
L102:          int32 Temp_int_Loop_Counter_Variable = 0;
L125:          int32 Temp_int_Array_Index_Variable = 0;
L148:          PlayerController* mPlayerController = this->GetOwningPlayer();
L172:          FGSchematicManager* mFGSchematicManager = FGSchematicManager->Get(mPlayerController);
L223:          TArray<ItemAmount> mTArray<ItemAmount> = mFGSchematicManager->GetRemainingCostFor(mSchematic);
L282:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArray<ItemAmount>);
L341:          bool mbool1 = Less_IntInt(Temp_int_Loop_Counter_Variable, mint32);
L379:          if (!mbool1) goto ExecutionFlow.Pop();
L389:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L416:          ExecutionFlow.Push(L2106);
L421:          mPlayerController = this->GetOwningPlayer();
L445:          mFGSchematicManager = FGSchematicManager->Get(mPlayerController);
L496:          mTArray<ItemAmount> = mFGSchematicManager->GetRemainingCostFor(mSchematic);
L555:          KismetArrayLibrary->Array_Get([ref] mTArray<ItemAmount>, Temp_int_Array_Index_Variable, [ref] mItemAmount);
L614:          bool mbool2 = KismetSystemLibrary->IsValidClass(mItemAmount.ItemClass);
L674:          if (!mbool2) goto ExecutionFlow.Pop();
L684:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L708:          Widget_CostSlotWrapper* mWidget_CostSlotWrapper = WidgetBlueprintLibrary->Create(this, Widget_CostSlotWrapper, mPlayerController1);
L769:          mWidget_CostSlotWrapper->mCostSlotContainer->SetRenderOpacity(0);
L828:          PlayerController* mPlayerController2 = this->GetOwningPlayer();
L852:          FGSchematicManager* mFGSchematicManager1 = FGSchematicManager->Get(mPlayerController2);
L903:          BP_SchematicHelper->IsSchematicLockedInAnyWay(mPlayerController2, mSchematic, this, [ref] mbool3);
L967:          bool mbool4 = mFGSchematicManager1->IsSchematicPurchased(mSchematic);
L1018:         bool mbool5 = BooleanOR(mbool3, mbool4);
L1056:         int32 Temp_int_Variable = 0;
L1079:         bool Temp_bool_Variable = mbool5;
L1098:         mPlayerController = this->GetOwningPlayer();
L1122:         mFGSchematicManager = FGSchematicManager->Get(mPlayerController);
L1173:         Pawn* mPawn = this->GetOwningPlayerPawn();
L1193:         mTArray<ItemAmount> = mFGSchematicManager->GetRemainingCostFor(mSchematic);
L1252:         KismetArrayLibrary->Array_Get([ref] mTArray<ItemAmount>, Temp_int_Array_Index_Variable, [ref] mItemAmount);
L1311:         mItemAmount1.ItemClass = mItemAmount.ItemClass;
L1348:         mItemAmount1.amount = mItemAmount.amount;
L1393:         HUDHelpers->GetNumItemsFromPlayerInventory(mPawn, mItemAmount.ItemClass, this, [ref] mint321);
L1466:         mWidget_CostSlotWrapper->Setup CostIcon(nullptr, mItemAmount1, nullptr, 0, switch (Temp_bool_Variable) {
case false -> mint321;
case true -> Temp_int_Variable;
default -> mint322;
}, false, false, false);
L1574:         mPlayerController2 = this->GetOwningPlayer();
L1598:         mFGSchematicManager1 = FGSchematicManager->Get(mPlayerController2);
L1649:         BP_SchematicHelper->IsSchematicLockedInAnyWay(mPlayerController2, mSchematic, this, [ref] mbool3);
L1713:         mbool4 = mFGSchematicManager1->IsSchematicPurchased(mSchematic);
L1764:         mbool5 = BooleanOR(mbool3, mbool4);
L1802:         float Temp_float_Variable = 1;
L1825:         float Temp_float_Variable1 = 0.5;
L1848:         bool Temp_bool_Variable1 = mbool5;
L1867:         this->mCostGrid->SetRenderOpacity(switch (Temp_bool_Variable1) {
case false -> Temp_float_Variable;
case true -> Temp_float_Variable1;
default -> mfloat;
});
L1952:         WrapBoxSlot* mWrapBoxSlot = this->mCostGrid->AddChildToWrapBox(mWidget_CostSlotWrapper);
L2003:         mWrapBoxSlot->SetHorizontalAlignment(1);
L2037:         int32 mint323 = KismetArrayLibrary->Array_Add([ref] this->AllCostSlots, [ref] Temp_object_Variable);
L2105:         goto ExecutionFlow.Pop();
L2106:         int32 mint324 = Add_IntInt(Temp_int_Loop_Counter_Variable, 1);
L2148:         Temp_int_Loop_Counter_Variable = mint324;
L2175:         goto L148;
============ END FUNCTION UpdateSchematicCosts ==============
