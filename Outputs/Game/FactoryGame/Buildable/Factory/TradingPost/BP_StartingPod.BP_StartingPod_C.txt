########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C
########################





============ BEGIN FUNCTION GatherDependencies ==============
L0:            TArray<Object*> out_dependentObjects = ObjectProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:GatherDependencies.out_dependentObjects.out_dependentObjects[] {[]};
============ END FUNCTION GatherDependencies ==============





============ BEGIN FUNCTION NeedTransform ==============
L0:            bool ReturnValue = true;
============ END FUNCTION NeedTransform ==============





============ BEGIN FUNCTION ShouldSave ==============
L0:            bool ReturnValue = true;
============ END FUNCTION ShouldSave ==============





============ BEGIN FUNCTION GetActorCompassViewDistance ==============
L0:            uint8 ReturnValue = 4;
============ END FUNCTION GetActorCompassViewDistance ==============





============ BEGIN FUNCTION SetActorCompassViewDistance ==============
L0:            uint8 ReturnValue = 0;
============ END FUNCTION SetActorCompassViewDistance ==============





============ BEGIN FUNCTION SetActorRepresentationText ==============
L0:            this->FlushNetDormancy();
L10:           this->mMapText = newText;
L37:           FText ReturnValue = this->mMapText;
============ END FUNCTION SetActorRepresentationText ==============





============ BEGIN FUNCTION UpdateRepresentation ==============
L0:            bool ReturnValue = false;
============ END FUNCTION UpdateRepresentation ==============





============ BEGIN FUNCTION GetActorFogOfWarRevealRadius ==============
L0:            float ReturnValue = 0;
============ END FUNCTION GetActorFogOfWarRevealRadius ==============





============ BEGIN FUNCTION GetActorFogOfWarRevealType ==============
L0:            uint8 ReturnValue = 0;
============ END FUNCTION GetActorFogOfWarRevealType ==============





============ BEGIN FUNCTION GetActorRepresentationColor ==============
L0:            HUDHelpers->GetFactoryGameDarkGray(this, [ref] mSlateColor, [ref] mLinearColor);
L55:           LinearColor ReturnValue = mLinearColor;
============ END FUNCTION GetActorRepresentationColor ==============





============ BEGIN FUNCTION GetActorRepresentationText ==============
L0:            FText ReturnValue = this->mMapText;
============ END FUNCTION GetActorRepresentationText ==============





============ BEGIN FUNCTION GetActorRepresentationTexture ==============
L0:            Texture2D* ReturnValue = MapCompass_Icon_pod;
============ END FUNCTION GetActorRepresentationTexture ==============





============ BEGIN FUNCTION GetActorRepresentationType ==============
L0:            uint8 ReturnValue = 9;
============ END FUNCTION GetActorRepresentationType ==============





============ BEGIN FUNCTION GetActorShouldShowInCompass ==============
L0:            bool ReturnValue = true;
============ END FUNCTION GetActorShouldShowInCompass ==============





============ BEGIN FUNCTION AddAsRepresentation ==============
L0:            bool mbool = this->HasAuthority();
L20:           if (!mbool) goto L145;
L34:           FGActorRepresentationManager* mFGActorRepresentationManager = FGActorRepresentationManager->Get(this);
L77:           bool mbool1 = mFGActorRepresentationManager->CreateAndAddNewRepresentation(this, false);
L121:          bool ReturnValue = mbool1;
L140:          goto L156;
L145:          ReturnValue = false;
============ END FUNCTION AddAsRepresentation ==============





============ BEGIN FUNCTION GetActorShouldShowOnMap ==============
L0:            bool ReturnValue = true;
============ END FUNCTION GetActorShouldShowOnMap ==============





============ BEGIN FUNCTION GetRealActorLocation ==============
L0:            Vector mVector = this->K2_GetActorLocation();
L28:           Vector ReturnValue = mVector;
============ END FUNCTION GetRealActorLocation ==============





============ BEGIN FUNCTION GetRealActorRotation ==============
L0:            Rotator ReturnValue = Rotator::FromPitchYawRoll(0, 0, 0);
============ END FUNCTION GetRealActorRotation ==============





============ BEGIN FUNCTION IsActorStatic ==============
L0:            bool ReturnValue = true;
============ END FUNCTION IsActorStatic ==============





============ BEGIN FUNCTION RemoveAsRepresentation ==============
L0:            bool mbool = this->HasAuthority();
L20:           if (!mbool) goto L144;
L34:           FGActorRepresentationManager* mFGActorRepresentationManager = FGActorRepresentationManager->Get(this);
L77:           bool mbool1 = mFGActorRepresentationManager->RemoveRepresentationOfActor(this);
L120:          bool ReturnValue = mbool1;
L139:          goto L155;
L144:          ReturnValue = false;
============ END FUNCTION RemoveAsRepresentation ==============





============ BEGIN FUNCTION OnLoaded_8586F6D040F0FFE03962849F398DB59A ==============
L0:            PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_CustomEvent_Loaded) = Loaded;
L18:           this->ExecuteUbergraph_BP_StartingPod(3784);
============ END FUNCTION OnLoaded_8586F6D040F0FFE03962849F398DB59A ==============





============ BEGIN FUNCTION PostLoadGame ==============
L0:            PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_saveVersion3) = SaveVersion;
L18:           PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_gameVersion3) = GameVersion;
L36:           this->ExecuteUbergraph_BP_StartingPod(1313);
============ END FUNCTION PostLoadGame ==============





============ BEGIN FUNCTION PostSaveGame ==============
L0:            PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_saveVersion2) = SaveVersion;
L18:           PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_gameVersion2) = GameVersion;
L36:           this->ExecuteUbergraph_BP_StartingPod(1314);
============ END FUNCTION PostSaveGame ==============





============ BEGIN FUNCTION PreLoadGame ==============
L0:            PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_saveVersion1) = SaveVersion;
L18:           PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_gameVersion1) = GameVersion;
L36:           this->ExecuteUbergraph_BP_StartingPod(1315);
============ END FUNCTION PreLoadGame ==============





============ BEGIN FUNCTION PreSaveGame ==============
L0:            PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_saveVersion) = SaveVersion;
L18:           PERSISTENT_FRAME(IntProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_gameVersion) = GameVersion;
L36:           this->ExecuteUbergraph_BP_StartingPod(1316);
============ END FUNCTION PreSaveGame ==============





============ BEGIN FUNCTION SetActorRepresentationColor ==============
L0:            PERSISTENT_FRAME(StructProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_newColor) = NewColor;
L18:           this->ExecuteUbergraph_BP_StartingPod(1317);
============ END FUNCTION SetActorRepresentationColor ==============





============ BEGIN FUNCTION StartIsLookedAtForDismantle ==============
L0:            PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_byCharacter1) = byCharacter;
L18:           this->ExecuteUbergraph_BP_StartingPod(1318);
============ END FUNCTION StartIsLookedAtForDismantle ==============





============ BEGIN FUNCTION StopIsLookedAtForDismantle ==============
L0:            PERSISTENT_FRAME(ObjectProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_byCharacter) = byCharacter;
L18:           this->ExecuteUbergraph_BP_StartingPod(1362);
============ END FUNCTION StopIsLookedAtForDismantle ==============





============ BEGIN FUNCTION ReceiveTick ==============
L0:            PERSISTENT_FRAME(FloatProperty /Game/FactoryGame/Buildable/Factory/TradingPost/BP_StartingPod.BP_StartingPod_C:ExecuteUbergraph_BP_StartingPod.K2Node_Event_DeltaSeconds) = DeltaSeconds;
L18:           this->ExecuteUbergraph_BP_StartingPod(1404);
============ END FUNCTION ReceiveTick ==============





============ BEGIN FUNCTION SetupPodForOwner ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(1622);
============ END FUNCTION SetupPodForOwner ==============





============ BEGIN FUNCTION SetupPodForObserver ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(1898);
============ END FUNCTION SetupPodForObserver ==============





============ BEGIN FUNCTION EndCinematic ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(1948);
============ END FUNCTION EndCinematic ==============





============ BEGIN FUNCTION StartMovie ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3346);
============ END FUNCTION StartMovie ==============





============ BEGIN FUNCTION AK_StopDucking ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3351);
============ END FUNCTION AK_StopDucking ==============





============ BEGIN FUNCTION AK_HalveDucking ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3407);
============ END FUNCTION AK_HalveDucking ==============





============ BEGIN FUNCTION ReceiveDestroyed ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3576);
============ END FUNCTION ReceiveDestroyed ==============





============ BEGIN FUNCTION StartCinematic ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3581);
============ END FUNCTION StartCinematic ==============





============ BEGIN FUNCTION OnPlayerSkipIntroSequence ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3620);
============ END FUNCTION OnPlayerSkipIntroSequence ==============





============ BEGIN FUNCTION AllowSkipIntro ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3625);
============ END FUNCTION AllowSkipIntro ==============





============ BEGIN FUNCTION BlockSkipIntro ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3702);
============ END FUNCTION BlockSkipIntro ==============





============ BEGIN FUNCTION ReceiveBeginPlay ==============
L0:            this->ExecuteUbergraph_BP_StartingPod(3779);
============ END FUNCTION ReceiveBeginPlay ==============





============ BEGIN FUNCTION ExecuteUbergraph_BP_StartingPod ==============
L5:            goto ComputedJump(EntryPoint);
L15:           this->mDropPodMesh->SetSkeletalMesh(nullptr, true);
L53:           bool mbool = this->RemoveAsRepresentation();
L77:           goto ExecutionFlow.Pop();
L78:           if (!Temp_bool_IsClosed_Variable) goto L93;
L92:           goto ExecutionFlow.Pop();
L93:           bool Temp_bool_IsClosed_Variable = true;
L104:          this->SetupPodForObserver();
L118:          goto ExecutionFlow.Pop();
L119:          Temp_bool_IsClosed_Variable = true;
L130:          goto ExecutionFlow.Pop();
L131:          if (!Temp_bool_IsClosed_Variable1) goto L146;
L145:          goto ExecutionFlow.Pop();
L146:          bool Temp_bool_IsClosed_Variable1 = true;
L157:          this->SetupPodForOwner();
L171:          goto ExecutionFlow.Pop();
L172:          bool Temp_bool_Has_Been_Initd_Variable = true;
L183:          if (!false) goto ExecutionFlow.Pop();
L185:          goto L119;
L190:          if (!Temp_bool_Has_Been_Initd_Variable) goto L172;
L204:          goto ExecutionFlow.Pop();
L205:          Temp_bool_IsClosed_Variable1 = true;
L216:          goto ExecutionFlow.Pop();
L217:          ExecutionFlow.Push(L78);
L222:          goto L190;
L227:          this->SetOwner(this->mCachedPC);
L250:          HUD* mHUD = this->mCachedPC->GetHUD();
L292:          FGHUD* mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L328:          bool mbool1 = mFGHUD;
L357:          if (!mbool1) goto ExecutionFlow.Pop();
L367:          mFGHUD->SetPartialPumpiMode(true);
L400:          LevelSequencePlayer* mLevelSequencePlayer = LevelSequencePlayer->CreateLevelSequencePlayer(this, DropPod_Intro_01, ScriptStruct /Script/MovieScene.MovieSceneSequencePlaybackSettings(bAutoPlay = false, LoopCount = ScriptStruct /Script/MovieScene.MovieSceneSequenceLoopCount(Value = 0), PlayRate = 1, StartTime = 0, bRandomStartTime = false, bRestoreState = false, bDisableMovementInput = false, bDisableLookAtInput = false, bHidePlayer = false, bHideHud = false, bDisableCameraCuts = false, bPauseAtEnd = false), [ref] mLevelSequenceActor);
L513:          this->mStartingSequence = mLevelSequenceActor;
L532:          FGCharacterPlayer* mFGCharacterPlayer = this->GetCachedPlayer();
L552:          const TArray<Actor*> mconst TArray<Actor> = [mFGCharacterPlayer];
L572:          this->mStartingSequence->SetBinding(ScriptStruct /Script/MovieScene.MovieSceneObjectBindingID(SequenceID = 0, Space = 1, Guid = ScriptStruct /Script/CoreUObject.Guid(A = -23011956, B = 1216166386, C = 1237473951, D = -1146401488)), [ref] mconst TArray<Actor>, false);
L669:          const TArray<Actor*> mconst TArray<Actor>1 = [this];
L681:          this->mStartingSequence->SetBinding(ScriptStruct /Script/MovieScene.MovieSceneObjectBindingID(SequenceID = 0, Space = 1, Guid = ScriptStruct /Script/CoreUObject.Guid(A = 1348593567, B = 1263814946, C = -1937319039, D = -1440609462)), [ref] mconst TArray<Actor>1, false);
L778:          FGCharacterPlayer* mFGCharacterPlayer1 = this->GetCachedPlayer();
L798:          TArray<Actor*> mTArray<Actor> = [this, mFGCharacterPlayer1];
L819:          this->mStartingSequence->SetEventReceivers(mTArray<Actor>);
L860:          mLevelSequencePlayer->Play();
L892:          this->EnableInput(this->mCachedPC);
L915:          bool mbool2 = this->mVideoPlayer->OpenSource(Satisfactory_Intro_01);
L966:          bool mbool3 = this->mVideoPlayer->Play();
L1008:         bool mbool4 = this->mVideoPlayer->SetLooping(false);
L1051:         AkGameplayStatics->SetGlobalRTPCValue("StartSequence_Duck_Ambient", 1, 0);
L1106:         Pawn* mPawn = this->mCachedPC->K2_GetPawn();
L1148:         AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(Pause_Music, mPawn, true);
L1209:         Pawn* mPawn1 = this->mCachedPC->K2_GetPawn();
L1251:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(Play_Cinematic_DropPod, mPawn1, true);
L1312:         goto ExecutionFlow.Pop();
L1313:         goto ExecutionFlow.Pop();
L1314:         goto ExecutionFlow.Pop();
L1315:         goto ExecutionFlow.Pop();
L1316:         goto ExecutionFlow.Pop();
L1317:         goto ExecutionFlow.Pop();
L1318:         FGBlueprintFunctionLibrary->ShowOutline(this->mDropPodMesh, 254);
L1361:         goto ExecutionFlow.Pop();
L1362:         FGBlueprintFunctionLibrary->HideOutline(this->mDropPodMesh);
L1403:         goto ExecutionFlow.Pop();
L1404:         this->ReceiveTick(mfloat);
L1423:         FGCharacterPlayer* mFGCharacterPlayer2 = this->GetCachedPlayer();
L1443:         bool mbool5 = KismetSystemLibrary->IsValid(mFGCharacterPlayer2);
L1494:         if (!mbool5) goto ExecutionFlow.Pop();
L1504:         mFGCharacterPlayer2 = this->GetCachedPlayer();
L1524:         bool mbool6 = mFGCharacterPlayer2->IsLocallyControlled();
L1570:         if (!mbool6) goto L217;
L1584:         ExecutionFlow.Push(L131);
L1589:         if (!Temp_bool_Has_Been_Initd_Variable1) goto L1604;
L1603:         goto ExecutionFlow.Pop();
L1604:         bool Temp_bool_Has_Been_Initd_Variable1 = true;
L1615:         if (!false) goto ExecutionFlow.Pop();
L1617:         goto L205;
L1622:         this->Plane->SetCollisionEnabled(0);
L1660:         FGCharacterPlayer* mFGCharacterPlayer3 = this->GetCachedPlayer();
L1680:         mFGCharacterPlayer3->CharacterMovement->GravityScale = 0;
L1747:         FGCharacterPlayer* mFGCharacterPlayer4 = this->GetCachedPlayer();
L1767:         Controller* mController = mFGCharacterPlayer4->GetController();
L1809:         FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mController);
L1845:         bool mbool7 = mFGPlayerController;
L1874:         this->mCachedPC = mFGPlayerController;
L1893:         goto L227;
L1898:         this->mDropPodMesh->SetCollisionProfileName("BlockAll");
L1947:         goto ExecutionFlow.Pop();
L1948:         FGCharacterPlayer* mFGCharacterPlayer5 = this->GetCachedPlayer();
L1968:         mFGCharacterPlayer5->CharacterMovement->GravityScale = 1;
L2035:         FGTutorialIntroManager* mFGTutorialIntroManager = FGTutorialIntroManager->Get(this);
L2078:         mFGTutorialIntroManager->IntroDone();
L2110:         BP_RemoteCallObject* mBP_RemoteCallObject = this->mCachedPC->GetRemoteCallObjectOfClass(BP_RemoteCallObject);
L2161:         mFGTutorialIntroManager = FGTutorialIntroManager->Get(this);
L2204:         mBP_RemoteCallObject->Server_UpdateTutorial(1, mFGTutorialIntroManager);
L2251:         this->mDropPodMesh->SetCollisionProfileName("BlockAll");
L2300:         this->mVideoPlayer->Close();
L2332:         this->DisableInput(this->mCachedPC);
L2355:         this->NewBuildingPing->SetActive(true, false);
L2393:         bool mbool8 = this->AddAsRepresentation();
L2417:         AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEvent(Resume_Music, this->mCachedPC, true);
L2478:         this->SetOwner(nullptr);
L2493:         goto ExecutionFlow.Pop();
L2494:         bool mbool9 = this->mVideoPlayer->SetLooping(false);
L2537:         KismetSystemLibrary->PrintString(this, "startmovie", true, true, ScriptStruct /Script/CoreUObject.LinearColor(R = 0, G = 0.6600000262260437, B = 1, A = 1), 2);
L2623:         goto ExecutionFlow.Pop();
L2624:         LevelSequencePlayer* mLevelSequencePlayer1 = this->mStartingSequence->GetSequencePlayer();
L2666:         QualifiedFrameTime mQualifiedFrameTime = mLevelSequencePlayer1->GetEndTime();
L2716:         BreakQualifiedFrameTime([ref] mQualifiedFrameTime, [ref] mFrameNumber, [ref] mFrameRate, [ref] mfloat1);
L2762:         float mfloat2 = Subtract_FloatFloat(mfloat1, 0);
L2804:         mFrameTime.FrameNumber = mFrameNumber;
L2840:         mFrameTime.SubFrame = mfloat2;
L2876:         mLevelSequencePlayer1->PlayToFrame(mFrameTime);
L2917:         this->EndCinematic();
L2931:         Pawn* mPawn2 = this->mCachedPC->K2_GetPawn();
L2973:         Char_Player* mChar_Player = Cast<BlueprintGeneratedClass /Game/FactoryGame/Character/Player/Char_Player.Char_Player_C>(mPawn2);
L3009:         bool mbool10 = mChar_Player;
L3038:         if (!mbool10) goto ExecutionFlow.Pop();
L3048:         mChar_Player->SkipIntro();
L3084:         AkGameplayStatics->SetGlobalRTPCValue("StartSequence_Duck_Ambient", 0, 1000);
L3139:         Pawn* mPawn3 = this->mCachedPC->K2_GetPawn();
L3181:         AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEvent(Stop_Cinematic_DropPod, mPawn3, true);
L3242:         goto ExecutionFlow.Pop();
L3243:         bool mbool11 = this->mVideoPlayer->Play();
L3285:         goto L2494;
L3290:         bool mbool12 = this->mVideoPlayer->OpenSource(Satisfactory_Intro_01);
L3341:         goto L3243;
L3346:         goto L3290;
L3351:         AkGameplayStatics->SetGlobalRTPCValue("StartSequence_Duck_Ambient", 0, 6000);
L3406:         goto ExecutionFlow.Pop();
L3407:         AkGameplayStatics->SetGlobalRTPCValue("StartSequence_Duck_Ambient", 0.30000001192092896, 1000);
L3462:         goto ExecutionFlow.Pop();
L3463:         mFScriptDelegate->BindUFunction(this, OnLoaded_8586F6D040F0FFE03962849F398DB59A);
L3486:         KismetSystemLibrary->LoadAsset(this, this->SkeletalMeshPtr, mFScriptDelegate, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = -1, UUID = -1030975351, ExecutionFunction = "ExecuteUbergraph_BP_StartingPod", CallbackTarget = this));
L3575:         goto ExecutionFlow.Pop();
L3576:         goto L15;
L3581:         this->Plane->SetCollisionEnabled(3);
L3619:         goto ExecutionFlow.Pop();
L3620:         goto L2624;
L3625:         FGTutorialIntroManager* mFGTutorialIntroManager1 = FGTutorialIntroManager->Get(this);
L3668:         mFGTutorialIntroManager1->SetCanSkipTutorialIntro(true);
L3701:         goto ExecutionFlow.Pop();
L3702:         FGTutorialIntroManager* mFGTutorialIntroManager2 = FGTutorialIntroManager->Get(this);
L3745:         mFGTutorialIntroManager2->SetCanSkipTutorialIntro(false);
L3778:         goto ExecutionFlow.Pop();
L3779:         goto L3463;
L3784:         Object* Temp_object_Variable = mObject;
L3803:         SkeletalMesh* mSkeletalMesh = Cast<Class /Script/Engine.SkeletalMesh>(Temp_object_Variable);
L3839:         bool mbool13 = mSkeletalMesh;
L3868:         if (!mbool13) goto ExecutionFlow.Pop();
L3878:         this->mDropPodMesh->SetSkeletalMesh(mSkeletalMesh, true);
L3924:         goto ExecutionFlow.Pop();
============ END FUNCTION ExecuteUbergraph_BP_StartingPod ==============
