########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Buildable/Factory/WaterPump/Build_WaterPump.Build_WaterPump_C
########################





============ BEGIN FUNCTION GetPlayRate ==============
L0:            AnimInstance* mAnimInstance = this->MainMesh->GetAnimInstance();
L42:           FGFAnimInstanceFactory* mFGFAnimInstanceFactory = Cast<Class /Script/FactoryGame.FGFAnimInstanceFactory>(mAnimInstance);
L78:           bool mbool = mFGFAnimInstanceFactory;
L107:          float PlayRate = mFGFAnimInstanceFactory->mProxy.mAnimPlayRate;
============ END FUNCTION GetPlayRate ==============





============ BEGIN FUNCTION mAudioTimer ==============
L0:            float mfloat = this->mAudioTimerCounter + this->mAudioTimerMS;
L46:           this->mAudioTimerCounter = mfloat;
L73:           bool mbool = this->mAudioTimerCounter >= 18.5;
L107:          if (!mbool) goto L163;
L121:          KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mAudioTimerReference);
============ END FUNCTION mAudioTimer ==============





============ BEGIN FUNCTION SetText ==============
============ END FUNCTION SetText ==============





============ BEGIN FUNCTION PlayPitchAndVolumeRTPCTimeline__FinishedFunc ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PlayPitchAndVolumeRTPCTimeline__FinishedFunc;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4753;
============ END FUNCTION PlayPitchAndVolumeRTPCTimeline__FinishedFunc ==============





============ BEGIN FUNCTION PlayPitchAndVolumeRTPCTimeline__UpdateFunc ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PlayPitchAndVolumeRTPCTimeline__UpdateFunc;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4368;
============ END FUNCTION PlayPitchAndVolumeRTPCTimeline__UpdateFunc ==============





============ BEGIN FUNCTION mWaterpumpTimeline__FinishedFunc ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: mWaterpumpTimeline__FinishedFunc;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L3902;
============ END FUNCTION mWaterpumpTimeline__FinishedFunc ==============





============ BEGIN FUNCTION mWaterpumpTimeline__UpdateFunc ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: mWaterpumpTimeline__UpdateFunc;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L3729;
============ END FUNCTION mWaterpumpTimeline__UpdateFunc ==============





============ BEGIN FUNCTION ReceiveBeginPlay ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ReceiveBeginPlay;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4363;
============ END FUNCTION ReceiveBeginPlay ==============





============ BEGIN FUNCTION ReceiveDestroyed ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ReceiveDestroyed;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L143;
============ END FUNCTION ReceiveDestroyed ==============





============ BEGIN FUNCTION StopProductionLoopEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StopProductionLoopEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L1646;
============ END FUNCTION StopProductionLoopEffects ==============





============ BEGIN FUNCTION PlayProducingSounds ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PlayProducingSounds;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L2380;
============ END FUNCTION PlayProducingSounds ==============





============ BEGIN FUNCTION StartProductionLoopEffects ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StartProductionLoopEffects;
L18:           // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L2415;
============ END FUNCTION StartProductionLoopEffects ==============





============ BEGIN FUNCTION StartVFXIteration ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: StartVFXIteration;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L3724;
============ END FUNCTION StartVFXIteration ==============





============ BEGIN FUNCTION OnIsProducingChanged ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnIsProducingChanged;
L18:           // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4169;
============ END FUNCTION OnIsProducingChanged ==============





============ BEGIN FUNCTION GainedSignificance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: GainedSignificance;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4599;
============ END FUNCTION GainedSignificance ==============





============ BEGIN FUNCTION LostSignificance ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: LostSignificance;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4748;
============ END FUNCTION LostSignificance ==============





============ BEGIN FUNCTION Start_VFX_Loop ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Start_VFX_Loop;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4758;
============ END FUNCTION Start_VFX_Loop ==============





============ BEGIN FUNCTION Stop_VFX_Loop ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Stop_VFX_Loop;
L0:            // Implementation: Function ExecuteUbergraph_Build_WaterPump, from label L4763;
============ END FUNCTION Stop_VFX_Loop ==============





============ BEGIN FUNCTION ExecuteUbergraph_Build_WaterPump ==============
L5:            goto ComputedJump(EntryPoint);
L15:           bool mbool = this->IsProducing();
L39:           if (!mbool) goto L128;
L53:           this->P_WaterPump_Chimney->Activate(false);
L90:           this->P_WaterPump_Production->Activate(false);
L127:          goto ExecutionFlow.Pop();
L128:          this->Stop_VFX_Loop();
L142:          goto ExecutionFlow.Pop();
L143:          // <Begin Inlined EventGraph Function ReceiveDestroyed>;
L143:          this->ReceiveDestroyed();
L153:          this->P_WaterPump_Waves->K2_DestroyComponent(this);
L186:          this->P_WaterEngineTurbulence->K2_DestroyComponent(this);
L219:          this->P_WaterPump_Production->K2_DestroyComponent(this);
L252:          this->P_WaterPump_Chimney->K2_DestroyComponent(this);
L285:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_UnderWater_Turbine.Stop_WaterPump_UnderWater_Turbine), this->PumpSound, "None", true);
L359:          goto ExecutionFlow.Pop();
L360:          bool mbool1 = KismetSystemLibrary->IsValid(this->P_WaterPump_Production);
L411:          if (!mbool1) goto L426;
L425:          goto ExecutionFlow.Pop();
L426:          SceneComponent* mSceneComponent = this->K2_GetRootComponent();
L446:          Rotator mRotator = mSceneComponent->K2_GetComponentRotation();
L496:          Vector mVector = mSceneComponent->K2_GetComponentLocation();
L546:          ParticleSystemComponent* mParticleSystemComponent = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Factory/Waterpump/P_WaterPump_Production.P_WaterPump_Production), mVector, mRotator, Vector(1, 1, 1), false, 0);
L632:          this->P_WaterPump_Production = mParticleSystemComponent;
L651:          Vector mVector1 = this->FGColoredInstanceMeshProxy->GetSocketLocation("filter_VFX_Socket");
L718:          ParticleSystemComponent* mParticleSystemComponent1 = GameplayStatics->SpawnEmitterAttached(ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Factory/Waterpump/P_WaterPump_Chimney.P_WaterPump_Chimney), this->FGColoredInstanceMeshProxy, "filter_VFX_Socket", mVector1, Rotator::FromPitchYawRoll(0, 0, 0), Vector(1, 1, 1), 1, false, 0);
L831:          this->P_WaterPump_Chimney = mParticleSystemComponent1;
L850:          bool mbool2 = KismetSystemLibrary->IsValid(this->P_WaterEngineTurbulence);
L901:          if (!mbool2) goto L916;
L915:          goto ExecutionFlow.Pop();
L916:          SceneComponent* mSceneComponent1 = this->K2_GetRootComponent();
L936:          Rotator mRotator1 = mSceneComponent1->K2_GetComponentRotation();
L986:          Vector mVector2 = mSceneComponent1->K2_GetComponentLocation();
L1036:         ParticleSystemComponent* mParticleSystemComponent2 = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Factory/Waterpump/P_WaterPumpSplash.P_WaterPumpSplash), mVector2, mRotator1, Vector(1, 1, 1), false, 0);
L1122:         this->P_WaterEngineTurbulence = mParticleSystemComponent2;
L1141:         goto ExecutionFlow.Pop();
L1142:         bool mbool3 = KismetSystemLibrary->IsValid(this->P_WaterPump_Production);
L1193:         if (!mbool3) goto ExecutionFlow.Pop();
L1203:         this->P_WaterPump_Production->Activate(false);
L1240:         this->P_WaterPump_Chimney->Activate(false);
L1277:         this->P_WaterEngineTurbulence->Activate(false);
L1314:         goto ExecutionFlow.Pop();
L1315:         bool mbool4 = this->PlayPitchAndVolumeRTPCTimeline_RTPC_2B435F41466C37D2AD809A88AA21BA89 <= 0;
L1349:         if (!mbool4) goto ExecutionFlow.Pop();
L1359:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_UnderWater_Turbine.Stop_WaterPump_UnderWater_Turbine), this->PumpSound, "None", true);
L1433:         this->P_WaterPump_Chimney->Deactivate();
L1469:         this->P_WaterPump_Production->Deactivate();
L1505:         this->P_WaterEngineTurbulence->Deactivate();
L1541:         goto ExecutionFlow.Pop();
L1542:         this->mWaterpumpTimeline->Reverse();
L1574:         goto ExecutionFlow.Pop();
L1575:         this->mWaterpumpTimeline->PlayFromStart();
L1607:         goto ExecutionFlow.Pop();
L1608:         this->PlayPitchAndVolumeRTPCTimeline->SetComponentTickInterval(0.10000000149011612);
L1645:         goto ExecutionFlow.Pop();
L1646:         this->StopProductionLoopEffects(mbool5);
L1665:         bool mbool6 = !mbool5;
L1694:         this->HasLostSignificance = mbool6;
L1713:         if (!mbool5) goto L2155;
L1727:         AkComponent* mAkComponent2 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_Loop.Stop_WaterPump_Loop), this, true);
L1780:         float mfloat = MapRangeClamped(this->mAudioTimerCounter, 0, 18.5, 0, 10.399999618530273);
L1837:         float mfloat1 = 10.399999618530273 - mfloat;
L1879:         bool mbool7 = mAkComponent2->SeekOnEventBySeconds(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_Loop.Stop_WaterPump_Loop), mfloat1, false, 0);
L1945:         KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mAudioTimerReference);
L1987:         this->mAudioTimerCounter = 0;
L2010:         bool mbool8 = KismetSystemLibrary->IsValid(this->SFXWaterPumpUnderwaterTurbine);
L2061:         if (!mbool8) goto ExecutionFlow.Pop();
L2071:         float mfloat2 = 1 / 10;
L2109:         this->mWaterpumpTimeline->SetPlayRate(mfloat2);
L2150:         goto L1542;
L2155:         this->PlayPitchAndVolumeRTPCTimeline->Stop();
L2187:         AkComponent* mAkComponent3 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_LostSignificance.Stop_WaterPump_LostSignificance), this, true);
L2240:         KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mAudioTimerReference);
L2282:         AkComponent* mAkComponent4 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_UnderWater_Turbine.Stop_WaterPump_UnderWater_Turbine), this->PumpSound, "None", true);
L2356:         this->mAudioTimerCounter = 0;
L2379:         goto ExecutionFlow.Pop();
L2380:         // <Begin Inlined EventGraph Function PlayProducingSounds>;
L2380:         bool mbool9 = this->IsProducing();
L2404:         if (!mbool9) goto ExecutionFlow.Pop();
L2414:         goto ExecutionFlow.Pop();
L2415:         this->StartProductionLoopEffects(mbool10);
L2434:         bool mbool11 = !mbool10;
L2463:         this->HasLostSignificance = mbool11;
L2482:         ExecutionFlow.Push(L2502);
L2487:         this->Start_VFX_Loop();
L2501:         goto ExecutionFlow.Pop();
L2502:         if (!mbool10) goto L2951;
L2516:         AkComponent* mAkComponent5 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Play_WaterPump_Loop.Play_WaterPump_Loop), this, true);
L2569:         this->mSFXWaterPumpEngine = mAkComponent5;
L2588:         TimerHandle mTimerHandle = KismetSystemLibrary->K2_SetTimer(this, "mAudioTimer", this->mAudioTimerMS, true);
L2662:         this->mAudioTimerReference = mTimerHandle;
L2689:         bool mbool12 = KismetSystemLibrary->IsValid(this->SFXWaterPumpUnderwaterTurbine);
L2740:         if (!mbool12) goto L3113;
L2754:         float Temp_float_Variable = 18.5;
L2777:         float Temp_float_Variable1 = 0.10000000149011612;
L2800:         bool Temp_bool_Variable = this->HasLostSignificance;
L2819:         float mfloat3 = 1 / switch (Temp_bool_Variable) {
case false -> Temp_float_Variable;
case true -> Temp_float_Variable1;
default -> mfloat4;
};
L2905:         this->mWaterpumpTimeline->SetPlayRate(mfloat3);
L2946:         goto L1575;
L2951:         AkComponent* mAkComponent6 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Play_WaterPump_Loop.Play_WaterPump_Loop), this, true);
L3004:         this->mSFXWaterPumpEngine = mAkComponent6;
L3023:         bool mbool13 = this->mSFXWaterPumpEngine->SeekOnEventBySeconds(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Play_WaterPump_Loop.Play_WaterPump_Loop), 20, false, 0);
L3085:         this->mAudioTimerCounter = 18.5;
L3108:         goto L2689;
L3113:         AkComponent* mAkComponent7 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Play_WaterPump_UnderWater_Turbine.Play_WaterPump_UnderWater_Turbine), this->PumpSound, "None", true);
L3187:         this->SFXWaterPumpUnderwaterTurbine = mAkComponent7;
L3206:         goto L2754;
L3211:         float mfloat5 = MapRangeClamped(this->PlayPitchAndVolumeRTPCTimeline_RTPC_2B435F41466C37D2AD809A88AA21BA89, 0, 100, 0, 1);
L3268:         this->P_WaterEngineTurbulence->SetFloatParameter("Opacity", mfloat5);
L3322:         goto ExecutionFlow.Pop();
L3323:         this->P_WaterEngineTurbulence->K2_DestroyComponent(this);
L3356:         bool mbool14 = KismetSystemLibrary->IsValid(this->P_WaterPump_Production);
L3407:         if (!mbool14) goto L3454;
L3421:         this->P_WaterPump_Production->K2_DestroyComponent(this);
L3454:         bool mbool15 = KismetSystemLibrary->IsValid(this->P_WaterPump_Chimney);
L3505:         if (!mbool15) goto ExecutionFlow.Pop();
L3515:         this->P_WaterPump_Chimney->K2_DestroyComponent(this);
L3548:         goto ExecutionFlow.Pop();
L3549:         bool mbool16 = KismetSystemLibrary->IsValid(this->P_WaterEngineTurbulence);
L3600:         if (!mbool16) goto L3356;
L3614:         goto L3323;
L3619:         bool mbool17 = this->IsProducing();
L3643:         if (!mbool17) goto ExecutionFlow.Pop();
L3653:         goto L360;
L3658:         this->SFXWaterPumpUnderwaterTurbine->SetRTPCValue("WaterPumpRTPC", this->PlayPitchAndVolumeRTPCTimeline_RTPC_2B435F41466C37D2AD809A88AA21BA89, 0);
L3719:         goto L3211;
L3724:         // <Begin Inlined EventGraph Function StartVFXIteration>;
L3724:         goto L1142;
L3729:         // <Begin Inlined EventGraph Function mWaterpumpTimeline__UpdateFunc>;
L3729:         this->SFXWaterPumpUnderwaterTurbine->SetRTPCValue("WaterPumpRTPC", this->mWaterpumpTimeline_RTPC_B8FA6F944E717E3B7A286E84901F620E, 0);
L3790:         float mfloat6 = MapRangeClamped(this->mWaterpumpTimeline_RTPC_B8FA6F944E717E3B7A286E84901F620E, 0, 100, 0, 1);
L3847:         this->P_WaterEngineTurbulence->SetFloatParameter("Opacity", mfloat6);
L3901:         goto ExecutionFlow.Pop();
L3902:         // <Begin Inlined EventGraph Function mWaterpumpTimeline__FinishedFunc>;
L3902:         bool mbool18 = this->mWaterpumpTimeline_RTPC_B8FA6F944E717E3B7A286E84901F620E <= 0;
L3936:         if (!mbool18) goto ExecutionFlow.Pop();
L3946:         this->P_WaterPump_Chimney->Deactivate();
L3982:         this->P_WaterPump_Production->Deactivate();
L4018:         AkComponent* mAkComponent8 = AkGameplayStatics->PostAkEventAttached(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/WaterPump/Audio/Stop_WaterPump_UnderWater_Turbine.Stop_WaterPump_UnderWater_Turbine), this->PumpSound, "None", true);
L4092:         KismetSystemLibrary->Delay(this, 3, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 15, UUID = -799117556, ExecutionFunction = "ExecuteUbergraph_Build_WaterPump", CallbackTarget = this));
L4168:         goto ExecutionFlow.Pop();
L4169:         this->OnIsProducingChanged(mbool19);
L4188:         bool mbool20 = this->GetIsSignificant();
L4208:         if (!mbool20) goto ExecutionFlow.Pop();
L4218:         if (!mbool19) goto L4244;
L4232:         this->TryStartProductionLoopEffects(true);
L4243:         goto ExecutionFlow.Pop();
L4244:         this->TryStopProductionLoopEffects(true);
L4255:         goto ExecutionFlow.Pop();
L4256:         bool mbool21 = this->IsProducing();
L4280:         if (!mbool21) goto ExecutionFlow.Pop();
L4290:         this->TryStartProductionLoopEffects(false);
L4301:         goto ExecutionFlow.Pop();
L4302:         bool mbool22 = this->IsProducing();
L4326:         if (!mbool22) goto ExecutionFlow.Pop();
L4336:         this->TryStopProductionLoopEffects(false);
L4347:         goto ExecutionFlow.Pop();
L4348:         this->ReceiveBeginPlay();
L4358:         goto L1608;
L4363:         // <Begin Inlined EventGraph Function ReceiveBeginPlay>;
L4363:         goto L4348;
L4368:         // <Begin Inlined EventGraph Function PlayPitchAndVolumeRTPCTimeline__UpdateFunc>;
L4368:         goto L3658;
L4373:         SceneComponent* mSceneComponent2 = this->K2_GetRootComponent();
L4393:         Rotator mRotator2 = mSceneComponent2->K2_GetComponentRotation();
L4443:         Vector mVector3 = mSceneComponent2->K2_GetComponentLocation();
L4493:         ParticleSystemComponent* mParticleSystemComponent3 = GameplayStatics->SpawnEmitterAtLocation(this, ObjectConst(ParticleSystem /Game/FactoryGame/VFX/Factory/Waterpump/P_WaterPump_Waves.P_WaterPump_Waves), mVector3, mRotator2, Vector(1, 1, 1), false, 0);
L4579:         this->P_WaterPump_Waves = mParticleSystemComponent3;
L4598:         goto ExecutionFlow.Pop();
L4599:         // <Begin Inlined EventGraph Function GainedSignificance>;
L4599:         this->GainedSignificance();
L4609:         ExecutionFlow.Push(L4256);
L4614:         goto L4373;
L4619:         this->LostSignificance();
L4629:         ExecutionFlow.Push(L4639);
L4634:         goto L4302;
L4639:         bool mbool23 = KismetSystemLibrary->IsValid(this->P_WaterPump_Waves);
L4690:         if (!mbool23) goto ExecutionFlow.Pop();
L4700:         this->P_WaterPump_Waves->K2_DestroyComponent(this);
L4733:         this->Stop_VFX_Loop();
L4747:         goto ExecutionFlow.Pop();
L4748:         // <Begin Inlined EventGraph Function LostSignificance>;
L4748:         goto L4619;
L4753:         // <Begin Inlined EventGraph Function PlayPitchAndVolumeRTPCTimeline__FinishedFunc>;
L4753:         goto L1315;
L4758:         // <Begin Inlined EventGraph Function Start_VFX_Loop>;
L4758:         goto L3619;
L4763:         // <Begin Inlined EventGraph Function Stop_VFX_Loop>;
L4763:         goto L3549;
============ END FUNCTION ExecuteUbergraph_Build_WaterPump ==============
