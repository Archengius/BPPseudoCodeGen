########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Unlocks/BP_UnlockRecipe.BP_UnlockRecipe_C
########################





============ BEGIN FUNCTION GetUnlockDataStruct ==============
L0:            ExecutionFlow.Push(L1289);
L5:            int32 Temp_int_Loop_Counter_Variable = 0;
L28:           int32 Temp_int_Array_Index_Variable1 = 0;
L51:           TArray<TSubclassOf<FGRecipe>> mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L79:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArray<TSubclassOf<FGRecipe>>);
L138:          bool mbool = Less_IntInt(Temp_int_Loop_Counter_Variable, mint32);
L176:          if (!mbool) goto L1109;
L190:          Temp_int_Array_Index_Variable1 = Temp_int_Loop_Counter_Variable;
L217:          ExecutionFlow.Push(L1141);
L222:          int32 Temp_int_Loop_Counter_Variable1 = 0;
L245:          int32 Temp_int_Array_Index_Variable = 0;
L268:          mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L296:          KismetArrayLibrary->Array_Get([ref] mTArray<TSubclassOf<FGRecipe>>, Temp_int_Array_Index_Variable1, [ref] mTSubclassOf<FGRecipe>);
L355:          TArray<ItemAmount> mTArray<ItemAmount> = FGRecipe->GetProducts(mTSubclassOf<FGRecipe>, false);
L415:          int32 mint321 = KismetArrayLibrary->Array_Length([ref] mTArray<ItemAmount>);
L474:          bool mbool1 = Less_IntInt(Temp_int_Loop_Counter_Variable1, mint321);
L512:          if (!mbool1) goto ExecutionFlow.Pop();
L522:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable1;
L549:          ExecutionFlow.Push(L1215);
L554:          mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L582:          KismetArrayLibrary->Array_Get([ref] mTArray<TSubclassOf<FGRecipe>>, Temp_int_Array_Index_Variable1, [ref] mTSubclassOf<FGRecipe>);
L641:          mTArray<ItemAmount> = FGRecipe->GetProducts(mTSubclassOf<FGRecipe>, false);
L701:          KismetArrayLibrary->Array_Get([ref] mTArray<ItemAmount>, Temp_int_Array_Index_Variable, [ref] mItemAmount);
L760:          Texture2D* mTexture2D = FGItemDescriptor->GetSmallIcon(mItemAmount.ItemClass);
L820:          FText mFText = FGItemDescriptor->GetItemName(mItemAmount.ItemClass);
L888:          mFUnlockDataStruct.UnlockName_2_490383D6421D4A92D86E1F835769488A = mFText;
L924:          mFUnlockDataStruct.UnlockIcon_9_3E3B124C41C68907A6EB9FAD36C04BC4 = mTexture2D;
L952:          mFUnlockDataStruct.UnlockAmount_13_F32234CC46ECA4C99973A28AA05BE30E = 0;
L984:          mFUnlockDataStruct.UnlockStructIndex_34_716E881C402D058998F7CDA17E1E4BF2 = Temp_int_Array_Index_Variable1;
L1020:         mFUnlockDataStruct.Unlock_29_06E6D017481991B0E94072A4F21FCC03 = this;
L1040:         int32 mint322 = KismetArrayLibrary->Array_Add([ref] localUnlockDataStruct, [ref] mFUnlockDataStruct);
L1108:         goto ExecutionFlow.Pop();
L1109:         TArray<FUnlockDataStruct> UnlockDataStruct = localUnlockDataStruct;
L1136:         <End of Inlined Event Graph Function>;
L1141:         int32 mint323 = Add_IntInt(Temp_int_Loop_Counter_Variable, 1);
L1183:         Temp_int_Loop_Counter_Variable = mint323;
L1210:         goto L51;
L1215:         int32 mint324 = Add_IntInt(Temp_int_Loop_Counter_Variable1, 1);
L1257:         Temp_int_Loop_Counter_Variable1 = mint324;
L1284:         goto L268;
============ END FUNCTION GetUnlockDataStruct ==============





============ BEGIN FUNCTION GetStingerWidgetRewardData ==============
L0:            ExecutionFlow.Push(L1032);
L5:            int32 Temp_int_Loop_Counter_Variable = 0;
L28:           int32 Temp_int_Array_Index_Variable = 0;
L51:           TArray<TSubclassOf<FGRecipe>> mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L79:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArray<TSubclassOf<FGRecipe>>);
L138:          bool mbool = Less_IntInt(Temp_int_Loop_Counter_Variable, mint32);
L176:          if (!mbool) goto L852;
L190:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L217:          ExecutionFlow.Push(L884);
L222:          int32 Temp_int_Loop_Counter_Variable1 = 0;
L245:          int32 Temp_int_Array_Index_Variable1 = 0;
L268:          mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L296:          KismetArrayLibrary->Array_Get([ref] mTArray<TSubclassOf<FGRecipe>>, Temp_int_Array_Index_Variable, [ref] mTSubclassOf<FGRecipe>);
L355:          TArray<ItemAmount> mTArray<ItemAmount> = FGRecipe->GetProducts(mTSubclassOf<FGRecipe>, false);
L415:          int32 mint321 = KismetArrayLibrary->Array_Length([ref] mTArray<ItemAmount>);
L474:          bool mbool1 = Less_IntInt(Temp_int_Loop_Counter_Variable1, mint321);
L512:          if (!mbool1) goto ExecutionFlow.Pop();
L522:          Temp_int_Array_Index_Variable1 = Temp_int_Loop_Counter_Variable1;
L549:          ExecutionFlow.Push(L958);
L554:          mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L582:          KismetArrayLibrary->Array_Get([ref] mTArray<TSubclassOf<FGRecipe>>, Temp_int_Array_Index_Variable, [ref] mTSubclassOf<FGRecipe>);
L641:          mTArray<ItemAmount> = FGRecipe->GetProducts(mTSubclassOf<FGRecipe>, false);
L701:          KismetArrayLibrary->Array_Get([ref] mTArray<ItemAmount>, Temp_int_Array_Index_Variable1, [ref] mItemAmount);
L760:          this->GetRewardTypeFromItemDescriptor(mItemAmount.ItemClass, [ref] mTSubclassOf<FGStingerWidgetRewardData>);
L801:          BlueprintSetLibrary->Set_Add([ref] LocalStingerWidgetRewardData, [ref] mTSubclassOf<FGStingerWidgetRewardData>);
L851:          goto ExecutionFlow.Pop();
L852:          TSet<TSubclassOf<FGStingerWidgetRewardData>> StingerRewardTypes = LocalStingerWidgetRewardData;
L879:          <End of Inlined Event Graph Function>;
L884:          int32 mint322 = Add_IntInt(Temp_int_Loop_Counter_Variable, 1);
L926:          Temp_int_Loop_Counter_Variable = mint322;
L953:          goto L51;
L958:          int32 mint323 = Add_IntInt(Temp_int_Loop_Counter_Variable1, 1);
L1000:         Temp_int_Loop_Counter_Variable1 = mint323;
L1027:         goto L268;
============ END FUNCTION GetStingerWidgetRewardData ==============





============ BEGIN FUNCTION GetUnlockRewardWidgets ==============
L0:            ExecutionFlow.Push(L794);
L5:            int32 Temp_int_Loop_Counter_Variable = 0;
L28:           int32 Temp_int_Array_Index_Variable = 0;
L51:           TArray<TSubclassOf<FGRecipe>> mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L79:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArray<TSubclassOf<FGRecipe>>);
L138:          bool mbool = Less_IntInt(Temp_int_Loop_Counter_Variable, mint32);
L176:          if (!mbool) goto L688;
L190:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L217:          ExecutionFlow.Push(L720);
L222:          Widget_RewardProduct* mWidget_RewardProduct = WidgetBlueprintLibrary->Create(this, Widget_RewardProduct, OwningPlayer);
L283:          mTArray<TSubclassOf<FGRecipe>> = this->GetRecipesToUnlock();
L311:          KismetArrayLibrary->Array_Get([ref] mTArray<TSubclassOf<FGRecipe>>, Temp_int_Array_Index_Variable, [ref] mTSubclassOf<FGRecipe>);
L370:          TArray<ItemAmount> mTArray<ItemAmount> = FGRecipe->GetProducts(mTSubclassOf<FGRecipe>, false);
L430:          KismetArrayLibrary->SetArrayPropertyByName(mWidget_RewardProduct, "mProducts", [ref] mTArray<ItemAmount>);
L493:          KismetSystemLibrary->SetClassPropertyByName(mWidget_RewardProduct, "mSchematicClass", SchematicClass);
L556:          KismetSystemLibrary->SetObjectPropertyByName(mWidget_RewardProduct, "mTradingPostWidget", TradingPostWidget);
L619:          int32 mint321 = KismetArrayLibrary->Array_Add([ref] RewardWidgets, [ref] mWidget_RewardProduct);
L687:          goto ExecutionFlow.Pop();
L688:          TArray<UserWidget*> Widgets = RewardWidgets;
L715:          <End of Inlined Event Graph Function>;
L720:          int32 mint322 = Add_IntInt(Temp_int_Loop_Counter_Variable, 1);
L762:          Temp_int_Loop_Counter_Variable = mint322;
L789:          goto L51;
============ END FUNCTION GetUnlockRewardWidgets ==============





============ BEGIN FUNCTION GetRewardTypeFromItemDescriptor ==============
L0:            bool mbool = ClassIsChildOf(ItemDescriptorClass, FGDecorDescriptor);
L38:           if (!mbool) goto L76;
L52:           TSubclassOf<FGStingerWidgetRewardData> RewardData = RewardData_Decor;
L71:           <End of Inlined Event Graph Function>;
L76:           bool mbool1 = ClassIsChildOf(ItemDescriptorClass, FGVehicleDescriptor);
L114:          if (!mbool1) goto L152;
L128:          RewardData = RewardData_Vehicle;
L147:          <End of Inlined Event Graph Function>;
L152:          bool mbool2 = ClassIsChildOf(ItemDescriptorClass, FGEquipmentDescriptor);
L190:          if (!mbool2) goto L228;
L204:          RewardData = RewardData_Equipment;
L223:          <End of Inlined Event Graph Function>;
L228:          bool mbool3 = ClassIsChildOf(ItemDescriptorClass, FGResourceDescriptor);
L266:          if (!mbool3) goto L304;
L280:          RewardData = RewardData_Resource;
L299:          <End of Inlined Event Graph Function>;
L304:          bool mbool4 = ClassIsChildOf(ItemDescriptorClass, FGBuildingDescriptor);
L342:          if (!mbool4) goto L380;
L356:          RewardData = RewardData_Building;
L375:          <End of Inlined Event Graph Function>;
L380:          RewardData = RewardData_Item;
============ END FUNCTION GetRewardTypeFromItemDescriptor ==============
