########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/InGame/Widget_Inventory.Widget_Inventory_C
########################





============ BEGIN FUNCTION GetAllInventorySlots ==============
L0:            TArray<Widget_InventorySlot*> InventorySlots = this->mInventorySlots;
============ END FUNCTION GetAllInventorySlots ==============





============ BEGIN FUNCTION GetSqrtOfLinearSize ==============
L0:            int32 mint32 = this->mInventoryComponent->GetSizeLinear();
L50:           float mfloat = Conv_IntToFloat(mint32);
L87:           float mfloat1 = Sqrt(mfloat);
L124:          int32 mint321 = FFloor(mfloat1);
L161:          int32 ReturnValue = mint321;
============ END FUNCTION GetSqrtOfLinearSize ==============





============ BEGIN FUNCTION GetWidth ==============
L0:            float mfloat = 42 / 64;
L38:           bool mbool = !this->mUseSmallSlots;
L67:           float mfloat1 = this->mOverrideWidth * mfloat;
L113:          bool mbool1 = this->mKeepWidthRegardlessOfSlotSize && mbool;
L151:          int32 mint32 = FFloor(mfloat1);
L188:          int32 mint321 = this->mInventoryComponent->GetSizeLinear();
L238:          int32 mint322 = SelectInt(mint32, this->mOverrideWidth, mbool1);
L293:          bool mbool2 = this->mOverrideWidth != -1;
L327:          int32 mint323 = this->GetSqrtOfLinearSize();
L359:          int32 mint324 = Min(mint323, this->mMaxInventoryColumns);
L405:          int32 mint325 = SelectInt(mint322, mint324, mbool2);
L460:          int32 mint326 = SelectInt(mint321, mint325, this->mUseLinearSize);
L515:          int32 ReturnValue = mint326;
============ END FUNCTION GetWidth ==============





============ BEGIN FUNCTION CreateAllSlots ==============
L0:            ExecutionFlow.Push(L1902);
L5:            KismetArrayLibrary->Array_Clear([ref] this->mInventorySlots);
L46:           bool mbool = KismetSystemLibrary->IsValid(this->mInventoryComponent);
L97:           if (!mbool) goto L322;
L111:          if (!this->mUseLinearSize) goto L446;
L125:          int32 Temp_int_Variable3 = 0;
L148:          int32 mint32 = this->GetWidth();
L180:          int32 mint321 = mint32 - 1;
L222:          bool mbool1 = Temp_int_Variable3 <= mint321;
L260:          if (!mbool1) goto ExecutionFlow.Pop();
L270:          ExecutionFlow.Push(L1754);
L275:          this->CreateSlot(Temp_int_Variable3, 0, Temp_int_Variable3, [ref] mWidget_InventorySlot);
L321:          goto ExecutionFlow.Pop();
L322:          KismetSystemLibrary->PrintString(this, "no inventory component? this should not happen!", true, true, ScriptStruct /Script/CoreUObject.LinearColor(R = 0, G = 0.6600000262260437, B = 1, A = 1), 2);
L445:          goto ExecutionFlow.Pop();
L446:          int32 Temp_int_Variable = 0;
L469:          int32 mint322 = this->GetWidth();
L501:          int32 mint323 = mint322 - 1;
L543:          bool mbool2 = Temp_int_Variable <= mint323;
L581:          if (!mbool2) goto L957;
L595:          ExecutionFlow.Push(L883);
L600:          int32 Temp_int_Variable1 = 0;
L623:          int32 mint324 = this->GetWidth();
L655:          int32 mint325 = mint324 - 1;
L697:          bool mbool3 = Temp_int_Variable1 <= mint325;
L735:          if (!mbool3) goto ExecutionFlow.Pop();
L745:          ExecutionFlow.Push(L1828);
L750:          int32 mint326 = this->GetWidth();
L782:          this->CalcIndex(Temp_int_Variable1, Temp_int_Variable, mint326, [ref] mint327);
L832:          this->CreateSlot(mint327, Temp_int_Variable, Temp_int_Variable1, [ref] mWidget_InventorySlot1);
L882:          goto ExecutionFlow.Pop();
L883:          int32 mint328 = Temp_int_Variable + 1;
L925:          Temp_int_Variable = mint328;
L952:          goto L469;
L957:          int32 mint329 = this->GetWidth();
L989:          int32 mint3210 = this->GetWidth();
L1021:         int32 mint3211 = mint3210 * mint329;
L1067:         int32 Temp_int_Variable2 = mint3211;
L1094:         int32 mint3212 = this->mInventoryComponent->GetSizeLinear();
L1144:         int32 mint3213 = mint3212 - 1;
L1186:         bool mbool4 = Temp_int_Variable2 <= mint3213;
L1224:         if (!mbool4) goto ExecutionFlow.Pop();
L1234:         ExecutionFlow.Push(L1680);
L1239:         mint329 = this->GetWidth();
L1271:         int32 mint3214 = this->GetWidth();
L1303:         int32 mint3215 = this->GetWidth();
L1335:         int32 mint3216 = this->GetWidth();
L1367:         int32 mint3217 = Temp_int_Variable2 % mint3215;
L1413:         mint3210 = this->GetWidth();
L1445:         mint3211 = mint3210 * mint329;
L1491:         int32 mint3218 = Temp_int_Variable2 - mint3211;
L1537:         int32 mint3219 = mint3218 / mint3216;
L1583:         int32 mint3220 = mint3214 + mint3219;
L1629:         this->CreateSlot(Temp_int_Variable2, mint3220, mint3217, [ref] mWidget_InventorySlot2);
L1679:         goto ExecutionFlow.Pop();
L1680:         int32 mint3221 = Temp_int_Variable2 + 1;
L1722:         Temp_int_Variable2 = mint3221;
L1749:         goto L1094;
L1754:         int32 mint3222 = Temp_int_Variable3 + 1;
L1796:         Temp_int_Variable3 = mint3222;
L1823:         goto L148;
L1828:         int32 mint3223 = Temp_int_Variable1 + 1;
L1870:         Temp_int_Variable1 = mint3223;
L1897:         goto L623;
============ END FUNCTION CreateAllSlots ==============





============ BEGIN FUNCTION ClearAllSlots ==============
L0:            this->mSlots->ClearChildren();
L36:           KismetArrayLibrary->Array_Clear([ref] this->mInventorySlots);
============ END FUNCTION ClearAllSlots ==============





============ BEGIN FUNCTION CalcIndex ==============
L0:            int32 mint32 = Y * Width;
L46:           int32 mint321 = X + mint32;
L92:           int32 idx = mint321;
============ END FUNCTION CalcIndex ==============





============ BEGIN FUNCTION CreateSlot ==============
L0:            int32 mint32 = this->mInventoryComponent->GetSizeLinear();
L50:           bool mbool = index < mint32;
L88:           if (!mbool) goto L637;
L102:          PlayerController* mPlayerController = this->GetOwningPlayer();
L126:          Widget_InventorySlot* mWidget_InventorySlot = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/InventorySlots/Widget_InventorySlot.Widget_InventorySlot_C), mPlayerController);
L187:          KismetSystemLibrary->SetIntPropertyByName(mWidget_InventorySlot, "mSlotIdx", index);
L250:          KismetSystemLibrary->SetObjectPropertyByName(mWidget_InventorySlot, "mCachedInventoryComponent", this->mInventoryComponent);
L313:          KismetSystemLibrary->SetBoolPropertyByName(mWidget_InventorySlot, "mIsLocked", this->mIsLockedInventory);
L376:          mWidget_InventorySlot->mSmallSlot = this->mUseSmallSlots;
L417:          UniformGridSlot* mUniformGridSlot = this->mSlots->AddChildToUniformGrid(mWidget_InventorySlot);
L468:          mUniformGridSlot->SetRow(Row);
L509:          mUniformGridSlot->SetColumn(Column);
L550:          int32 mint321 = KismetArrayLibrary->Array_Add([ref] this->mInventorySlots, [ref] mWidget_InventorySlot);
L618:          Widget_InventorySlot* Result = mWidget_InventorySlot;
============ END FUNCTION CreateSlot ==============





============ BEGIN FUNCTION Init ==============
L0:            this->mInventoryComponent = component;
L19:           mFScriptDelegate->BindUFunction(this, OnInventoryResized);
L42:           this->mInventoryComponent->ResizeInventoryDelegate.AddUnique(mFScriptDelegate);
L83:           this->ClearAllSlots();
L97:           this->CreateAllSlots();
============ END FUNCTION Init ==============





============ BEGIN FUNCTION OnInventoryResized ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: OnInventoryResized;
L36:           // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L891;
============ END FUNCTION OnInventoryResized ==============





============ BEGIN FUNCTION Destruct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Destruct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L920;
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L1046;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION OnDragEnter ==============
L54:           // EventGraph implemented function stub;
L54:           // Function Name: OnDragEnter;
L54:           // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L1266;
============ END FUNCTION OnDragEnter ==============





============ BEGIN FUNCTION OnDragLeave ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: OnDragLeave;
L36:           // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L1286;
============ END FUNCTION OnDragLeave ==============





============ BEGIN FUNCTION OnMouseLeave ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnMouseLeave;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L1306;
============ END FUNCTION OnMouseLeave ==============





============ BEGIN FUNCTION AnimateNewSlots ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: AnimateNewSlots;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Inventory, from label L1326;
============ END FUNCTION AnimateNewSlots ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_Inventory ==============
L5:            goto ComputedJump(EntryPoint);
L15:           ExecutionFlow.Push(L213);
L20:           KismetArrayLibrary->Array_Get([ref] this->mInventorySlots, Temp_int_Variable1, [ref] mWidget_InventorySlot);
L79:           mWidget_InventorySlot->SetVisibility(0);
L117:          KismetArrayLibrary->Array_Get([ref] this->mInventorySlots, Temp_int_Variable1, [ref] mWidget_InventorySlot);
L176:          mWidget_InventorySlot->Event PlayOnNewSlotsAddedAnimation();
L212:          goto ExecutionFlow.Pop();
L213:          int32 mint32 = Temp_int_Variable1 + 1;
L255:          int32 Temp_int_Variable1 = mint32;
L282:          int32 mint321 = KismetArrayLibrary->Array_LastIndex([ref] this->mInventorySlots);
L341:          bool mbool = Temp_int_Variable1 <= mint321;
L379:          if (!mbool) goto ExecutionFlow.Pop();
L389:          KismetSystemLibrary->Delay(this, 0.10000000149011612, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 15, UUID = -828405145, ExecutionFunction = "ExecuteUbergraph_Widget_Inventory", CallbackTarget = this));
L465:          goto ExecutionFlow.Pop();
L466:          ExecutionFlow.Push(L569);
L471:          KismetArrayLibrary->Array_Get([ref] this->mInventorySlots, Temp_int_Variable, [ref] mWidget_InventorySlot1);
L530:          mWidget_InventorySlot1->SetVisibility(2);
L568:          goto ExecutionFlow.Pop();
L569:          int32 mint322 = Temp_int_Variable + 1;
L611:          int32 Temp_int_Variable = mint322;
L638:          mint321 = KismetArrayLibrary->Array_LastIndex([ref] this->mInventorySlots);
L697:          bool mbool1 = Temp_int_Variable <= mint321;
L735:          if (!mbool1) goto L754;
L749:          goto L466;
L754:          int32 mint323 = KismetArrayLibrary->Array_Length([ref] this->mInventorySlots);
L813:          int32 mint324 = mint323 - mint325;
L859:          Temp_int_Variable1 = mint324;
L886:          goto L282;
L891:          this->ClearAllSlots();
L905:          this->CreateAllSlots();
L919:          goto ExecutionFlow.Pop();
L920:          bool mbool2 = KismetSystemLibrary->IsValid(this->mInventoryComponent);
L971:          if (!mbool2) goto ExecutionFlow.Pop();
L981:          mFScriptDelegate->BindUFunction(this, OnInventoryResized);
L1004:         this->mInventoryComponent->ResizeInventoryDelegate.Remove(mFScriptDelegate);
L1045:         goto ExecutionFlow.Pop();
L1046:         FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L1088:         bool Temp_bool_Variable1 = false;
L1099:         bool mbool3 = mFGGameUserSettings->GetBoolOptionValue("FG.BigSlots");
L1154:         bool Temp_bool_Variable = this->mAlwaysBigSlot;
L1173:         bool mbool4 = !mbool3;
L1202:         this->mUseSmallSlots = switch (Temp_bool_Variable) {
case false -> mbool4;
case true -> Temp_bool_Variable1;
default -> mbool5;
};
L1265:         goto ExecutionFlow.Pop();
L1266:         this->OnInventoryDragEnter->ProcessMulticastDelegate();
L1285:         goto ExecutionFlow.Pop();
L1286:         this->OnInventoryDragLeave->ProcessMulticastDelegate();
L1305:         goto ExecutionFlow.Pop();
L1306:         this->OnInventoryMouseLeave->ProcessMulticastDelegate();
L1325:         goto ExecutionFlow.Pop();
L1326:         mint323 = KismetArrayLibrary->Array_Length([ref] this->mInventorySlots);
L1385:         mint324 = mint323 - mint325;
L1431:         Temp_int_Variable = mint324;
L1458:         goto L638;
============ END FUNCTION ExecuteUbergraph_Widget_Inventory ==============





============ BEGIN FUNCTION OnInventoryMouseLeave__DelegateSignature ==============
============ END FUNCTION OnInventoryMouseLeave__DelegateSignature ==============





============ BEGIN FUNCTION OnInventoryDragLeave__DelegateSignature ==============
============ END FUNCTION OnInventoryDragLeave__DelegateSignature ==============





============ BEGIN FUNCTION OnInventoryDragEnter__DelegateSignature ==============
============ END FUNCTION OnInventoryDragEnter__DelegateSignature ==============
