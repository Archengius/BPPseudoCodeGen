########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/InGame/Widget_ResourceExtractorUI.Widget_ResourceExtractorUI_C
########################





============ BEGIN FUNCTION CleanUpBindings ==============
L0:            ExecutionFlow.Push(L442);
L5:            this->NewOutputSlot->OnMoveStack->Clear();
L37:           this->Widget_Overclock->GetUnlockedOverclockSlots([ref] mTArrayWidget_InventorySlot);
L82:           int32 Temp_int_Loop_Counter_Variable = 0;
L105:          int32 Temp_int_Array_Index_Variable = 0;
L128:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayWidget_InventorySlot);
L187:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L225:          if (!mbool) goto L363;
L239:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L266:          ExecutionFlow.Push(L368);
L271:          KismetArrayLibrary->Array_Get([ref] mTArrayWidget_InventorySlot, Temp_int_Array_Index_Variable, [ref] mWidget_InventorySlot);
L330:          mWidget_InventorySlot->OnMoveStack->Clear();
L362:          goto ExecutionFlow.Pop();
L363:          // <End Inlined EventGraph Function>;
L368:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L410:          Temp_int_Loop_Counter_Variable = mint321;
L437:          goto L128;
============ END FUNCTION CleanUpBindings ==============





============ BEGIN FUNCTION DropInventorySlotStack ==============
L0:            ExecutionFlow.Push(L854);
L5:            this->NewOutputSlot->DropOntoInventorySlot(InventorySlot, [ref] mbool);
L59:           if (!mbool) goto L89;
L73:           bool WasStackMoved = true;
L84:           // <End Inlined EventGraph Function>;
L89:           this->Widget_Overclock->GetUnlockedOverclockSlots([ref] mTArrayWidget_InventorySlot);
L134:          bool Temp_bool_True_if_break_was_hit_Variable = false;
L145:          int32 Temp_int_Loop_Counter_Variable = 0;
L168:          int32 Temp_int_Array_Index_Variable = 0;
L191:          bool mbool1 = !Temp_bool_True_if_break_was_hit_Variable;
L220:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayWidget_InventorySlot);
L279:          bool mbool2 = Temp_int_Loop_Counter_Variable < mint32;
L317:          bool mbool3 = mbool1 && mbool2;
L355:          if (!mbool3) goto L756;
L369:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L396:          ExecutionFlow.Push(L780);
L401:          bool Temp_bool_Variable1 = true;
L412:          bool Temp_bool_Variable2 = true;
L423:          KismetArrayLibrary->Array_Get([ref] mTArrayWidget_InventorySlot, Temp_int_Array_Index_Variable, [ref] mWidget_InventorySlot);
L482:          mWidget_InventorySlot->CheckSlotHasItems([ref] mbool4);
L527:          bool mbool5 = !mbool4;
L556:          if (!switch (Temp_bool_Variable2) {
case false -> Temp_bool_Variable1;
case true -> mbool5;
default -> mbool6;
}) goto ExecutionFlow.Pop();
L610:          KismetArrayLibrary->Array_Get([ref] mTArrayWidget_InventorySlot, Temp_int_Array_Index_Variable, [ref] mWidget_InventorySlot);
L669:          mWidget_InventorySlot->DropOntoInventorySlot(InventorySlot, [ref] mbool7);
L723:          if (!mbool7) goto ExecutionFlow.Pop();
L733:          bool Temp_bool_Variable = true;
L744:          Temp_bool_True_if_break_was_hit_Variable = true;
L755:          goto ExecutionFlow.Pop();
L756:          WasStackMoved = Temp_bool_Variable;
L775:          // <End Inlined EventGraph Function>;
L780:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L822:          Temp_int_Loop_Counter_Variable = mint321;
L849:          goto L191;
============ END FUNCTION DropInventorySlotStack ==============





============ BEGIN FUNCTION GetWarningVisibility ==============
L0:            bool mbool = KismetSystemLibrary->IsValid(buildableResourceExtractor);
L51:           if (!mbool) goto L368;
L65:           bool mbool1 = buildableResourceExtractor->HasPower();
L111:          bool mbool2 = !mbool1;
L140:          bool mbool3 = buildableResourceExtractor->IsProductionPaused();
L182:          bool mbool4 = mbool3 || mbool2;
L220:          uint8 Temp_byte_Variable = 0;
L240:          bool Temp_bool_Variable = mbool4;
L259:          uint8 Temp_byte_Variable1 = 1;
L279:          this->mWarningWidget->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
});
============ END FUNCTION GetWarningVisibility ==============





============ BEGIN FUNCTION UpdateOutputInfo ==============
L0:            TScriptInterface<FGExtractableResourceInterface> mTScriptInterfaceFGExtractableResourceInterface = this->mResourceExtractor->GetExtractableResource();
L50:           TSubclassOf<FGResourceDescriptor> mTSubclassOfFGResourceDescriptor = GetInterfaceUObject(mTScriptInterfaceFGExtractableResourceInterface)->GetResourceClass();
L97:           FText mFText = FGItemDescriptor->GetItemName(mTSubclassOfFGResourceDescriptor);
L156:          this->Widget_ManufacturingOutput_Slot->mRecipeName->SetText(mFText);
============ END FUNCTION UpdateOutputInfo ==============





============ BEGIN FUNCTION UpdateExtractorStats ==============
L0:            bool mbool = KismetSystemLibrary->IsValid(this->mResourceExtractor);
L51:           if (!mbool) goto L2129;
L65:           int32 mint32 = this->mResourceExtractor->GetNumExtractedItemsPerCycle();
L115:          float mfloat = Conv_IntToFloat(mint32);
L152:          Build_WaterPump* mBuild_WaterPump = Cast<BlueprintGeneratedClass /Game/FactoryGame/Buildable/Factory/WaterPump/Build_WaterPump.Build_WaterPump_C>(this->mResourceExtractor);
L188:          bool mbool1 = mBuild_WaterPump;
L217:          float mfloat1 = mfloat / 1000;
L259:          bool Temp_bool_Variable = mbool1;
L278:          float mfloat2 = mfloat1 * 60;
L320:          float mfloat3 = this->mResourceExtractor->GetProductionCycleTime();
L374:          FText mFText = KismetTextLibrary->Conv_FloatToText(mfloat2, 0, false, true, 1, 324, 0, 1);
L457:          float mfloat4 = 60 / mfloat3;
L499:          mFormatArgumentData.ArgumentName = "value";
L533:          mFormatArgumentData.ArgumentValueType = 4;
L562:          mFormatArgumentData.ArgumentValue = mFText;
L598:          mFormatArgumentData.ArgumentValueInt = 0;
L630:          mFormatArgumentData.ArgumentValueFloat = 0;
L662:          mFormatArgumentData.ArgumentValueGender = 0;
L691:          float mfloat5 = mint32 * mfloat4;
L737:          TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData];
L757:          FText mFText1 = KismetTextLibrary->Conv_FloatToText(mfloat5, 0, false, true, 1, 324, 1, 1);
L840:          FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L960:          this->Widget_ManufacturingOutput_Slot->mNumPerSecond->SetText(switch (Temp_bool_Variable) {
case false -> mFText1;
case true -> mFText2;
default -> mFText3;
});
L1071:         float mfloat6 = this->mResourceExtractor->GetProductivity();
L1121:         this->Widget_ManufacturingOutput_Slot->mEfficiency->mManufacturingStat = mfloat6;
L1192:         float mfloat7 = this->mResourceExtractor->GetProductionCycleTime();
L1246:         FText mFText4 = KismetTextLibrary->Conv_FloatToText(mfloat7, 0, false, true, 1, 324, 1, 1);
L1329:         FString mFString = KismetTextLibrary->Conv_TextToString([ref] mFText4);
L1388:         float mfloat8 = KismetStringLibrary->Conv_StringToFloat(mFString);
L1447:         this->Widget_ManufacturingOutput_Slot->mCycleTime->mManufacturingStat = mfloat8;
L1518:         float mfloat9 = this->mResourceExtractor->GetProducingPowerConsumption();
L1568:         FText mFText5 = KismetTextLibrary->Conv_FloatToText(mfloat9, 0, false, true, 1, 324, 1, 1);
L1651:         FString mFString1 = KismetTextLibrary->Conv_TextToString([ref] mFText5);
L1710:         float mfloat10 = KismetStringLibrary->Conv_StringToFloat(mFString1);
L1769:         this->Widget_ManufacturingOutput_Slot->mPowerConsumption->mManufacturingStat = mfloat10;
L1840:         float mfloat11 = this->mResourceExtractor->GetProductivity();
L1890:         bool mbool2 = mfloat11 > 0;
L1924:         if (!mbool2) goto L2084;
L1938:         mfloat11 = this->mResourceExtractor->GetProductivity();
L1988:         float mfloat12 = 0.20000000298023224 / mfloat11;
L2030:         this->Widget_Turbine->mSpeed = mfloat12;
L2079:         // <End Inlined EventGraph Function>;
L2084:         this->Widget_Turbine->mSpeed = 0;
============ END FUNCTION UpdateExtractorStats ==============





============ BEGIN FUNCTION UpdateExtractorProgress ==============
L0:            bool mbool = KismetSystemLibrary->IsValid(this->mResourceExtractor);
L51:           if (!mbool) goto L1233;
L65:           float mfloat = this->mResourceExtractor->GetProductionProgress();
L119:          this->Widget_ManufacturingOutput_Slot->mProgressBar->mProgressBar->SetPercent(mfloat);
L204:          float mfloat1 = this->mResourceExtractor->GetProductionProgress();
L258:          float mfloat2 = mfloat1 * 10;
L300:          int32 mint32 = FTrunc(mfloat2);
L337:          int32 mint321 = mint32 * 10;
L379:          FText mFText = KismetTextLibrary->Conv_IntToText(mint321, false, false, 1, 324);
L450:          mFormatArgumentData.ArgumentName = "A";
L480:          mFormatArgumentData.ArgumentValueType = 4;
L509:          mFormatArgumentData.ArgumentValue = mFText;
L545:          mFormatArgumentData.ArgumentValueInt = 0;
L577:          mFormatArgumentData.ArgumentValueFloat = 0;
L609:          mFormatArgumentData.ArgumentValueGender = 0;
L638:          TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData];
L658:          FText mFText1 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L761:          this->Widget_ManufacturingOutput_Slot->mPercentageText->SetText(mFText1);
L828:          bool mbool1 = this->mResourceExtractor->IsProductionPaused();
L870:          bool mbool2 = this->mResourceExtractor->HasPower();
L916:          HUDHelpers->GetFactoryGameLightGray(this, [ref] mSlateColor, [ref] mLinearColor);
L971:          bool mbool3 = !mbool2;
L1000:         HUDHelpers->GetFactoryGameDarkGray(this, [ref] mSlateColor1, [ref] mLinearColor1);
L1055:         bool mbool4 = mbool3 || mbool1;
L1093:         LinearColor mLinearColor2 = SelectColor(mLinearColor, mLinearColor1, mbool4);
L1148:         this->Widget_ManufacturingOutput_Slot->mProgressBar->mProgressBar->SetFillColorAndOpacity(mLinearColor2);
============ END FUNCTION UpdateExtractorProgress ==============





============ BEGIN FUNCTION GetOverclockWidgetVisibility ==============
L0:            uint8 Temp_byte_Variable = 4;
L20:           uint8 Temp_byte_Variable1 = 1;
L40:           PlayerController* mPlayerController = this->GetOwningPlayer();
L64:           FGUnlockSubsystem* mFGUnlockSubsystem = FGUnlockSubsystem->Get(mPlayerController);
L115:          bool mbool = mFGUnlockSubsystem->GetIsBuildingOverclockUnlocked();
L157:          bool Temp_bool_Variable = mbool;
L176:          uint8 ReturnValue = switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
};
============ END FUNCTION GetOverclockWidgetVisibility ==============





============ BEGIN FUNCTION Init ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Init;
L0:            // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2031;
============ END FUNCTION Init ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L1184;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION Tick ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: Tick;
L36:           // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2036;
============ END FUNCTION Tick ==============





============ BEGIN FUNCTION BndEvt__Widget_StandbyButton_K2Node_ComponentBoundEvent_0_OnStandbyClicked__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__Widget_StandbyButton_K2Node_ComponentBoundEvent_0_OnStandbyClicked__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2093;
============ END FUNCTION BndEvt__Widget_StandbyButton_K2Node_ComponentBoundEvent_0_OnStandbyClicked__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__Widget_Window_DarkMode_K2Node_ComponentBoundEvent_2_OnClose__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__Widget_Window_DarkMode_K2Node_ComponentBoundEvent_2_OnClose__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2098;
============ END FUNCTION BndEvt__Widget_Window_DarkMode_K2Node_ComponentBoundEvent_2_OnClose__DelegateSignature ==============





============ BEGIN FUNCTION Destruct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Destruct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2103;
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION OnStandbyHasChanged ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnStandbyHasChanged;
L18:           // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2170;
============ END FUNCTION OnStandbyHasChanged ==============





============ BEGIN FUNCTION SetupOutputSlots ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: SetupOutputSlots;
L18:           // Implementation: Function ExecuteUbergraph_Widget_ResourceExtractorUI, from label L2239;
============ END FUNCTION SetupOutputSlots ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_ResourceExtractorUI ==============
L5:            goto ComputedJump(EntryPoint);
L15:           this->Init();
L25:           this->mWarningWidget->mResourceExtractor = this->mResourceExtractor;
L66:           mFScriptDelegate->BindUFunction(this, SetupOutputSlots);
L89:           this->mResourceExtractor->OnReplicationDetailActorCreatedEvent.AddUnique(mFScriptDelegate);
L130:          FGInventoryComponent* mFGInventoryComponent = this->mResourceExtractor->GetOutputInventory();
L172:          mOutputSlotData_Struct.Title_3_16865392480E04744923368E818FDF9E = "[object Object]";
L245:          mOutputSlotData_Struct.InventoryComponent_6_670B318B4DE9249E98B040BFD46013A9 = mFGInventoryComponent;
L273:          mOutputSlotData_Struct.InventorySlotIndex_10_ECF91A0C4E759F6F2FC3768CE0512AB9 = 0;
L305:          TArray<OutputSlotData_Struct> mTArrayOutputSlotData_Struct = [mOutputSlotData_Struct];
L325:          this->Widget_ManufacturingOutput_Slot->GenerateOutputSlots([ref] mTArrayOutputSlotData_Struct);
L370:          this->Widget_ManufacturingOutput_Slot->GetSlot(0, [ref] mWidget_InventorySlot, [ref] mbool);
L429:          this->NewOutputSlot = mWidget_InventorySlot;
L448:          this->Widget_Overclock->mBuildableFactory = this->mResourceExtractor;
L489:          bool mbool1 = this->mResourceExtractor->IsProductionPaused();
L531:          this->Widget_StandbyButton->SetStandbyButtonBrush(mbool1);
L576:          this->GetWarningVisibility(this->mResourceExtractor);
L599:          mFScriptDelegate1->BindUFunction(this, OnInventorySlotStackMove);
L622:          this->NewOutputSlot->OnMoveStack.AddUnique(mFScriptDelegate1);
L663:          this->Widget_Overclock->GetUnlockedOverclockSlots([ref] mTArrayWidget_InventorySlot);
L708:          int32 Temp_int_Loop_Counter_Variable = 0;
L731:          int32 Temp_int_Array_Index_Variable = 0;
L754:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayWidget_InventorySlot);
L813:          bool mbool2 = Temp_int_Loop_Counter_Variable < mint32;
L851:          if (!mbool2) goto ExecutionFlow.Pop();
L861:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L888:          ExecutionFlow.Push(L1081);
L893:          KismetArrayLibrary->Array_Get([ref] mTArrayWidget_InventorySlot, Temp_int_Array_Index_Variable, [ref] mWidget_InventorySlot1);
L952:          mFScriptDelegate2->BindUFunction(this, OnInventorySlotStackMove);
L975:          mWidget_InventorySlot1->OnMoveStack.AddUnique(mFScriptDelegate2);
L1016:         mFScriptDelegate3->BindUFunction(this, OnStandbyHasChanged);
L1039:         this->mResourceExtractor->mOnHasStandbyChanged.AddUnique(mFScriptDelegate3);
L1080:         goto ExecutionFlow.Pop();
L1081:         int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L1123:         Temp_int_Loop_Counter_Variable = mint321;
L1150:         goto L754;
L1155:         this->OnEscapePressed();
L1183:         goto ExecutionFlow.Pop();
L1184:         this->Construct();
L1194:         this->Widget_Window_DarkMode->SetTitle("[object Object]");
L1275:         FGBuildableResourceExtractor* mFGBuildableResourceExtractor = Cast<Class /Script/FactoryGame.FGBuildableResourceExtractor>(this->mInteractObject);
L1311:         bool mbool3 = mFGBuildableResourceExtractor;
L1340:         if (!mbool3) goto ExecutionFlow.Pop();
L1350:         this->mResourceExtractor = mFGBuildableResourceExtractor;
L1369:         this->UpdateOutputInfo();
L1383:         int32 mint322 = KismetArrayLibrary->Array_Add([ref] this->Widget_InventorySlot_DropArea->mInventorySlots, [ref] this->NewOutputSlot);
L1473:         TScriptInterface<FGExtractableResourceInterface> mTScriptInterfaceFGExtractableResourceInterface = this->mResourceExtractor->GetExtractableResource();
L1523:         TSubclassOf<FGResourceDescriptor> mTSubclassOfFGResourceDescriptor = GetInterfaceUObject(mTScriptInterfaceFGExtractableResourceInterface)->GetResourceClass();
L1570:         const TArray<TSubclassOf<FGItemDescriptor>> mconst TArrayTSubclassOfFGItemDescriptor = [mTSubclassOfFGResourceDescriptor, ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Resource/Environment/Crystal/Desc_CrystalShard.Desc_CrystalShard_C)];
L1599:         this->Widget_Window_DarkMode->SetupRelevantInventory([ref] mconst TArrayTSubclassOfFGItemDescriptor);
L1644:         goto ExecutionFlow.Pop();
L1645:         PlayerController* mPlayerController = this->GetOwningPlayer();
L1669:         BP_PlayerController* mBP_PlayerController = Cast<BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_PlayerController.BP_PlayerController_C>(mPlayerController);
L1705:         bool mbool4 = mBP_PlayerController;
L1734:         if (!mbool4) goto ExecutionFlow.Pop();
L1744:         BP_RemoteCallObject* mBP_RemoteCallObject = mBP_PlayerController->GetRemoteCallObjectOfClass(ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_RemoteCallObject.BP_RemoteCallObject_C));
L1795:         bool mbool5 = this->mResourceExtractor->IsProductionPaused();
L1837:         bool mbool6 = !mbool5;
L1866:         mBP_RemoteCallObject->Server_SetIsProductionPausedOnFactory(this->mResourceExtractor, mbool6);
L1920:         mbool5 = this->mResourceExtractor->IsProductionPaused();
L1962:         this->Widget_StandbyButton->SetStandbyButtonBrush(mbool5);
L2007:         this->GetWarningVisibility(this->mResourceExtractor);
L2030:         goto ExecutionFlow.Pop();
L2031:         goto L15;
L2036:         this->Tick(mGeometry, mfloat);
L2064:         this->UpdateExtractorProgress();
L2078:         this->UpdateExtractorStats();
L2092:         goto ExecutionFlow.Pop();
L2093:         // <Begin Inlined EventGraph Function BndEvt__Widget_StandbyButton_K2Node_ComponentBoundEvent_0_OnStandbyClicked__DelegateSignature>;
L2093:         goto L1645;
L2098:         // <Begin Inlined EventGraph Function BndEvt__Widget_Window_DarkMode_K2Node_ComponentBoundEvent_2_OnClose__DelegateSignature>;
L2098:         goto L1155;
L2103:         this->Destruct();
L2113:         KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mCheckOreTimer);
L2155:         this->CleanUpBindings();
L2169:         goto ExecutionFlow.Pop();
L2170:         this->Widget_StandbyButton->SetStandbyButtonBrush(mbool7);
L2215:         this->GetWarningVisibility(this->mResourceExtractor);
L2238:         goto ExecutionFlow.Pop();
L2239:         FGInventoryComponent* mFGInventoryComponent1 = this->mResourceExtractor->GetOutputInventory();
L2281:         mOutputSlotData_Struct1.Title_3_16865392480E04744923368E818FDF9E = "[object Object]";
L2354:         mOutputSlotData_Struct1.InventoryComponent_6_670B318B4DE9249E98B040BFD46013A9 = mFGInventoryComponent1;
L2382:         mOutputSlotData_Struct1.InventorySlotIndex_10_ECF91A0C4E759F6F2FC3768CE0512AB9 = 0;
L2414:         TArray<OutputSlotData_Struct> mTArrayOutputSlotData_Struct1 = [mOutputSlotData_Struct1];
L2434:         this->Widget_ManufacturingOutput_Slot->GenerateOutputSlots([ref] mTArrayOutputSlotData_Struct1);
L2479:         goto ExecutionFlow.Pop();
============ END FUNCTION ExecuteUbergraph_Widget_ResourceExtractorUI ==============
