########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/InGame/InventoryAddNotification/Widget_ItemNotification.Widget_ItemNotification_C
########################





============ BEGIN FUNCTION GetTotalNumItemsInPlayerInventory ==============
L0:            int32 mint32 = this->mInventory->GetNumItems(this->mItemClass);
L59:           mFormatArgumentData.ArgumentName = "X";
L89:           mFormatArgumentData.ArgumentValueType = 0;
L118:          mFormatArgumentData.ArgumentValue = ;
L147:          mFormatArgumentData.ArgumentValueInt = mint32;
L183:          mFormatArgumentData.ArgumentValueFloat = 0;
L215:          mFormatArgumentData.ArgumentValueGender = 0;
L244:          TArray<FormatArgumentData> mTArray<FormatArgumentData> = [mFormatArgumentData];
L264:          FText mFText = KismetTextLibrary->Format("[object Object]", mTArray<FormatArgumentData>);
L368:          this->mNumItemsInInventoryText->SetText(mFText);
============ END FUNCTION GetTotalNumItemsInPlayerInventory ==============





============ BEGIN FUNCTION GetNumItemsPickedUp ==============
L0:            FText mFText = KismetTextLibrary->Conv_IntToText(this->mNumItems, false, true, 1, 324);
L71:           mFormatArgumentData.ArgumentName = "A";
L101:          mFormatArgumentData.ArgumentValueType = 4;
L130:          mFormatArgumentData.ArgumentValue = mFText;
L166:          mFormatArgumentData.ArgumentValueInt = 0;
L198:          mFormatArgumentData.ArgumentValueFloat = 0;
L230:          mFormatArgumentData.ArgumentValueGender = 0;
L259:          TArray<FormatArgumentData> mTArray<FormatArgumentData> = [mFormatArgumentData];
L279:          FText mFText1 = KismetTextLibrary->Format("[object Object]", mTArray<FormatArgumentData>);
L382:          this->mNumItemsPickedUpText->SetText(mFText1);
============ END FUNCTION GetNumItemsPickedUp ==============





============ BEGIN FUNCTION AddToNumItems ==============
L0:            int32 mint32 = Add_IntInt(NumItems, this->mNumItems);
L46:           this->mNumItems = mint32;
============ END FUNCTION AddToNumItems ==============





============ BEGIN FUNCTION Construct ==============
L0:            this->ExecuteUbergraph_Widget_ItemNotification(350);
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION Destruct ==============
L0:            this->ExecuteUbergraph_Widget_ItemNotification(355);
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION UpdatePickUpAmount ==============
L0:            this->ExecuteUbergraph_Widget_ItemNotification(402);
============ END FUNCTION UpdatePickUpAmount ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_ItemNotification ==============
L10:           UMGSequencePlayer* mUMGSequencePlayer = this->PlayAnimation(this->ConstructAnim, 0, 1, 0, 1);
L56:           mFScriptDelegate->BindUFunction(this, UpdatePickUpAmount);
L79:           TimerHandle mTimerHandle = KismetSystemLibrary->K2_SetTimerDelegate(mFScriptDelegate, 0.10000000149011612, true);
L144:          this->mPickupTimer = mTimerHandle;
L171:          <End of Inlined Event Graph Function>;
L176:          bool mbool = KismetSystemLibrary->IsValidClass(this->mItemClass);
L227:          if (!mbool) goto L430;
L241:          FText mFText = FGItemDescriptor->GetItemName(this->mItemClass);
L300:          this->mItemNameText->SetText(mFText);
L345:          goto L10;
L350:          goto L176;
L355:          KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mPickupTimer);
L397:          <End of Inlined Event Graph Function>;
L402:          this->GetNumItemsPickedUp();
L416:          this->GetTotalNumItemsInPlayerInventory();
============ END FUNCTION ExecuteUbergraph_Widget_ItemNotification ==============
