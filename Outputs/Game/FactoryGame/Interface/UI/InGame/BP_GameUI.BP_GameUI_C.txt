########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/InGame/BP_GameUI.BP_GameUI_C
########################





============ BEGIN FUNCTION GetEquipmentHUDParent ==============
L0:            bool mbool = slotType != 0;
L31:           if (!mbool) goto L140;
L45:           mbool = slotType != 1;
L76:           if (!mbool) goto L140;
L90:           mbool = slotType != 2;
L121:          if (!mbool) goto L164;
L135:          // <End Inlined EventGraph Function>;
L140:          Overlay* overlayParent = this->mHandSlotOverlay;
L159:          // <End Inlined EventGraph Function>;
L164:          overlayParent = this->mBodySlotOverlay;
============ END FUNCTION GetEquipmentHUDParent ==============





============ BEGIN FUNCTION FindWidgetToPop ==============
L0:            ExecutionFlow.Push(L294);
L5:            TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L33:           int32 mint32 = KismetArrayLibrary->Array_LastIndex([ref] mTArrayFGInteractWidget);
L92:           int32 index = mint32;
L119:          bool mbool = index >= 0;
L153:          if (!mbool) goto L283;
L167:          ExecutionFlow.Push(L119);
L172:          TArray<FGInteractWidget*> mTArrayFGInteractWidget1 = this->GetInteractWidgetStack();
L200:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget1, index, [ref] mFGInteractWidget);
L259:          FGInteractWidget* Widget = mFGInteractWidget;
L278:          // <End Inlined EventGraph Function>;
L283:          Widget = nullptr;
============ END FUNCTION FindWidgetToPop ==============





============ BEGIN FUNCTION GetMessageBox ==============
L0:            VerticalBox* messageBox = this->mMessageBox;
============ END FUNCTION GetMessageBox ==============





============ BEGIN FUNCTION GetShoppingList ==============
L0:            Widget_ShoppingList* shoppingList = this->Widget_ShoppingList_134;
============ END FUNCTION GetShoppingList ==============





============ BEGIN FUNCTION ShouldShowAutoSaveNotification ==============
L0:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L42:           bool mbool = mFGGameUserSettings->GetBoolOptionValue("FG.EnableAutoSaveNotifications");
L116:          bool ReturnValue = mbool;
============ END FUNCTION ShouldShowAutoSaveNotification ==============





============ BEGIN FUNCTION PopWidget ==============
L0:            ExecutionFlow.Push(L1630);
L5:            ExecutionFlow.Push(L40);
L10:           bool mbool = this->PopWidget(WidgetToRemove);
L39:           goto ExecutionFlow.Pop();
L40:           this->PrePopWidget(WidgetToRemove);
L63:           bool mbool1 = KismetSystemLibrary->IsValid(WidgetToRemove);
L114:          if (!mbool1) goto L1063;
L128:          FGInteractWidget* WidgetToPop = WidgetToRemove;
L147:          bool Temp_bool_True_if_break_was_hit_Variable = false;
L158:          int32 Temp_int_Loop_Counter_Variable = 0;
L181:          int32 Temp_int_Array_Index_Variable = 0;
L204:          bool mbool2 = !Temp_bool_True_if_break_was_hit_Variable;
L233:          TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L261:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget);
L320:          bool mbool3 = Temp_int_Loop_Counter_Variable < mint32;
L358:          bool mbool4 = mbool2 && mbool3;
L396:          if (!mbool4) goto L1171;
L410:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L437:          ExecutionFlow.Push(L1556);
L442:          mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L470:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget, Temp_int_Array_Index_Variable, [ref] mFGInteractWidget);
L529:          bool mbool5 = WidgetToPop == mFGInteractWidget;
L567:          if (!mbool5) goto ExecutionFlow.Pop();
L577:          bool didPop = true;
L588:          mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L616:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget, Temp_int_Array_Index_Variable, [ref] mFGInteractWidget);
L675:          bool mbool6 = this->mCenterWidgetBox->RemoveChild(mFGInteractWidget);
L726:          mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L754:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget, Temp_int_Array_Index_Variable, [ref] mFGInteractWidget);
L813:          Widget_UseableBase* mWidget_UseableBase = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_UseableBase.Widget_UseableBase_C>(mFGInteractWidget);
L849:          bool mbool7 = mWidget_UseableBase;
L878:          if (!mbool7) goto L956;
L892:          mFScriptDelegate->BindUFunction(this, OnInventorySlotStackMove);
L915:          mWidget_UseableBase->InventorySlotStackMoveEvent.Remove(mFScriptDelegate);
L956:          mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L984:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget, Temp_int_Array_Index_Variable, [ref] mFGInteractWidget);
L1043:         this->RemoveInteractWidget(mFGInteractWidget);
L1062:         goto ExecutionFlow.Pop();
L1063:         this->FindWidgetToPop([ref] mFGInteractWidget1);
L1086:         WidgetToPop = mFGInteractWidget1;
L1105:         bool mbool8 = KismetSystemLibrary->IsValid(WidgetToPop);
L1156:         if (!mbool8) goto ExecutionFlow.Pop();
L1166:         goto L147;
L1171:         TArray<FGInteractWidget*> mTArrayFGInteractWidget1 = this->GetInteractWidgetStack();
L1199:         int32 mint321 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget1);
L1258:         bool mbool9 = mint321 == 0;
L1292:         if (!mbool9) goto L1335;
L1306:         this->ResetInput();
L1320:         this->UpdateHUDVisibility();
L1334:         goto ExecutionFlow.Pop();
L1335:         if (!didPop) goto ExecutionFlow.Pop();
L1345:         TArray<FGInteractWidget*> mTArrayFGInteractWidget2 = this->GetInteractWidgetStack();
L1373:         TArray<FGInteractWidget*> mTArrayFGInteractWidget3 = this->GetInteractWidgetStack();
L1401:         int32 mint322 = KismetArrayLibrary->Array_LastIndex([ref] mTArrayFGInteractWidget3);
L1460:         KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget2, mint322, [ref] mFGInteractWidget2);
L1519:         mFGInteractWidget2->SetInputMode();
L1555:         goto ExecutionFlow.Pop();
L1556:         int32 mint323 = Temp_int_Loop_Counter_Variable + 1;
L1598:         Temp_int_Loop_Counter_Variable = mint323;
L1625:         goto L204;
============ END FUNCTION PopWidget ==============





============ BEGIN FUNCTION OnPreviewKeyDown ==============
L0:            Key mKey = KismetInputLibrary->GetKey([ref] InKeyEvent);
L59:           bool mbool = KismetInputLibrary->EqualEqual_KeyKey(mKey, ScriptStruct /Script/InputCore.Key(KeyName = "Enter"));
L137:          FGAudioMessage* mFGAudioMessage = this->GetCurrentAudioMessage();
L157:          bool mbool1 = KismetSystemLibrary->IsValid(mFGAudioMessage);
L208:          bool mbool2 = mbool && mbool1;
L246:          if (!mbool2) goto L394;
L260:          FGAudioMessage* mFGAudioMessage1 = this->GetCurrentAudioMessage();
L280:          mFGAudioMessage1->CancelPlayback();
L312:          EventReply mEventReply = WidgetBlueprintLibrary->Handled();
L362:          EventReply ReturnValue = mEventReply;
L389:          goto L471;
L394:          EventReply mEventReply1 = WidgetBlueprintLibrary->Unhandled();
L444:          ReturnValue = mEventReply1;
============ END FUNCTION OnPreviewKeyDown ==============





============ BEGIN FUNCTION SetVersionLabelPosition ==============
L0:            Vector2D Temp_struct_Variable = ScriptStruct /Script/CoreUObject.Vector2D(X = 32, Y = 32);
L42:           Vector2D Temp_struct_Variable1 = ScriptStruct /Script/CoreUObject.Vector2D(X = 160, Y = 32);
L84:           uint8 muint8 = FGVersionFunctionLibrary->GetGameVersion();
L134:          bool mbool = muint8 == 0;
L165:          bool Temp_bool_Variable = mbool;
L184:          this->mVersionLabel->SetRenderTranslation(switch (Temp_bool_Variable) {
case false -> Temp_struct_Variable1;
case true -> Temp_struct_Variable;
default -> mVector2D;
});
============ END FUNCTION SetVersionLabelPosition ==============





============ BEGIN FUNCTION GetExperimentalVisibility ==============
L0:            uint8 Temp_byte_Variable = 3;
L20:           uint8 Temp_byte_Variable1 = 1;
L40:           uint8 muint8 = FGVersionFunctionLibrary->GetGameVersion();
L90:           bool mbool = muint8 == 1;
L121:          bool Temp_bool_Variable = mbool;
L140:          this->mExperimentalBuildLabel->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint81;
});
============ END FUNCTION GetExperimentalVisibility ==============





============ BEGIN FUNCTION GetChildUIVisibility ==============
L0:            this->GetFGHUD([ref] mFGHUD);
L23:           bool mbool = mFGHUD->GetPartialPumpiMode();
L65:           if (!mbool) goto L104;
L79:           uint8 ReturnValue = 2;
L99:           goto L124;
L104:          ReturnValue = 4;
============ END FUNCTION GetChildUIVisibility ==============





============ BEGIN FUNCTION PrePopWidget ==============
L0:            ExecutionFlow.Push(L429);
L5:            ExecutionFlow.Push(L212);
L10:           PlayerController* mPlayerController = this->GetOwningPlayer();
L34:           FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController);
L70:           bool mbool = mFGPlayerController;
L99:           if (!mbool) goto ExecutionFlow.Pop();
L109:          TSubclassOf<FGInteractWidget> mTSubclassOfFGInteractWidget = GameplayStatics->GetObjectClass(WidgetBeingRemoved);
L160:          mFGPlayerController->OnToggleInteractionUI->ProcessMulticastDelegate(false, mTSubclassOfFGInteractWidget);
L211:          goto ExecutionFlow.Pop();
L212:          Widget_PlayerInventory* mWidget_PlayerInventory = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Character/Player/Widget_PlayerInventory.Widget_PlayerInventory_C>(WidgetBeingRemoved);
L248:          bool mbool1 = mWidget_PlayerInventory;
L277:          if (!mbool1) goto ExecutionFlow.Pop();
L287:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L311:          FGPlayerController* mFGPlayerController1 = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController1);
L347:          bool mbool2 = mFGPlayerController1;
L376:          if (!mbool2) goto ExecutionFlow.Pop();
L386:          mFGPlayerController1->OnToggleInventory->ProcessMulticastDelegate(false);
L428:          goto ExecutionFlow.Pop();
============ END FUNCTION PrePopWidget ==============





============ BEGIN FUNCTION ShowTutorialHint ==============
L0:            bool mbool = this->mTutorialInfoSlot->HasAnyChildren();
L42:           if (!mbool) goto L92;
L56:           this->mTutorialInfoSlot->ClearChildren();
L92:           bool mbool1 = this->mCachedTutorialHintData.ID == 13;
L132:          if (!mbool1) goto L151;
L146:          // <End Inlined EventGraph Function>;
L151:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] this->mCachedTutorialHintData.HintTexts);
L219:          bool mbool2 = mint32 >= 1;
L253:          bool mbool3 = KismetTextLibrary->TextIsEmpty([ref] this->mCachedTutorialHintData.Title);
L313:          bool mbool4 = !mbool3;
L342:          bool mbool5 = mbool4 || mbool2;
L380:          if (!mbool5) goto L674;
L394:          PlayerController* mPlayerController = this->GetOwningPlayer();
L418:          Widget_TutorialInfo* mWidget_TutorialInfo = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_TutorialInfo.Widget_TutorialInfo_C), mPlayerController);
L479:          KismetSystemLibrary->SetTextPropertyByName(mWidget_TutorialInfo, "mTitle", [ref] this->mCachedTutorialHintData.Title);
L551:          KismetArrayLibrary->SetArrayPropertyByName(mWidget_TutorialInfo, "mHints", [ref] this->mCachedTutorialHintData.HintTexts);
L623:          PanelSlot* mPanelSlot = this->mTutorialInfoSlot->AddChild(mWidget_TutorialInfo);
============ END FUNCTION ShowTutorialHint ==============





============ BEGIN FUNCTION GetFGHUD ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           HUD* mHUD = mPlayerController->GetHUD();
L66:           FGHUD* mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L102:          bool mbool = mFGHUD;
L131:          if (!mbool) goto L169;
L145:          FGHUD* HUD = mFGHUD;
L164:          // <End Inlined EventGraph Function>;
L169:          mPlayerController = this->GetOwningPlayer();
L193:          BP_DebugCameraController* mBP_DebugCameraController = Cast<BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_DebugCameraController.BP_DebugCameraController_C>(mPlayerController);
L229:          bool mbool1 = mBP_DebugCameraController;
L258:          if (!mbool1) goto L318;
L272:          HUD = mBP_DebugCameraController->mOriginalHUD;
L313:          // <End Inlined EventGraph Function>;
L318:          KismetSystemLibrary->PrintString(this, "Cast failed to FGHUD", true, true, ScriptStruct /Script/CoreUObject.LinearColor(R = 0, G = 0.6600000262260437, B = 1, A = 1), 2);
L414:          HUD = nullptr;
============ END FUNCTION GetFGHUD ==============





============ BEGIN FUNCTION SetPrototypeCameraVisibility ==============
L0:            if (!New Visibility) goto L57;
L14:           this->CameraCanvas->SetVisibility(4);
L52:           // <End Inlined EventGraph Function>;
L57:           this->CameraCanvas->SetVisibility(2);
============ END FUNCTION SetPrototypeCameraVisibility ==============





============ BEGIN FUNCTION SetPrototypeVisibility ==============
L0:            if (!NewVisibility) goto L95;
L14:           this->HUD_Overlay->SetVisibility(4);
L52:           this->StandardUI->SetVisibility(4);
L90:           // <End Inlined EventGraph Function>;
L95:           this->HUD_Overlay->SetVisibility(2);
L133:          this->StandardUI->SetVisibility(2);
============ END FUNCTION SetPrototypeVisibility ==============





============ BEGIN FUNCTION OnInventorySlotStackMove ==============
L0:            ExecutionFlow.Push(L1130);
L5:            bool mbool = InteractionDirection != 0;
L36:           if (!mbool) goto L96;
L50:           mbool = InteractionDirection != 1;
L81:           if (!mbool) goto L711;
L95:           goto ExecutionFlow.Pop();
L96:           bool Temp_bool_True_if_break_was_hit_Variable = false;
L107:          int32 Temp_int_Loop_Counter_Variable = 0;
L130:          int32 Temp_int_Array_Index_Variable = 0;
L153:          bool mbool1 = !Temp_bool_True_if_break_was_hit_Variable;
L182:          TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L210:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget);
L269:          bool mbool2 = Temp_int_Loop_Counter_Variable < mint32;
L307:          bool mbool3 = mbool1 && mbool2;
L345:          if (!mbool3) goto L629;
L359:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L386:          ExecutionFlow.Push(L1056);
L391:          mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L419:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget, Temp_int_Array_Index_Variable, [ref] mFGInteractWidget);
L478:          Widget_UseableBase* mWidget_UseableBase = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_UseableBase.Widget_UseableBase_C>(mFGInteractWidget);
L514:          bool mbool4 = mWidget_UseableBase;
L543:          if (!mbool4) goto ExecutionFlow.Pop();
L553:          mWidget_UseableBase->DropInventorySlotStack(InventorySlot, [ref] mbool5);
L607:          if (!mbool5) goto ExecutionFlow.Pop();
L617:          Temp_bool_True_if_break_was_hit_Variable = true;
L628:          goto ExecutionFlow.Pop();
L629:          Pawn* mPawn = this->GetOwningPlayerPawn();
L649:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Interface/UI/Audio/MainMenu/Play_UI_MainMenu_DialBoxDropDown.Play_UI_MainMenu_DialBoxDropDown), mPawn, true);
L710:          goto ExecutionFlow.Pop();
L711:          bool mbool6 = KismetSystemLibrary->IsValid(this->CachedPlayerInventoryAddon);
L762:          if (!mbool6) goto ExecutionFlow.Pop();
L772:          PlayerController* mPlayerController = this->GetOwningPlayer();
L796:          FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController);
L832:          bool mbool7 = mFGPlayerController;
L861:          if (!mbool7) goto ExecutionFlow.Pop();
L871:          BP_RemoteCallObject* mBP_RemoteCallObject = mFGPlayerController->GetRemoteCallObjectOfClass(ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_RemoteCallObject.BP_RemoteCallObject_C));
L922:          mBP_RemoteCallObject->Server_MoveItemIfSpace(InventorySlot->mCachedInventoryComponent, InventorySlot->mSlotIdx, this->CachedPlayerInventoryAddon->mInventoryComponent);
L1051:         goto L629;
L1056:         int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L1098:         Temp_int_Loop_Counter_Variable = mint321;
L1125:         goto L153;
============ END FUNCTION OnInventorySlotStackMove ==============





============ BEGIN FUNCTION CreateAddOnPlayerInventory ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           Widget_PlayerInventoryAddon* mWidget_PlayerInventoryAddon = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Character/Player/Widget_PlayerInventoryAddon.Widget_PlayerInventoryAddon_C), mPlayerController);
L85:           const FText Temp_text_Variable = "[object Object]";
L158:          KismetSystemLibrary->SetTextPropertyByName(mWidget_PlayerInventoryAddon, "mRelevantItemsText", [ref] Temp_text_Variable);
L221:          PanelSlot* mPanelSlot = Container->AddChild(mWidget_PlayerInventoryAddon);
L272:          mFScriptDelegate->BindUFunction(this, OnInventorySlotStackMove);
L295:          mWidget_PlayerInventoryAddon->SlotStackMoveEvent.AddUnique(mFScriptDelegate);
L336:          this->CachedPlayerInventoryAddon = mWidget_PlayerInventoryAddon;
L355:          Widget_PlayerInventoryAddon* CachedPlayerInventoryAddon = this->CachedPlayerInventoryAddon;
============ END FUNCTION CreateAddOnPlayerInventory ==============





============ BEGIN FUNCTION IsChatWindowVisible ==============
L0:            uint8 Temp_byte_Variable = 0;
L20:           uint8 Temp_byte_Variable1 = 2;
L40:           this->GetFGHUD([ref] mFGHUD);
L63:           bool mbool = mFGHUD->GetHUDVisibility();
L105:          bool mbool1 = this->mChatWindow->GetInputWindowVisibility();
L151:          this->mChatWindow->IsLastMessageFresh([ref] mbool2);
L196:          bool mbool3 = mFGHUD->GetPumpiMode();
L238:          bool mbool4 = mbool1 || mbool2;
L276:          bool mbool5 = !mbool3;
L305:          bool mbool6 = mbool5 || mbool;
L343:          bool mbool7 = mbool6 && mbool4;
L381:          bool Temp_bool_Variable = mbool7;
L400:          uint8 ReturnValue = switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
};
============ END FUNCTION IsChatWindowVisible ==============





============ BEGIN FUNCTION GetUIVisibility ==============
L0:            this->GetFGHUD([ref] mFGHUD);
L23:           bool mbool = mFGHUD->GetPumpiMode();
L65:           if (!mbool) goto L104;
L79:           uint8 ReturnValue = 2;
L99:           goto L124;
L104:          ReturnValue = 4;
============ END FUNCTION GetUIVisibility ==============





============ BEGIN FUNCTION OnKeyDown ==============
L0:            Key mKey = KismetInputLibrary->GetKey([ref] InKeyEvent);
L59:           bool mbool = KismetInputLibrary->EqualEqual_KeyKey(mKey, ScriptStruct /Script/InputCore.Key(KeyName = "Escape"));
L137:          bool mbool1 = KismetInputLibrary->EqualEqual_KeyKey(mKey, ScriptStruct /Script/InputCore.Key(KeyName = "E"));
L215:          bool mbool2 = mbool1 || mbool;
L253:          if (!mbool2) goto L666;
L267:          TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L295:          int32 mint32 = KismetArrayLibrary->Array_LastIndex([ref] mTArrayFGInteractWidget);
L354:          bool mbool3 = mint32 >= 0;
L388:          if (!mbool3) goto L743;
L402:          TArray<FGInteractWidget*> mTArrayFGInteractWidget1 = this->GetInteractWidgetStack();
L430:          int32 mint321 = KismetArrayLibrary->Array_LastIndex([ref] mTArrayFGInteractWidget1);
L489:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget1, mint321, [ref] mFGInteractWidget);
L548:          mFGInteractWidget->OnEscapePressed();
L584:          EventReply mEventReply = WidgetBlueprintLibrary->Handled();
L634:          EventReply ReturnValue = mEventReply;
L661:          goto L743;
L666:          EventReply mEventReply1 = WidgetBlueprintLibrary->Unhandled();
L716:          ReturnValue = mEventReply1;
============ END FUNCTION OnKeyDown ==============





============ BEGIN FUNCTION HUDPanelVisibility ==============
L0:            this->GetFGHUD([ref] mFGHUD);
L23:           bool mbool = mFGHUD->GetHUDVisibility();
L65:           bool mbool1 = mFGHUD->GetPumpiMode();
L107:          bool mbool2 = !mbool;
L136:          bool mbool3 = mbool1 || mbool2;
L174:          if (!mbool3) goto L213;
L188:          uint8 ReturnValue = 2;
L208:          goto L233;
L213:          ReturnValue = 3;
============ END FUNCTION HUDPanelVisibility ==============





============ BEGIN FUNCTION GetMessageNotifierVisibility ==============
L0:            this->GetFGHUD([ref] mFGHUD);
L23:           bool mbool = mFGHUD->GetPumpiMode();
L65:           bool mbool1 = this->mMessageBox->HasAnyChildren();
L107:          bool mbool2 = !mbool1;
L136:          bool mbool3 = mbool || mbool2;
L174:          if (!mbool3) goto L213;
L188:          uint8 ReturnValue = 2;
L208:          goto L233;
L213:          ReturnValue = 4;
============ END FUNCTION GetMessageNotifierVisibility ==============





============ BEGIN FUNCTION UpdateHUDVisibility ==============
L0:            this->GetFGHUD([ref] mFGHUD);
L23:           bool mbool = this->mCenterWidgetBox->HasAnyChildren();
L65:           bool mbool1 = this->PopupSlot->HasAnyChildren();
L107:          bool mbool2 = mbool1 || mbool;
L145:          bool mbool3 = !mbool2;
L174:          mFGHUD->SetHUDVisibility(mbool3);
============ END FUNCTION UpdateHUDVisibility ==============





============ BEGIN FUNCTION GetSchematicPopupVisibility ==============
L0:            uint8 Temp_byte_Variable = 2;
L20:           uint8 Temp_byte_Variable1 = 3;
L40:           this->GetFGHUD([ref] mFGHUD);
L63:           bool mbool = mFGHUD->GetPumpiMode();
L105:          bool Temp_bool_Variable = mbool;
L124:          uint8 ReturnValue = switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
};
============ END FUNCTION GetSchematicPopupVisibility ==============





============ BEGIN FUNCTION AddMessageNotification ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           Widget_MessageNotifier* mWidget_MessageNotifier = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_MessageNotifier.Widget_MessageNotifier_C), mPlayerController);
L85:           KismetSystemLibrary->SetClassPropertyByName(mWidget_MessageNotifier, "mMessage", newMessage);
L148:          VerticalBoxSlot* mVerticalBoxSlot = this->mMessageBox->AddChildToVerticalBox(mWidget_MessageNotifier);
============ END FUNCTION AddMessageNotification ==============





============ BEGIN FUNCTION GetItemDropLocation ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           mPlayerController->GetActorEyesViewPoint([ref] mVector, [ref] mRotator);
L78:           Vector mVector1 = GetForwardVector(mRotator);
L115:          Vector mVector2 = mVector1 * 250;
L157:          Vector mVector3 = mVector + mVector2;
L203:          Vector dropLocation = mVector3;
============ END FUNCTION GetItemDropLocation ==============





============ BEGIN FUNCTION OnDrop ==============
L0:            ExecutionFlow.Push(L884);
L5:            ExecutionFlow.Push(L865);
L10:           BP_DragNDropInventory* mBP_DragNDropInventory = Cast<BlueprintGeneratedClass /Game/FactoryGame/Buildable/Factory/BP_DragNDropInventory.BP_DragNDropInventory_C>(Operation);
L46:           bool mbool = mBP_DragNDropInventory;
L75:           if (!mbool) goto ExecutionFlow.Pop();
L85:           bool local_handled = true;
L96:           Widget_InventorySlot* mWidget_InventorySlot = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/InventorySlots/Widget_InventorySlot.Widget_InventorySlot_C>(mBP_DragNDropInventory->payload);
L154:          bool mbool1 = mWidget_InventorySlot;
L183:          if (!mbool1) goto ExecutionFlow.Pop();
L193:          bool mbool2 = mWidget_InventorySlot->mCachedInventoryComponent->GetStackFromIndex(mWidget_InventorySlot->mSlotIdx, [ref] mInventoryStack);
L297:          FGInventoryLibrary->BreakInventoryStack([ref] mInventoryStack, [ref] mint32, [ref] mInventoryItem);
L356:          FGInventoryLibrary->BreakInventoryItem([ref] mInventoryItem, [ref] mTSubclassOfFGItemDescriptor, [ref] mActor);
L415:          uint8 muint8 = FGItemDescriptor->GetForm(mTSubclassOfFGItemDescriptor);
L474:          bool mbool3 = muint8 == 1;
L505:          if (!mbool3) goto ExecutionFlow.Pop();
L515:          Pawn* mPawn = this->GetOwningPlayerPawn();
L535:          FGItemPickup_Spawnable->FindGroundLocationInfrontOfActor(mPawn, 230, [ref] mInventoryStack, [ref] mVector, [ref] mRotator);
L608:          PlayerController* mPlayerController = this->GetOwningPlayer();
L632:          FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController);
L668:          bool mbool4 = mFGPlayerController;
L697:          BP_RemoteCallObject* mBP_RemoteCallObject = mFGPlayerController->GetRemoteCallObjectOfClass(ObjectConst(BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_RemoteCallObject.BP_RemoteCallObject_C));
L748:          mBP_RemoteCallObject->Server_DropItemIntoStack(mWidget_InventorySlot->mCachedInventoryComponent, mWidget_InventorySlot->mSlotIdx, mVector, mRotator);
L864:          goto ExecutionFlow.Pop();
L865:          bool ReturnValue = local_handled;
============ END FUNCTION OnDrop ==============





============ BEGIN FUNCTION RefreshInputMode ==============
L0:            bool mbool = this->PopupSlot->HasAnyChildren();
L42:           if (!mbool) goto L249;
L56:           PlayerController* mPlayerController = this->GetOwningPlayer();
L80:           Widget* mWidget = this->PopupSlot->GetChildAt(0);
L127:          Widget_Popup* mWidget_Popup = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Popup.Widget_Popup_C>(mWidget);
L163:          bool mbool1 = mWidget_Popup;
L192:          WidgetBlueprintLibrary->SetInputMode_UIOnlyEx(mPlayerController, mWidget_Popup, 1);
L244:          // <End Inlined EventGraph Function>;
L249:          bool mbool2 = this->mMenuSlot->HasAnyChildren();
L291:          if (!mbool2) goto L310;
L305:          // <End Inlined EventGraph Function>;
L310:          TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L338:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget);
L397:          bool mbool3 = mint32 > 0;
L431:          if (!mbool3) goto L660;
L445:          TArray<FGInteractWidget*> mTArrayFGInteractWidget1 = this->GetInteractWidgetStack();
L473:          int32 mint321 = KismetArrayLibrary->Array_LastIndex([ref] mTArrayFGInteractWidget1);
L532:          TArray<FGInteractWidget*> mTArrayFGInteractWidget2 = this->GetInteractWidgetStack();
L560:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget2, mint321, [ref] mFGInteractWidget);
L619:          mFGInteractWidget->SetInputMode();
L655:          // <End Inlined EventGraph Function>;
L660:          this->ResetInput();
============ END FUNCTION RefreshInputMode ==============





============ BEGIN FUNCTION CreatePopupWidget ==============
L0:            TSubclassOf<Widget_Popup> mTSubclassOfWidget_Popup = ClassCast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Popup.Widget_Popup_C>(PopupData.PopupClass);
L45:           bool mbool = mTSubclassOfWidget_Popup;
L74:           if (!mbool) goto L528;
L88:           TSubclassOf<Widget_Popup> PopupClass = mTSubclassOfWidget_Popup;
L107:          this->mPopupBlur->SetBlurStrength(1);
L148:          this->mPopupModal->SetVisibility(0);
L186:          PlayerController* mPlayerController = this->GetOwningPlayer();
L210:          Widget_Popup* mWidget_Popup = WidgetBlueprintLibrary->Create(this, PopupClass, mPlayerController);
L271:          mWidget_Popup->mPopupData = PopupData;
L320:          PanelSlot* mPanelSlot = this->PopupSlot->AddChild(mWidget_Popup);
L371:          mPlayerController = this->GetOwningPlayer();
L395:          WidgetBlueprintLibrary->SetInputMode_UIOnlyEx(mPlayerController, mWidget_Popup, 0);
L447:          mPlayerController = this->GetOwningPlayer();
L471:          mPlayerController->bShowMouseCursor = true;
L504:          FGPopupWidget* ReturnValue = mWidget_Popup;
L523:          goto L552;
L528:          PopupClass = ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_Popup.Widget_Popup_C);
L547:          goto L107;
============ END FUNCTION CreatePopupWidget ==============





============ BEGIN FUNCTION GetReloadRespawnText ==============
L0:            Pawn* mPawn = this->GetOwningPlayerPawn();
L20:           FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L56:           bool mbool = mFGCharacterPlayer;
L85:           if (!mbool) goto L635;
L99:           bool mbool1 = mFGCharacterPlayer->IsAliveAndWell();
L141:          if (!mbool1) goto L660;
L155:          FGEquipment* mFGEquipment = mFGCharacterPlayer->GetEquipmentInSlot(1);
L199:          FGWeapon* mFGWeapon = Cast<Class /Script/FactoryGame.FGWeapon>(mFGEquipment);
L235:          bool mbool2 = mFGWeapon;
L264:          if (!mbool2) goto L660;
L278:          FText Temp_text_Variable1 = "[object Object]";
L348:          PlayerController* mPlayerController = this->GetOwningPlayer();
L372:          FText mFText = FGInputLibrary->FormatStringWithKeyNames(mPlayerController, "[object Object]", false);
L498:          bool mbool3 = mFGWeapon->GetIsReloading();
L540:          bool Temp_bool_Variable = mbool3;
L559:          FText ReturnValue = switch (Temp_bool_Variable) {
case false -> mFText;
case true -> Temp_text_Variable1;
default -> mFText1;
};
L630:          goto L1096;
L635:          ReturnValue = ;
L655:          goto L1096;
L660:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L684:          FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController1);
L720:          bool mbool4 = mFGPlayerController;
L749:          if (!mbool4) goto L1076;
L763:          FText Temp_text_Variable = ;
L783:          PlayerController* mPlayerController2 = this->GetOwningPlayer();
L807:          FText mFText2 = FGInputLibrary->FormatStringWithKeyNames(mPlayerController2, "[object Object]", false);
L939:          bool mbool5 = mFGPlayerController->NeedRespawn();
L981:          bool Temp_bool_Variable1 = mbool5;
L1000:         ReturnValue = switch (Temp_bool_Variable1) {
case false -> Temp_text_Variable;
case true -> mFText2;
default -> mFText3;
};
L1071:         goto L1096;
L1076:         ReturnValue = ;
============ END FUNCTION GetReloadRespawnText ==============





============ BEGIN FUNCTION GetReloadRespawnTextVisibility ==============
L0:            Pawn* mPawn = this->GetOwningPlayerPawn();
L20:           FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L56:           bool mbool = mFGCharacterPlayer;
L85:           if (!mbool) goto L616;
L99:           bool mbool1 = mFGCharacterPlayer->IsAliveAndWell();
L141:          if (!mbool1) goto L641;
L155:          FGEquipment* mFGEquipment = mFGCharacterPlayer->GetEquipmentInSlot(1);
L199:          FGWeapon* mFGWeapon = Cast<Class /Script/FactoryGame.FGWeapon>(mFGEquipment);
L235:          bool mbool2 = mFGWeapon;
L264:          if (!mbool2) goto L641;
L278:          bool mbool3 = this->mPlayerInteractionMessages->IsVisible();
L320:          bool mbool4 = !mbool3;
L349:          bool mbool5 = mFGWeapon->HasAmmunition();
L391:          bool mbool6 = mFGWeapon->CanReload();
L433:          bool mbool7 = !mbool5;
L462:          bool mbool8 = mbool7 && mbool6;
L500:          bool mbool9 = mbool8 && mbool4;
L538:          if (!mbool9) goto L1003;
L552:          uint8 muint8 = this->HUDPanelVisibility();
L584:          uint8 ReturnValue = muint8;
L611:          goto L1023;
L616:          ReturnValue = 2;
L636:          goto L1023;
L641:          PlayerController* mPlayerController = this->GetOwningPlayer();
L665:          FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController);
L701:          bool mbool10 = mFGPlayerController;
L730:          if (!mbool10) goto L978;
L744:          bool mbool11 = KismetSystemLibrary->IsValid(mFGPlayerController);
L795:          bool mbool12 = mFGPlayerController->NeedRespawn();
L837:          bool mbool13 = mbool11 && mbool12;
L875:          if (!mbool13) goto L953;
L889:          uint8 muint81 = this->HUDPanelVisibility();
L921:          ReturnValue = muint81;
L948:          goto L1023;
L953:          ReturnValue = 2;
L973:          goto L1023;
L978:          ReturnValue = 2;
L998:          goto L1023;
L1003:         ReturnValue = 2;
============ END FUNCTION GetReloadRespawnTextVisibility ==============





============ BEGIN FUNCTION PopAllWidgets_Internal ==============
L0:            ExecutionFlow.Push(L418);
L5:            TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L33:           int32 mint32 = KismetArrayLibrary->Array_LastIndex([ref] mTArrayFGInteractWidget);
L92:           int32 index = mint32;
L119:          bool mbool = index >= 0;
L153:          if (!mbool) goto L389;
L167:          ExecutionFlow.Push(L119);
L172:          TArray<FGInteractWidget*> mTArrayFGInteractWidget1 = this->GetInteractWidgetStack();
L200:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget1, index, [ref] mFGInteractWidget);
L259:          bool mbool1 = this->PopWidget(mFGInteractWidget);
L292:          int32 mint321 = index - 1;
L334:          int32 Temp_int_Variable = mint321;
L361:          index = Temp_int_Variable;
L388:          goto ExecutionFlow.Pop();
L389:          this->RefreshInputMode();
L403:          this->UpdateHUDVisibility();
L417:          goto ExecutionFlow.Pop();
============ END FUNCTION PopAllWidgets_Internal ==============





============ BEGIN FUNCTION DoesWidgetExist ==============
L0:            ExecutionFlow.Push(L514);
L5:            int32 Temp_int_Loop_Counter_Variable = 0;
L28:           int32 Temp_int_Array_Index_Variable = 0;
L51:           TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L79:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget);
L138:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L176:          if (!mbool) goto L424;
L190:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L217:          ExecutionFlow.Push(L440);
L222:          mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L250:          KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget, Temp_int_Array_Index_Variable, [ref] mFGInteractWidget);
L309:          TSubclassOf<FGInteractWidget> mTSubclassOfFGInteractWidget = GameplayStatics->GetObjectClass(mFGInteractWidget);
L360:          bool mbool1 = ClassIsChildOf(mTSubclassOfFGInteractWidget, WidgetClass);
L398:          if (!mbool1) goto ExecutionFlow.Pop();
L408:          bool doesExist = true;
L419:          // <End Inlined EventGraph Function>;
L424:          doesExist = false;
L435:          // <End Inlined EventGraph Function>;
L440:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L482:          Temp_int_Loop_Counter_Variable = mint321;
L509:          goto L51;
============ END FUNCTION DoesWidgetExist ==============





============ BEGIN FUNCTION GetPlayerInteractionVisibility ==============
L0:            Pawn* mPawn = this->GetOwningPlayerPawn();
L20:           FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L56:           bool mbool = mFGCharacterPlayer;
L85:           if (!mbool) goto L355;
L99:           mPawn = this->GetOwningPlayerPawn();
L119:          mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(mPawn);
L155:          mbool = mFGCharacterPlayer;
L184:          Actor* mActor = mFGCharacterPlayer->GetBestUsableActor();
L226:          bool mbool1 = KismetSystemLibrary->IsValid(mActor);
L277:          if (!mbool1) goto L380;
L291:          uint8 muint8 = this->HUDPanelVisibility();
L323:          uint8 ReturnValue = muint8;
L350:          goto L400;
L355:          ReturnValue = 2;
L375:          goto L400;
L380:          ReturnValue = 2;
============ END FUNCTION GetPlayerInteractionVisibility ==============





============ BEGIN FUNCTION PopAllWidgets ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PopAllWidgets;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L6020;
============ END FUNCTION PopAllWidgets ==============





============ BEGIN FUNCTION ClosePopup ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ClosePopup;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5981;
============ END FUNCTION ClosePopup ==============





============ BEGIN FUNCTION Destruct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Destruct;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L4881;
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION Play Landed Effect ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: Play Landed Effect;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L2746;
============ END FUNCTION Play Landed Effect ==============





============ BEGIN FUNCTION ReceivedMessage ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ReceivedMessage;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L1237;
============ END FUNCTION ReceivedMessage ==============





============ BEGIN FUNCTION RemoveAudioMessage ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: RemoveAudioMessage;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L1412;
============ END FUNCTION RemoveAudioMessage ==============





============ BEGIN FUNCTION AddIntroTutorialInfo ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: AddIntroTutorialInfo;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L1427;
============ END FUNCTION AddIntroTutorialInfo ==============





============ BEGIN FUNCTION UpdateTutorialInfo ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: UpdateTutorialInfo;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L1792;
============ END FUNCTION UpdateTutorialInfo ==============





============ BEGIN FUNCTION HandleFocusLost ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: HandleFocusLost;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L1820;
============ END FUNCTION HandleFocusLost ==============





============ BEGIN FUNCTION AddPawnHUD ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: AddPawnHUD;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L2626;
============ END FUNCTION AddPawnHUD ==============





============ BEGIN FUNCTION RemovePawnHUD ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: RemovePawnHUD;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L2793;
============ END FUNCTION RemovePawnHUD ==============





============ BEGIN FUNCTION AddInteractWidget ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: AddInteractWidget;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L2830;
============ END FUNCTION AddInteractWidget ==============





============ BEGIN FUNCTION OnPlayerBeginTypeMessage ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnPlayerBeginTypeMessage;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L3205;
============ END FUNCTION OnPlayerBeginTypeMessage ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L3391;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION OnChatMessageReceived ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnChatMessageReceived;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L3884;
============ END FUNCTION OnChatMessageReceived ==============





============ BEGIN FUNCTION ClearHintOnTutorialStepCompleted ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ClearHintOnTutorialStepCompleted;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L4083;
============ END FUNCTION ClearHintOnTutorialStepCompleted ==============





============ BEGIN FUNCTION ShowRespawnMessage ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShowRespawnMessage;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L4171;
============ END FUNCTION ShowRespawnMessage ==============





============ BEGIN FUNCTION OnReceiveRadiationStart ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnReceiveRadiationStart;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L4901;
============ END FUNCTION OnReceiveRadiationStart ==============





============ BEGIN FUNCTION OnReceiveRadiationStop ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnReceiveRadiationStop;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L4944;
============ END FUNCTION OnReceiveRadiationStop ==============





============ BEGIN FUNCTION OnRadiationIntensityUpdated ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: OnRadiationIntensityUpdated;
L36:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L4987;
============ END FUNCTION OnRadiationIntensityUpdated ==============





============ BEGIN FUNCTION ResetInput ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ResetInput;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5034;
============ END FUNCTION ResetInput ==============





============ BEGIN FUNCTION ForceStopRadiationUI ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ForceStopRadiationUI;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5039;
============ END FUNCTION ForceStopRadiationUI ==============





============ BEGIN FUNCTION PushWidget ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PushWidget;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5238;
============ END FUNCTION PushWidget ==============





============ BEGIN FUNCTION ShowDirectionalSubtitle ==============
L72:           // EventGraph implemented function stub;
L72:           // Function Name: ShowDirectionalSubtitle;
L72:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5343;
============ END FUNCTION ShowDirectionalSubtitle ==============





============ BEGIN FUNCTION StopSubtitle ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: StopSubtitle;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5348;
============ END FUNCTION StopSubtitle ==============





============ BEGIN FUNCTION EventUpdateHUDScaling ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: EventUpdateHUDScaling;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5394;
============ END FUNCTION EventUpdateHUDScaling ==============





============ BEGIN FUNCTION PlayAudioMessage ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PlayAudioMessage;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L5543;
============ END FUNCTION PlayAudioMessage ==============





============ BEGIN FUNCTION OnResumeGame ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnResumeGame;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L6025;
============ END FUNCTION OnResumeGame ==============





============ BEGIN FUNCTION ShowQuickSearch ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShowQuickSearch;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L6062;
============ END FUNCTION ShowQuickSearch ==============





============ BEGIN FUNCTION CreateBreakNotification ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: CreateBreakNotification;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L6100;
============ END FUNCTION CreateBreakNotification ==============





============ BEGIN FUNCTION OnInitialized ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnInitialized;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L7800;
============ END FUNCTION OnInitialized ==============





============ BEGIN FUNCTION OnAutosaveStart ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnAutosaveStart;
L18:           // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L8066;
============ END FUNCTION OnAutosaveStart ==============





============ BEGIN FUNCTION OnAutosaveFinished ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnAutosaveFinished;
L0:            // Implementation: Function ExecuteUbergraph_BP_GameUI, from label L8168;
============ END FUNCTION OnAutosaveFinished ==============





============ BEGIN FUNCTION ExecuteUbergraph_BP_GameUI ==============
L5:            goto ComputedJump(EntryPoint);
L15:           GameStateBase* mGameStateBase = GameplayStatics->GetGameState(this);
L58:           FGChatManager* mFGChatManager = FGChatManager->Get(mGameStateBase);
L109:          bool mbool = KismetSystemLibrary->IsValid(mFGChatManager);
L160:          if (!mbool) goto L369;
L174:          mGameStateBase = GameplayStatics->GetGameState(this);
L217:          mFGChatManager = FGChatManager->Get(mGameStateBase);
L268:          mFScriptDelegate->BindUFunction(this, OnChatMessageReceived);
L291:          mFGChatManager->OnChatMessageAdded.AddUnique(mFScriptDelegate);
L332:          this->mChatWindow->UpdateVisibility();
L368:          goto ExecutionFlow.Pop();
L369:          KismetSystemLibrary->Delay(this, 0.20000000298023224, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 15, UUID = -1918412098, ExecutionFunction = "ExecuteUbergraph_BP_GameUI", CallbackTarget = this));
L445:          goto ExecutionFlow.Pop();
L446:          UMGSequencePlayer* mUMGSequencePlayer = this->PlayAnimation(this->FadeAnim, 0, 1, 0, 1);
L492:          goto ExecutionFlow.Pop();
L493:          this->UpdateHUDVisibility();
L507:          goto ExecutionFlow.Pop();
L508:          PlayerController* mPlayerController = this->GetOwningPlayer();
L532:          FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController);
L568:          bool mbool1 = mFGPlayerController;
L597:          if (!mbool1) goto ExecutionFlow.Pop();
L607:          this->AddInteractWidget(mFGInteractWidget);
L630:          PanelSlot* mPanelSlot = this->mCenterWidgetBox->AddChild(mFGInteractWidget);
L681:          HorizontalBoxSlot* mHorizontalBoxSlot = Cast<Class /Script/UMG.HorizontalBoxSlot>(mPanelSlot);
L717:          bool mbool2 = mHorizontalBoxSlot;
L746:          if (!mbool2) goto ExecutionFlow.Pop();
L756:          uint8 muint8 = mFGInteractWidget->GetDesiredHorizontalAlignment();
L806:          mHorizontalBoxSlot->SetHorizontalAlignment(muint8);
L847:          uint8 muint81 = mFGInteractWidget->GetDesiredVerticalAlignment();
L897:          mHorizontalBoxSlot->SetVerticalAlignment(muint81);
L938:          SlateChildSize mSlateChildSize = mFGInteractWidget->GetDesiredAlignmentSize();
L988:          mHorizontalBoxSlot->SetSize(mSlateChildSize);
L1029:         TArray<FGInteractWidget*> mTArrayFGInteractWidget = this->GetInteractWidgetStack();
L1057:         int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget);
L1116:         bool mbool3 = mint32 == 1;
L1150:         if (!mbool3) goto ExecutionFlow.Pop();
L1160:         mFGInteractWidget->SetupDefaultFocus();
L1196:         mFGInteractWidget->SetInputMode();
L1232:         goto L493;
L1237:         TSubclassOf<FGAudioMessage> mTSubclassOfFGAudioMessage = ClassCast<Class /Script/FactoryGame.FGAudioMessage>(mTSubclassOfFGMessageBase);
L1273:         bool mbool4 = mTSubclassOfFGAudioMessage;
L1302:         if (!mbool4) goto L1340;
L1316:         this->PlayAudioMessage(mTSubclassOfFGAudioMessage);
L1339:         goto ExecutionFlow.Pop();
L1340:         this->AddMessageNotification(mTSubclassOfFGMessageBase);
L1363:         goto ExecutionFlow.Pop();
L1364:         this->mAudioMessageSlot->ClearChildren();
L1400:         this->SetCurrentAudioMessage(nullptr);
L1411:         goto ExecutionFlow.Pop();
L1412:         this->RemoveAudioMessage();
L1422:         goto L1364;
L1427:         this->UpdateTutorialInfo(mTutorialHintData);
L1450:         PlayerController* mPlayerController1 = this->GetOwningPlayer();
L1474:         FGPlayerController* mFGPlayerController1 = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController1);
L1510:         bool mbool5 = mFGPlayerController1;
L1539:         if (!mbool5) goto ExecutionFlow.Pop();
L1549:         bool mbool6 = KismetSystemLibrary->IsValidClass(mTutorialHintData.Message);
L1609:         if (!mbool6) goto ExecutionFlow.Pop();
L1619:         bool mbool7 = mFGPlayerController1->GetPlayerHasMessage(mTutorialHintData.Message);
L1679:         bool mbool8 = !mbool7;
L1708:         if (!mbool8) goto L1777;
L1722:         mFGPlayerController1->Client_AddMessage(mTutorialHintData.Message);
L1776:         goto ExecutionFlow.Pop();
L1777:         this->ShowTutorialHint();
L1791:         goto ExecutionFlow.Pop();
L1792:         this->mCachedTutorialHintData = mTutorialHintData1;
L1819:         goto ExecutionFlow.Pop();
L1820:         int32 mint321 = this->mMenuSlot->GetChildrenCount();
L1870:         bool mbool9 = mint321 > 0;
L1904:         if (!mbool9) goto L2118;
L1918:         Widget* mWidget = this->mMenuSlot->GetChildAt(0);
L1965:         BP_MenuBase* mBP_MenuBase = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/Menu/BP_MenuBase.BP_MenuBase_C>(mWidget);
L2001:         bool mbool10 = mBP_MenuBase;
L2030:         PlayerController* mPlayerController2 = this->GetOwningPlayer();
L2054:         mBP_MenuBase->mFocusWidget->SetUserFocus(mPlayerController2);
L2117:         goto ExecutionFlow.Pop();
L2118:         TArray<FGInteractWidget*> mTArrayFGInteractWidget1 = this->GetInteractWidgetStack();
L2146:         int32 mint322 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget1);
L2205:         bool mbool11 = mint322 > 0;
L2239:         if (!mbool11) goto ExecutionFlow.Pop();
L2249:         TArray<FGInteractWidget*> mTArrayFGInteractWidget2 = this->GetInteractWidgetStack();
L2277:         KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget2, 0, [ref] mFGInteractWidget1);
L2332:         Widget* mWidget1 = mFGInteractWidget1->GetDefaultFocusWidget();
L2374:         bool mbool12 = KismetSystemLibrary->IsValid(mWidget1);
L2425:         if (!mbool12) goto ExecutionFlow.Pop();
L2435:         mTArrayFGInteractWidget2 = this->GetInteractWidgetStack();
L2463:         KismetArrayLibrary->Array_Get([ref] mTArrayFGInteractWidget2, 0, [ref] mFGInteractWidget1);
L2518:         mWidget1 = mFGInteractWidget1->GetDefaultFocusWidget();
L2560:         PlayerController* mPlayerController3 = this->GetOwningPlayer();
L2584:         mWidget1->SetUserFocus(mPlayerController3);
L2625:         goto ExecutionFlow.Pop();
L2626:         OverlaySlot* mOverlaySlot = this->mPawnHUDOverlay->AddChildToOverlay(mUserWidget);
L2677:         mOverlaySlot->SetVerticalAlignment(0);
L2711:         mOverlaySlot->SetHorizontalAlignment(0);
L2745:         goto ExecutionFlow.Pop();
L2746:         UMGSequencePlayer* mUMGSequencePlayer1 = this->PlayAnimation(this->JumpLand, 0, 1, 0, 1);
L2792:         goto ExecutionFlow.Pop();
L2793:         this->mPawnHUDOverlay->ClearChildren();
L2829:         goto ExecutionFlow.Pop();
L2830:         this->AddInteractWidget(mFGInteractWidget2);
L2849:         Widget_UseableBase* mWidget_UseableBase = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_UseableBase.Widget_UseableBase_C>(mFGInteractWidget2);
L2885:         bool mbool13 = mWidget_UseableBase;
L2914:         if (!mbool13) goto ExecutionFlow.Pop();
L2924:         PlayerController* mPlayerController4 = this->GetOwningPlayer();
L2948:         FGPlayerController* mFGPlayerController2 = Cast<Class /Script/FactoryGame.FGPlayerController>(mPlayerController4);
L2984:         bool mbool14 = mFGPlayerController2;
L3013:         if (!mbool14) goto L3129;
L3027:         TSubclassOf<Widget_UseableBase> mTSubclassOfWidget_UseableBase = GameplayStatics->GetObjectClass(mWidget_UseableBase);
L3078:         mFGPlayerController2->OnToggleInteractionUI->ProcessMulticastDelegate(true, mTSubclassOfWidget_UseableBase);
L3129:         mFScriptDelegate1->BindUFunction(this, OnInventorySlotStackMove);
L3152:         mWidget_UseableBase->InventorySlotStackMoveEvent.AddUnique(mFScriptDelegate1);
L3193:         goto ExecutionFlow.Pop();
L3194:         this->PopPopupQueue();
L3204:         goto ExecutionFlow.Pop();
L3205:         // <Begin Inlined EventGraph Function OnPlayerBeginTypeMessage>;
L3205:         TArray<FGInteractWidget*> mTArrayFGInteractWidget3 = this->GetInteractWidgetStack();
L3233:         int32 mint323 = KismetArrayLibrary->Array_Length([ref] mTArrayFGInteractWidget3);
L3292:         bool mbool15 = mint323 > 0;
L3326:         if (!mbool15) goto L3354;
L3340:         this->PopAllWidgets();
L3354:         this->mChatWindow->OnPlayerBeginTypeMessage();
L3390:         goto ExecutionFlow.Pop();
L3391:         this->Construct();
L3401:         ExecutionFlow.Push(L3762);
L3406:         ExecutionFlow.Push(L3594);
L3411:         FString mFString = FGVersionFunctionLibrary->GetVersionString();
L3461:         FText mFText = KismetTextLibrary->Conv_StringToText(mFString);
L3520:         this->mVersionLabel->SetText(mFText);
L3565:         this->GetExperimentalVisibility();
L3579:         this->SetVersionLabelPosition();
L3593:         goto ExecutionFlow.Pop();
L3594:         PlayerController* mPlayerController5 = this->GetOwningPlayer();
L3618:         BP_PlayerController* mBP_PlayerController = Cast<BlueprintGeneratedClass /Game/FactoryGame/Character/Player/BP_PlayerController.BP_PlayerController_C>(mPlayerController5);
L3654:         bool mbool16 = mBP_PlayerController;
L3683:         if (!mbool16) goto ExecutionFlow.Pop();
L3693:         mFScriptDelegate2->BindUFunction(this, OnPlayerBeginTypeMessage);
L3716:         mBP_PlayerController->OnBeginTypeChat.AddUnique(mFScriptDelegate2);
L3757:         goto L15;
L3762:         FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L3804:         mFScriptDelegate3->BindUFunction(this, EventUpdateHUDScaling);
L3827:         mFGGameUserSettings->SubscribeToDynamicOptionUpdate("FG.HUDScaling", [ref] mFScriptDelegate3);
L3883:         goto ExecutionFlow.Pop();
L3884:         // <Begin Inlined EventGraph Function OnChatMessageReceived>;
L3884:         this->mChatWindow->OnChatMessageReceived();
L3920:         goto ExecutionFlow.Pop();
L3921:         this->UpdateHUDVisibility();
L3935:         goto ExecutionFlow.Pop();
L3936:         PlayerController* mPlayerController6 = this->GetOwningPlayer();
L3960:         FGVirtualCursorFunctionLibrary->DisableVirtualCursor(mPlayerController6);
L4001:         goto ExecutionFlow.Pop();
L4002:         mPlayerController6 = this->GetOwningPlayer();
L4026:         mPlayerController6->bShowMouseCursor = false;
L4059:         goto L3936;
L4064:         this->RefreshInputMode();
L4078:         goto L3921;
L4083:         this->mTutorialInfoSlot->ClearChildren();
L4119:         this->mCachedTutorialHintData = ScriptStruct /Script/FactoryGame.TutorialHintData(ID = 0, Title = , HintTexts = TextProperty /Script/FactoryGame.TutorialHintData:HintTexts.HintTexts[] {[]}, Message = nullptr);
L4170:         goto ExecutionFlow.Pop();
L4171:         // <Begin Inlined EventGraph Function ShowRespawnMessage>;
L4171:         this->mHudContainer->SetRenderOpacity(0);
L4208:         this->Widget_FicsitLogoSplash->ShowLogo();
L4244:         float mfloat = this->Widget_FicsitLogoSplash->SpawnAnim->GetEndTime();
L4316:         KismetSystemLibrary->Delay(this, mfloat, ScriptStruct /Script/Engine.LatentActionInfo(Linkage = 446, UUID = -33259864, ExecutionFunction = "ExecuteUbergraph_BP_GameUI", CallbackTarget = this));
L4396:         goto ExecutionFlow.Pop();
L4397:         Pawn* mPawn = this->GetOwningPlayerPawn();
L4417:         Controller* mController = mPawn->GetController();
L4459:         PlayerController* mPlayerController7 = Cast<Class /Script/Engine.PlayerController>(mController);
L4495:         bool mbool17 = mPlayerController7;
L4524:         if (!mbool17) goto ExecutionFlow.Pop();
L4534:         mPlayerController7->ResetIgnoreInputFlags();
L4570:         goto L4002;
L4575:         PlayerController* mPlayerController8 = this->GetOwningPlayer();
L4599:         WidgetBlueprintLibrary->SetInputMode_GameOnly(mPlayerController8);
L4640:         goto L4397;
L4645:         mPlayerController8 = this->GetOwningPlayer();
L4669:         bool mbool18 = KismetSystemLibrary->IsValid(mPlayerController8);
L4720:         if (!mbool18) goto ExecutionFlow.Pop();
L4730:         goto L4575;
L4735:         this->ResetInput();
L4749:         FGGameUserSettings* mFGGameUserSettings1 = FGGameUserSettings->GetFGGameUserSettings();
L4791:         mFGGameUserSettings1->UnsubscribeToAllDynamicOptionUpdate(this);
L4824:         goto ExecutionFlow.Pop();
L4825:         this->PopupSlot->ClearChildren();
L4861:         goto L4064;
L4866:         this->Destruct();
L4876:         goto L4735;
L4881:         goto L4866;
L4886:         this->ClosePopup();
L4900:         goto ExecutionFlow.Pop();
L4901:         this->Widget_TakeDamage->UpdateRadiation(true, 0);
L4943:         goto ExecutionFlow.Pop();
L4944:         this->Widget_TakeDamage->UpdateRadiation(false, 0);
L4986:         goto ExecutionFlow.Pop();
L4987:         this->Widget_TakeDamage->UpdateRadiation(true, mfloat1);
L5033:         goto ExecutionFlow.Pop();
L5034:         // <Begin Inlined EventGraph Function ResetInput>;
L5034:         goto L4645;
L5039:         // <Begin Inlined EventGraph Function ForceStopRadiationUI>;
L5039:         goto L4944;
L5044:         FGGameUserSettings* mFGGameUserSettings2 = FGGameUserSettings->GetFGGameUserSettings();
L5086:         bool mbool19 = mFGGameUserSettings2->GetBoolOptionValue("FG.UseDirectionalSubtitle");
L5155:         if (!mbool19) goto ExecutionFlow.Pop();
L5165:         this->Widget_DirectionalSubtitlesContainer->CreateSubtitle(mconst FText, mActor, mfloat2, mbool20);
L5237:         goto ExecutionFlow.Pop();
L5238:         goto L508;
L5243:         this->mPopupModal->SetVisibility(2);
L5281:         goto L4825;
L5286:         this->SetPopup(nullptr);
L5297:         this->mPopupBlur->SetBlurStrength(0);
L5338:         goto L5243;
L5343:         goto L5044;
L5348:         this->Widget_DirectionalSubtitlesContainer->StopSubtitle([ref] mActor1);
L5393:         goto ExecutionFlow.Pop();
L5394:         // <Begin Inlined EventGraph Function EventUpdateHUDScaling>;
L5394:         FGGameUserSettings* mFGGameUserSettings3 = FGGameUserSettings->GetFGGameUserSettings();
L5436:         float mfloat3 = mFGGameUserSettings3->GetFloatOptionValue("FG.HUDScaling");
L5501:         this->mHUDScaler->SetUserSpecifiedScale(mfloat3);
L5542:         goto ExecutionFlow.Pop();
L5543:         PlayerController* mPlayerController9 = this->GetOwningPlayer();
L5567:         FGAudioMessage* mFGAudioMessage = WidgetBlueprintLibrary->Create(this, mTSubclassOfFGAudioMessage1, mPlayerController9);
L5628:         bool mbool21 = mFGAudioMessage->mType == 1;
L5681:         if (!mbool21) goto L5759;
L5695:         mFScriptDelegate4->BindUFunction(this, ShowTutorialHint);
L5718:         mFGAudioMessage->AssignOnConcludedDelegate(mFScriptDelegate4);
L5759:         PanelSlot* mPanelSlot1 = this->mAudioMessageSlot->AddChild(mFGAudioMessage);
L5810:         this->SetCurrentAudioMessage(mFGAudioMessage);
L5829:         goto ExecutionFlow.Pop();
L5830:         FGPopupWidget* mFGPopupWidget = this->GetPopup();
L5850:         mFGPopupWidget->RemoveFromParent();
L5886:         goto L5286;
L5891:         mFGPopupWidget = this->GetPopup();
L5911:         bool mbool22 = KismetSystemLibrary->IsValid(mFGPopupWidget);
L5962:         if (!mbool22) goto L3194;
L5976:         goto L5830;
L5981:         goto L5891;
L5986:         this->PopAllWidgets_Internal();
L6000:         goto L4886;
L6005:         this->PopAllWidgets();
L6015:         goto L5986;
L6020:         goto L6005;
L6025:         this->mMenuSlot->ClearChildren();
L6061:         goto ExecutionFlow.Pop();
L6062:         this->BPW_QuickSearch->SetQuickSearchVisibility(true);
L6099:         goto ExecutionFlow.Pop();
L6100:         // <Begin Inlined EventGraph Function CreateBreakNotification>;
L6100:         PlayerController* mPlayerController10 = this->GetOwningPlayer();
L6124:         float mfloat4 = mPlayerController10->GetGameTimeSinceCreation();
L6174:         int32 mint324 = FFloor(mfloat4);
L6211:         float mfloat5 = Conv_IntToFloat(mint324);
L6248:         float mfloat6 = mfloat5 / 7200;
L6290:         int32 mint325 = FFloor(mfloat6);
L6327:         float mfloat7 = Conv_IntToFloat(mint325);
L6364:         bool mbool23 = mfloat6 == mfloat7;
L6402:         if (!mbool23) goto ExecutionFlow.Pop();
L6412:         FGGameUserSettings* mFGGameUserSettings4 = FGGameUserSettings->GetFGGameUserSettings();
L6454:         int32 mint326 = KismetArrayLibrary->Array_Length([ref] this->mPlaytimeWarningMessages);
L6513:         bool mbool24 = mint326 > 0;
L6547:         bool mbool25 = mFGGameUserSettings4->GetShowBreakNotification();
L6589:         bool mbool26 = mbool25 && mbool24;
L6627:         if (!mbool26) goto ExecutionFlow.Pop();
L6637:         mint326 = KismetArrayLibrary->Array_Length([ref] this->mPlaytimeWarningMessages);
L6696:         int32 mint327 = RandomInteger(mint326);
L6733:         this->mPlaytimeWarningMessageIndex = mint327;
L6760:         PlayerController* mPlayerController11 = this->GetOwningPlayer();
L6784:         Widget_WaterNotifier* mWidget_WaterNotifier = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_WaterNotifier.Widget_WaterNotifier_C), mPlayerController11);
L6845:         KismetArrayLibrary->Array_Get([ref] this->mPlaytimeWarningMessages, 0, [ref] mFText1);
L6900:         KismetSystemLibrary->SetTextPropertyByName(mWidget_WaterNotifier, "mText", [ref] mFText1);
L6963:         mPlayerController10 = this->GetOwningPlayer();
L6987:         mfloat4 = mPlayerController10->GetGameTimeSinceCreation();
L7037:         mint324 = FFloor(mfloat4);
L7074:         mfloat5 = Conv_IntToFloat(mint324);
L7111:         mfloat6 = mfloat5 / 7200;
L7153:         mint325 = FFloor(mfloat6);
L7190:         int32 mint328 = mint325 * 2;
L7232:         mFormatArgumentData.ArgumentName = "A";
L7262:         mFormatArgumentData.ArgumentValueType = 0;
L7291:         mFormatArgumentData.ArgumentValue = ;
L7320:         mFormatArgumentData.ArgumentValueInt = mint328;
L7356:         mFormatArgumentData.ArgumentValueFloat = 0;
L7388:         mFormatArgumentData.ArgumentValueGender = 0;
L7417:         TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData];
L7437:         FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L7572:         KismetSystemLibrary->SetTextPropertyByName(mWidget_WaterNotifier, "mTitleMessageText", [ref] mFText2);
L7635:         PanelSlot* mPanelSlot2 = this->mBreakNotificationBox->AddChild(mWidget_WaterNotifier);
L7686:         goto ExecutionFlow.Pop();
L7687:         if (!true) goto ExecutionFlow.Pop();
L7689:         bool Temp_bool_IsClosed_Variable = true;
L7700:         goto ExecutionFlow.Pop();
L7701:         ExecutionFlow.Push(L7737);
L7706:         if (!Temp_bool_Has_Been_Initd_Variable) goto L7721;
L7720:         goto ExecutionFlow.Pop();
L7721:         bool Temp_bool_Has_Been_Initd_Variable = true;
L7732:         goto L7687;
L7737:         if (!Temp_bool_IsClosed_Variable) goto L7752;
L7751:         goto ExecutionFlow.Pop();
L7752:         Temp_bool_IsClosed_Variable = true;
L7763:         this->BPW_AutosaveNotification->OnAutosaveFinished();
L7799:         goto ExecutionFlow.Pop();
L7800:         GameStateBase* mGameStateBase1 = GameplayStatics->GetGameState(this);
L7843:         FGGameState* mFGGameState = Cast<Class /Script/FactoryGame.FGGameState>(mGameStateBase1);
L7879:         bool mbool27 = mFGGameState;
L7908:         if (!mbool27) goto ExecutionFlow.Pop();
L7918:         this->mFGGameState = mFGGameState;
L7937:         mFScriptDelegate5->BindUFunction(this, OnAutosaveStart);
L7960:         this->mFGGameState->mOnAutoSaveTimeNotification.AddUnique(mFScriptDelegate5);
L8001:         mFScriptDelegate6->BindUFunction(this, OnAutosaveFinished);
L8024:         this->mFGGameState->mOnAutoSaveFinished.AddUnique(mFScriptDelegate6);
L8065:         goto ExecutionFlow.Pop();
L8066:         bool mbool28 = this->ShouldShowAutoSaveNotification();
L8090:         if (!mbool28) goto ExecutionFlow.Pop();
L8100:         this->BPW_AutosaveNotification->OnAutosaveStarting(mfloat8);
L8145:         Temp_bool_IsClosed_Variable = false;
L8156:         Temp_bool_Has_Been_Initd_Variable = true;
L8167:         goto ExecutionFlow.Pop();
L8168:         // <Begin Inlined EventGraph Function OnAutosaveFinished>;
L8168:         goto L7701;
============ END FUNCTION ExecuteUbergraph_BP_GameUI ==============
