########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/InGame/-Shared/Widget_Turbine.Widget_Turbine_C
########################





============ BEGIN FUNCTION TurnTurbine ==============
L0:            ExecutionFlow.Push(L7614);
L5:            int32 Temp_int_Variable2 = 0;
L28:           int32 mint32 = Container->GetChildrenCount();
L78:           bool mbool = Temp_int_Variable2 <= mint32;
L116:          if (!mbool) goto ExecutionFlow.Pop();
L126:          ExecutionFlow.Push(L7418);
L131:          Widget* mWidget = Container->GetChildAt(Temp_int_Variable2);
L182:          bool mbool1 = KismetSystemLibrary->IsValid(mWidget);
L233:          if (!mbool1) goto ExecutionFlow.Pop();
L243:          mWidget = Container->GetChildAt(Temp_int_Variable2);
L294:          CanvasPanel* mCanvasPanel = Cast<Class /Script/UMG.CanvasPanel>(mWidget);
L330:          bool mbool2 = mCanvasPanel;
L359:          if (!mbool2) goto ExecutionFlow.Pop();
L369:          CanvasPanel* LocalCanvas = mCanvasPanel;
L388:          Widget* mWidget1 = LocalCanvas->GetChildAt(0);
L435:          Image* mImage = Cast<Class /Script/UMG.Image>(mWidget1);
L471:          bool mbool3 = mImage;
L500:          if (!mbool3) goto ExecutionFlow.Pop();
L510:          int32 Temp_int_Variable = 0;
L533:          int32 Temp_int_Variable1 = 1;
L556:          bool mbool4 = Container == this->mTopContainer;
L594:          float mfloat = Lerp(0, 1, this->mT);
L641:          bool Temp_bool_Variable1 = mbool4;
L660:          bool mbool5 = Container == this->mTopContainer;
L698:          int32 mint321 = this->mTopContainer->GetChildrenCount();
L748:          bool Temp_bool_Variable2 = mbool5;
L767:          float mfloat1 = Conv_IntToFloat(mint321);
L804:          float mfloat2 = Lerp(0, -1, this->mT);
L851:          int32 mint322 = this->mTopContainer->GetChildrenCount();
L901:          int32 mint323 = mint322 - Temp_int_Variable2;
L947:          int32 mint324 = mint323 - switch (Temp_bool_Variable1) {
case false -> Temp_int_Variable1;
case true -> Temp_int_Variable;
default -> mint325;
};
L1037:         float mfloat3 = Conv_IntToFloat(mint324);
L1074:         float mfloat4 = this->mTurbineSizeBox->HeightOverride / 2;
L1138:         float mfloat5 = mfloat3 + switch (Temp_bool_Variable2) {
case false -> mfloat;
case true -> mfloat2;
default -> mfloat6;
};
L1228:         float mfloat7 = mfloat5 / mfloat1;
L1274:         float mfloat8 = Ease(0, mfloat4, mfloat7, 3, 2, 2);
L1337:         Vector2D mVector2D = MakeVector2D(0, mfloat8);
L1379:         mImage->SetBrushSize(mVector2D);
L1420:         Temp_int_Variable = 0;
L1443:         Temp_int_Variable1 = 1;
L1466:         mbool4 = Container == this->mTopContainer;
L1504:         mfloat = Lerp(0, 1, this->mT);
L1551:         Temp_bool_Variable1 = mbool4;
L1570:         mbool5 = Container == this->mTopContainer;
L1608:         mint321 = this->mTopContainer->GetChildrenCount();
L1658:         Temp_bool_Variable2 = mbool5;
L1677:         mfloat1 = Conv_IntToFloat(mint321);
L1714:         mfloat2 = Lerp(0, -1, this->mT);
L1761:         mint322 = this->mTopContainer->GetChildrenCount();
L1811:         mint323 = mint322 - Temp_int_Variable2;
L1857:         mint324 = mint323 - switch (Temp_bool_Variable1) {
case false -> Temp_int_Variable1;
case true -> Temp_int_Variable;
default -> mint325;
};
L1947:         mfloat3 = Conv_IntToFloat(mint324);
L1984:         mfloat5 = mfloat3 + switch (Temp_bool_Variable2) {
case false -> mfloat;
case true -> mfloat2;
default -> mfloat6;
};
L2074:         mfloat7 = mfloat5 / mfloat1;
L2120:         float mfloat9 = 1 - mfloat7;
L2162:         mLinearColor.R = mImage->Brush.TintColor.SpecifiedColor.R;
L2247:         mLinearColor.G = mImage->Brush.TintColor.SpecifiedColor.G;
L2332:         mLinearColor.B = mImage->Brush.TintColor.SpecifiedColor.B;
L2417:         mLinearColor.A = mfloat9;
L2453:         mSlateColor.SpecifiedColor = mLinearColor;
L2489:         mSlateColor.ColorUseRule = mImage->Brush.TintColor.ColorUseRule;
L2565:         mImage->SetBrushTintColor(mSlateColor);
L2606:         int32 mint326 = this->mTopContainer->GetChildrenCount();
L2656:         int32 mint327 = mint326 - 1;
L2698:         bool mbool6 = Temp_int_Variable2 == mint327;
L2736:         bool mbool7 = !mbool6;
L2765:         if (!mbool7) goto L7492;
L2779:         Temp_int_Variable = 0;
L2802:         Temp_int_Variable1 = 1;
L2825:         bool mbool8 = Container == this->mTopContainer;
L2863:         bool Temp_bool_Variable = mbool8;
L2882:         CanvasPanelSlot* mCanvasPanelSlot = WidgetLayoutLibrary->SlotAsCanvasSlot(mImage);
L2933:         mbool4 = Container == this->mTopContainer;
L2971:         mfloat = Lerp(0, 1, this->mT);
L3018:         Temp_bool_Variable1 = mbool4;
L3037:         mbool5 = Container == this->mTopContainer;
L3075:         mint321 = this->mTopContainer->GetChildrenCount();
L3125:         Temp_bool_Variable2 = mbool5;
L3144:         mfloat1 = Conv_IntToFloat(mint321);
L3181:         mfloat2 = Lerp(0, -1, this->mT);
L3228:         mint322 = this->mTopContainer->GetChildrenCount();
L3278:         mint323 = mint322 - Temp_int_Variable2;
L3324:         mint324 = mint323 - switch (Temp_bool_Variable1) {
case false -> Temp_int_Variable1;
case true -> Temp_int_Variable;
default -> mint325;
};
L3414:         mfloat3 = Conv_IntToFloat(mint324);
L3451:         mfloat4 = this->mTurbineSizeBox->HeightOverride / 2;
L3515:         mfloat5 = mfloat3 + switch (Temp_bool_Variable2) {
case false -> mfloat;
case true -> mfloat2;
default -> mfloat6;
};
L3605:         float mfloat10 = mfloat5 + -1;
L3647:         float mfloat11 = mfloat10 / mfloat1;
L3693:         float mfloat12 = Ease(0, mfloat4, mfloat11, 3, 2, 2);
L3756:         mMargin.Left = 0;
L3788:         mMargin.Top = 0;
L3820:         mMargin.Right = 0;
L3852:         mMargin.Bottom = mfloat12;
L3888:         mMargin1.Left = 0;
L3920:         mMargin1.Top = mfloat12;
L3956:         mMargin1.Right = 0;
L3988:         mMargin1.Bottom = 0;
L4020:         mCanvasPanelSlot->SetOffsets(switch (Temp_bool_Variable) {
case false -> mMargin1;
case true -> mMargin;
default -> mMargin2;
});
L4105:         Widget* mWidget2 = LocalCanvas->GetChildAt(1);
L4152:         SizeBox* mSizeBox = Cast<Class /Script/UMG.SizeBox>(mWidget2);
L4188:         bool mbool9 = mSizeBox;
L4217:         if (!mbool9) goto ExecutionFlow.Pop();
L4227:         Widget* mWidget3 = mSizeBox->GetChildAt(0);
L4274:         ScaleBox* mScaleBox = Cast<Class /Script/UMG.ScaleBox>(mWidget3);
L4310:         bool mbool10 = mScaleBox;
L4339:         if (!mbool10) goto ExecutionFlow.Pop();
L4349:         Widget* mWidget4 = mScaleBox->GetChildAt(0);
L4396:         Overlay* mOverlay = Cast<Class /Script/UMG.Overlay>(mWidget4);
L4432:         bool mbool11 = mOverlay;
L4461:         if (!mbool11) goto ExecutionFlow.Pop();
L4471:         Widget* mWidget5 = mOverlay->GetChildAt(0);
L4518:         Image* mImage1 = Cast<Class /Script/UMG.Image>(mWidget5);
L4554:         bool mbool12 = mImage1;
L4583:         if (!mbool12) goto ExecutionFlow.Pop();
L4593:         Temp_int_Variable = 0;
L4616:         Temp_int_Variable1 = 1;
L4639:         mbool4 = Container == this->mTopContainer;
L4677:         mfloat = Lerp(0, 1, this->mT);
L4724:         Temp_bool_Variable1 = mbool4;
L4743:         mbool5 = Container == this->mTopContainer;
L4781:         mint321 = this->mTopContainer->GetChildrenCount();
L4831:         Temp_bool_Variable2 = mbool5;
L4850:         mfloat1 = Conv_IntToFloat(mint321);
L4887:         mfloat2 = Lerp(0, -1, this->mT);
L4934:         mint322 = this->mTopContainer->GetChildrenCount();
L4984:         mint323 = mint322 - Temp_int_Variable2;
L5030:         mint324 = mint323 - switch (Temp_bool_Variable1) {
case false -> Temp_int_Variable1;
case true -> Temp_int_Variable;
default -> mint325;
};
L5120:         mfloat3 = Conv_IntToFloat(mint324);
L5157:         mfloat5 = mfloat3 + switch (Temp_bool_Variable2) {
case false -> mfloat;
case true -> mfloat2;
default -> mfloat6;
};
L5247:         mfloat7 = mfloat5 / mfloat1;
L5293:         float mfloat13 = Ease(0.5, 0, mfloat7, 3, 2, 2);
L5352:         mLinearColor1.R = mfloat13;
L5388:         mLinearColor1.G = mfloat13;
L5424:         mLinearColor1.B = mfloat13;
L5460:         mLinearColor1.A = 1;
L5492:         mImage1->SetColorAndOpacity(mLinearColor1);
L5533:         Widget* mWidget6 = mOverlay->GetChildAt(1);
L5580:         Image* mImage2 = Cast<Class /Script/UMG.Image>(mWidget6);
L5616:         bool mbool13 = mImage2;
L5645:         if (!mbool13) goto ExecutionFlow.Pop();
L5655:         Temp_int_Variable = 0;
L5678:         Temp_int_Variable1 = 1;
L5701:         mbool4 = Container == this->mTopContainer;
L5739:         mfloat = Lerp(0, 1, this->mT);
L5786:         Temp_bool_Variable1 = mbool4;
L5805:         mbool5 = Container == this->mTopContainer;
L5843:         mint321 = this->mTopContainer->GetChildrenCount();
L5893:         Temp_bool_Variable2 = mbool5;
L5912:         mfloat1 = Conv_IntToFloat(mint321);
L5949:         mfloat2 = Lerp(0, -1, this->mT);
L5996:         mint322 = this->mTopContainer->GetChildrenCount();
L6046:         mint323 = mint322 - Temp_int_Variable2;
L6092:         mint324 = mint323 - switch (Temp_bool_Variable1) {
case false -> Temp_int_Variable1;
case true -> Temp_int_Variable;
default -> mint325;
};
L6182:         mfloat3 = Conv_IntToFloat(mint324);
L6219:         mfloat5 = mfloat3 + switch (Temp_bool_Variable2) {
case false -> mfloat;
case true -> mfloat2;
default -> mfloat6;
};
L6309:         mfloat7 = mfloat5 / mfloat1;
L6355:         float mfloat14 = Ease(0.699999988079071, 0, mfloat7, 3, 2, 2);
L6414:         mImage2->SetOpacity(mfloat14);
L6455:         Temp_int_Variable = 0;
L6478:         Temp_int_Variable1 = 1;
L6501:         float Temp_float_Variable = 0;
L6524:         mbool4 = Container == this->mTopContainer;
L6562:         mfloat = Lerp(0, 1, this->mT);
L6609:         Temp_bool_Variable1 = mbool4;
L6628:         mbool5 = Container == this->mTopContainer;
L6666:         mint321 = this->mTopContainer->GetChildrenCount();
L6716:         Temp_bool_Variable2 = mbool5;
L6735:         mfloat1 = Conv_IntToFloat(mint321);
L6772:         mfloat2 = Lerp(0, -1, this->mT);
L6819:         mint322 = this->mTopContainer->GetChildrenCount();
L6869:         mint323 = mint322 - Temp_int_Variable2;
L6915:         mint324 = mint323 - switch (Temp_bool_Variable1) {
case false -> Temp_int_Variable1;
case true -> Temp_int_Variable;
default -> mint325;
};
L7005:         mfloat3 = Conv_IntToFloat(mint324);
L7042:         mfloat5 = mfloat3 + switch (Temp_bool_Variable2) {
case false -> mfloat;
case true -> mfloat2;
default -> mfloat6;
};
L7132:         mfloat7 = mfloat5 / mfloat1;
L7178:         float mfloat15 = Ease(10, 0, mfloat7, 3, 2, 2);
L7237:         bool mbool14 = mfloat15 > 1;
L7271:         bool Temp_bool_Variable3 = mbool14;
L7290:         Vector2D mVector2D1 = MakeVector2D(0, switch (Temp_bool_Variable3) {
case false -> Temp_float_Variable;
case true -> mfloat15;
default -> mfloat16;
});
L7376:         mImage2->SetBrushSize(mVector2D1);
L7417:         goto ExecutionFlow.Pop();
L7418:         int32 mint328 = Temp_int_Variable2 + 1;
L7460:         Temp_int_Variable2 = mint328;
L7487:         goto L28;
L7492:         mCanvasPanelSlot = WidgetLayoutLibrary->SlotAsCanvasSlot(mImage);
L7543:         mCanvasPanelSlot->SetOffsets(ScriptStruct /Script/SlateCore.Margin(Left = 0, Top = 0, Right = 0, Bottom = 0));
L7609:         goto L4105;
============ END FUNCTION TurnTurbine ==============





============ BEGIN FUNCTION TurnEvent ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: TurnEvent;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Turbine, from label L698;
============ END FUNCTION TurnEvent ==============





============ BEGIN FUNCTION Destruct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Destruct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Turbine, from label L827;
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Turbine, from label L874;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION PreConstruct ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PreConstruct;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Turbine, from label L879;
============ END FUNCTION PreConstruct ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_Turbine ==============
L10:           bool mbool = this->mSpeed <= 0;
L44:           bool mbool1 = !mbool;
L73:           if (!mbool1) goto L1071;
L87:           this->TurnTurbine(this->mTopContainer);
L110:          this->TurnTurbine(this->mBottomContainer);
L133:          bool mbool2 = this->mT > 1;
L167:          bool Temp_bool_Variable2 = this->mTurnsUp;
L186:          bool mbool3 = this->mT < 0;
L220:          if (!switch (Temp_bool_Variable2) {
case false -> mbool2;
case true -> mbool3;
default -> mbool4;
}) goto L419;
L278:          float Temp_float_Variable = 1;
L301:          float Temp_float_Variable1 = 0;
L324:          bool Temp_bool_Variable = this->mTurnsUp;
L343:          this->mT = switch (Temp_bool_Variable) {
case false -> Temp_float_Variable1;
case true -> Temp_float_Variable;
default -> mfloat;
};
L414:          // <End Inlined EventGraph Function>;
L419:          float mfloat1 = this->mUpdateTime / this->mSpeed;
L465:          float mfloat2 = this->mT + mfloat1;
L511:          bool Temp_bool_Variable1 = this->mTurnsUp;
L530:          float mfloat3 = this->mUpdateTime / this->mSpeed;
L576:          float mfloat4 = this->mT - mfloat3;
L622:          this->mT = switch (Temp_bool_Variable1) {
case false -> mfloat2;
case true -> mfloat4;
default -> mfloat5;
};
L693:          // <End Inlined EventGraph Function>;
L698:          // <Begin Inlined EventGraph Function TurnEvent>;
L698:          goto L10;
L703:          mFScriptDelegate->BindUFunction(this, TurnEvent);
L726:          TimerHandle mTimerHandle = KismetSystemLibrary->K2_SetTimerDelegate(mFScriptDelegate, this->mUpdateTime, true);
L795:          this->mTurnTimer = mTimerHandle;
L822:          // <End Inlined EventGraph Function>;
L827:          KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->mTurnTimer);
L869:          // <End Inlined EventGraph Function>;
L874:          goto L703;
L879:          this->TurnTurbine(this->mTopContainer);
L902:          this->TurnTurbine(this->mBottomContainer);
L925:          float mfloat6 = this->mTurbineSizeBox->HeightOverride / 2;
L989:          this->mBottomSizeBox->SetHeightOverride(mfloat6);
L1030:         this->mTopSizeBox->SetHeightOverride(mfloat6);
============ END FUNCTION ExecuteUbergraph_Widget_Turbine ==============
