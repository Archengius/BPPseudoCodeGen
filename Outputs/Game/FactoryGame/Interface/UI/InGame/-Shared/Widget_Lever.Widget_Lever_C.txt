########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/InGame/-Shared/Widget_Lever.Widget_Lever_C
########################





============ BEGIN FUNCTION LeverShake ==============
L0:            bool mbool = this->CurrentSelectionIndex != MaxOrMinSelectionIndex;
L38:           if (!mbool) goto L66;
L52:           this->OnShake();
============ END FUNCTION LeverShake ==============





============ BEGIN FUNCTION OnShake ==============
L0:            bool mbool = KismetSystemLibrary->IsValid(this->mShakeAnim);
L51:           if (!mbool) goto L133;
L65:           UMGSequencePlayer* mUMGSequencePlayer = this->mShakeAnimTarget->PlayAnimation(this->mShakeAnim, 0, 1, 0, 1);
============ END FUNCTION OnShake ==============





============ BEGIN FUNCTION SetShowButton ==============
L0:            bool mbool = ShowButton != this->ShowButton;
L38:           if (!mbool) goto L182;
L52:           this->ShowButton = ShowButton;
L71:           if (!this->ShowButton) goto L136;
L85:           UMGSequencePlayer* mUMGSequencePlayer = this->PlayAnimation(this->ShowButtonAnim, 0, 1, 0, 1);
L131:          // <End Inlined EventGraph Function>;
L136:          UMGSequencePlayer* mUMGSequencePlayer1 = this->PlayAnimation(this->ShowButtonAnim, 0, 1, 1, 1);
============ END FUNCTION SetShowButton ==============





============ BEGIN FUNCTION StartLerp ==============
L0:            KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->LerpHandle);
L42:           this->LerpT = 0;
L65:           float mfloat = this->LeverHandle->GetValue();
L115:          this->LerpStartValue = mfloat;
L142:          mFScriptDelegate->BindUFunction(this, LerpLever);
L165:          TimerHandle mTimerHandle = KismetSystemLibrary->K2_SetTimerDelegate(mFScriptDelegate, this->mLerpDelta, true);
L234:          this->LerpHandle = mTimerHandle;
============ END FUNCTION StartLerp ==============





============ BEGIN FUNCTION GetCurrentSelectionPosOnSlider ==============
L0:            float mfloat = this->CurrentSelectionIndex * this->SelectionNormalizedSize;
L46:           float mfloat1 = 1 - mfloat;
L88:           float ReturnValue = mfloat1;
============ END FUNCTION GetCurrentSelectionPosOnSlider ==============





============ BEGIN FUNCTION GetCalculatedCurve ==============
L0:            CurveFloat* LocalCurveFloat = CurveFloat;
L19:           float LocalInTime = InTime;
L46:           float mfloat = this->LeverHandle->GetValue();
L96:           float mfloat1 = this->GetCurrentSelectionPosOnSlider();
L128:          bool mbool = mfloat > mfloat1;
L166:          if (!mbool) goto L761;
L180:          float mfloat2 = this->GetCurrentSelectionPosOnSlider();
L212:          float mfloat3 = 1 - mfloat2;
L254:          int32 mint32 = this->mSelections - 1;
L296:          int32 mint321 = this->mSelections - 1;
L338:          float mfloat4 = Conv_IntToFloat(mint32);
L375:          float mfloat5 = this->GetCurrentSelectionPosOnSlider();
L407:          float mfloat6 = 1 - mfloat5;
L449:          float mfloat7 = LocalInTime - mfloat6;
L495:          float mfloat8 = mint321 * mfloat7;
L541:          float mfloat9 = Abs(mfloat8);
L578:          float mfloat10 = LocalCurveFloat->GetFloatValue(mfloat9);
L637:          float mfloat11 = mfloat10 / mfloat4;
L683:          float mfloat12 = mfloat3 - mfloat11;
L729:          float ReturnValue = mfloat12;
L756:          goto L1337;
L761:          float mfloat13 = this->GetCurrentSelectionPosOnSlider();
L793:          float mfloat14 = 1 - mfloat13;
L835:          mint32 = this->mSelections - 1;
L877:          mint321 = this->mSelections - 1;
L919:          mfloat4 = Conv_IntToFloat(mint32);
L956:          mfloat5 = this->GetCurrentSelectionPosOnSlider();
L988:          mfloat6 = 1 - mfloat5;
L1030:         mfloat7 = LocalInTime - mfloat6;
L1076:         mfloat8 = mint321 * mfloat7;
L1122:         mfloat9 = Abs(mfloat8);
L1159:         mfloat10 = LocalCurveFloat->GetFloatValue(mfloat9);
L1218:         mfloat11 = mfloat10 / mfloat4;
L1264:         float mfloat15 = mfloat11 + mfloat14;
L1310:         ReturnValue = mfloat15;
============ END FUNCTION GetCalculatedCurve ==============





============ BEGIN FUNCTION GetSliderMinClamp ==============
L0:            bool mbool = this->CurrentSelectionIndex > this->mMinSelectionIndex;
L38:           if (!mbool) goto L172;
L52:           int32 mint32 = this->CurrentSelectionIndex - 1;
L94:           float mfloat = mint32 * this->SelectionNormalizedSize;
L140:          float ReturnValue = mfloat;
L167:          goto L245;
L172:          float mfloat1 = this->mMinSelectionIndex * this->SelectionNormalizedSize;
L218:          ReturnValue = mfloat1;
============ END FUNCTION GetSliderMinClamp ==============





============ BEGIN FUNCTION GetSliderMaxClamp ==============
L0:            bool mbool = this->CurrentSelectionIndex < this->mMaxSelectionIndex;
L38:           if (!mbool) goto L172;
L52:           int32 mint32 = this->CurrentSelectionIndex + 1;
L94:           float mfloat = mint32 * this->SelectionNormalizedSize;
L140:          float ReturnValue = mfloat;
L167:          goto L245;
L172:          float mfloat1 = this->mMaxSelectionIndex * this->SelectionNormalizedSize;
L218:          ReturnValue = mfloat1;
============ END FUNCTION GetSliderMaxClamp ==============





============ BEGIN FUNCTION SetHandle ==============
L0:            float SlideValue = Value;
L27:           float mfloat = FClamp(SlideValue, 0.5, 1);
L74:           float mfloat1 = mfloat - 0.5;
L116:          float mfloat2 = mfloat1 * 2;
L158:          Vector2D mVector2D = MakeVector2D(1, mfloat2);
L200:          this->LeverArmBottom->SetRenderScale(mVector2D);
L241:          mfloat = FClamp(SlideValue, 0.5, 1);
L288:          mfloat1 = mfloat - 0.5;
L330:          mfloat2 = mfloat1 * 2;
L372:          mLinearColor.R = 1;
L404:          mLinearColor.G = 1;
L436:          mLinearColor.B = 1;
L468:          mLinearColor.A = mfloat2;
L504:          this->LeverArmBottom->SetColorAndOpacity(mLinearColor);
L545:          float mfloat3 = 1 - SlideValue;
L587:          float mfloat4 = FClamp(mfloat3, 0.5, 1);
L634:          float mfloat5 = mfloat4 - 0.5;
L676:          float mfloat6 = mfloat5 * 2;
L718:          Vector2D mVector2D1 = MakeVector2D(1, mfloat6);
L760:          this->LeverArmTop->SetRenderScale(mVector2D1);
L801:          mfloat3 = 1 - SlideValue;
L843:          mfloat4 = FClamp(mfloat3, 0.5, 1);
L890:          mfloat5 = mfloat4 - 0.5;
L932:          mfloat6 = mfloat5 * 2;
L974:          mLinearColor1.R = 1;
L1006:         mLinearColor1.G = 1;
L1038:         mLinearColor1.B = 1;
L1070:         mLinearColor1.A = mfloat6;
L1106:         this->LeverArmTop->SetColorAndOpacity(mLinearColor1);
L1147:         float mfloat7 = Ease(0, 1, SlideValue, 5, 1.5, 2);
L1206:         this->LeverShadow->SetValue(mfloat7);
L1247:         float mfloat8 = Ease(0, 1, SlideValue, 5, 1, 2);
L1306:         this->LeverPlatfrormShadow->SetValue(mfloat8);
L1347:         float mfloat9 = 1 - SlideValue;
L1389:         float mfloat10 = mfloat9 - 0.5;
L1431:         float mfloat11 = mfloat10 * this->ButtonContainer->HeightOverride;
L1499:         Vector2D mVector2D2 = MakeVector2D(1, mfloat11);
L1541:         this->ButtonMover->SetRenderTranslation(mVector2D2);
============ END FUNCTION SetHandle ==============





============ BEGIN FUNCTION PreConstruct ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PreConstruct;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L1025;
============ END FUNCTION PreConstruct ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L1273;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: BndEvt__LeverHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L1441;
============ END FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureEndEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__LeverHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureEndEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L2696;
============ END FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureEndEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_4_OnControllerCaptureEndEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__LeverHandle_K2Node_ComponentBoundEvent_4_OnControllerCaptureEndEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L3519;
============ END FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_4_OnControllerCaptureEndEvent__DelegateSignature ==============





============ BEGIN FUNCTION LerpLever ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: LerpLever;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L3913;
============ END FUNCTION LerpLever ==============





============ BEGIN FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_5_OnMouseCaptureBeginEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__LeverHandle_K2Node_ComponentBoundEvent_5_OnMouseCaptureBeginEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L4391;
============ END FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_5_OnMouseCaptureBeginEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_6_OnControllerCaptureBeginEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__LeverHandle_K2Node_ComponentBoundEvent_6_OnControllerCaptureBeginEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Lever, from label L4448;
============ END FUNCTION BndEvt__LeverHandle_K2Node_ComponentBoundEvent_6_OnControllerCaptureBeginEvent__DelegateSignature ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_Lever ==============
L5:            goto ComputedJump(EntryPoint);
L15:           bool mbool = this->CurrentSelectionIndex != this->LatestSelectionIndex;
L53:           if (!mbool) goto ExecutionFlow.Pop();
L63:           this->mSliderLocked = true;
L74:           this->StartLerp();
L88:           goto ExecutionFlow.Pop();
L89:           ExecutionFlow.Push(L15);
L94:           bool mbool1 = mfloat <= 0.5;
L128:          if (!mbool1) goto L162;
L142:          ExecutionFlow.Push(L185);
L147:          if (!Temp_bool_Has_Been_Initd_Variable1) goto L297;
L161:          goto ExecutionFlow.Pop();
L162:          bool Temp_bool_IsClosed_Variable1 = false;
L173:          bool Temp_bool_Has_Been_Initd_Variable1 = true;
L184:          goto ExecutionFlow.Pop();
L185:          if (!Temp_bool_IsClosed_Variable1) goto L200;
L199:          goto ExecutionFlow.Pop();
L200:          Temp_bool_IsClosed_Variable1 = true;
L211:          PlayerController* mPlayerController = this->GetOwningPlayer();
L235:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/SpaceElevator/Audio/Play_SpaceElevator_Lever_Pull.Play_SpaceElevator_Lever_Pull), mPlayerController, true);
L296:          goto ExecutionFlow.Pop();
L297:          Temp_bool_Has_Been_Initd_Variable1 = true;
L308:          if (!false) goto ExecutionFlow.Pop();
L310:          Temp_bool_IsClosed_Variable1 = true;
L321:          goto ExecutionFlow.Pop();
L322:          ExecutionFlow.Push(L15);
L327:          bool mbool2 = mfloat <= 0.9900000095367432;
L361:          if (!mbool2) goto L451;
L375:          ExecutionFlow.Push(L420);
L380:          if (!Temp_bool_Has_Been_Initd_Variable) goto L395;
L394:          goto ExecutionFlow.Pop();
L395:          bool Temp_bool_Has_Been_Initd_Variable = true;
L406:          if (!false) goto ExecutionFlow.Pop();
L408:          bool Temp_bool_IsClosed_Variable = true;
L419:          goto ExecutionFlow.Pop();
L420:          if (!Temp_bool_IsClosed_Variable) goto L435;
L434:          goto ExecutionFlow.Pop();
L435:          Temp_bool_IsClosed_Variable = true;
L446:          goto L211;
L451:          Temp_bool_IsClosed_Variable = false;
L462:          Temp_bool_Has_Been_Initd_Variable = true;
L473:          goto ExecutionFlow.Pop();
L474:          float mfloat1 = this->GetSliderMinClamp();
L506:          float mfloat2 = this->SelectionNormalizedSize / 2;
L548:          float mfloat3 = this->LeverHandle->GetValue();
L598:          float mfloat4 = 1 - mfloat3;
L640:          bool mbool3 = NearlyEqual_FloatFloat(mfloat4, mfloat1, mfloat2);
L687:          if (!mbool3) goto L322;
L701:          this->LeverShake(this->mMinSelectionIndex);
L724:          int32 mint32 = this->CurrentSelectionIndex - 1;
L766:          int32 mint321 = Clamp(mint32, this->mMinSelectionIndex, this->mMaxSelectionIndex);
L821:          this->CurrentSelectionIndex = mint321;
L848:          goto L89;
L853:          int32 mint322 = this->CurrentSelectionIndex + 1;
L895:          int32 mint323 = Clamp(mint322, this->mMinSelectionIndex, this->mMaxSelectionIndex);
L950:          this->CurrentSelectionIndex = mint323;
L977:          goto L15;
L982:          this->LeverShake(this->mMaxSelectionIndex);
L1005:         goto L853;
L1010:         this->StartLerp();
L1024:         goto ExecutionFlow.Pop();
L1025:         bool mbool4 = this->mSelections < 2;
L1059:         if (!mbool4) goto ExecutionFlow.Pop();
L1069:         this->mSelections = 2;
L1092:         bool mbool5 = this->mMinSelectionIndex < 0;
L1126:         if (!mbool5) goto ExecutionFlow.Pop();
L1136:         this->mMinSelectionIndex = 0;
L1159:         bool mbool6 = this->mMaxSelectionIndex < 0;
L1193:         if (!mbool6) goto ExecutionFlow.Pop();
L1203:         int32 mint324 = this->mSelections - 1;
L1245:         this->mMaxSelectionIndex = mint324;
L1272:         goto ExecutionFlow.Pop();
L1273:         // <Begin Inlined EventGraph Function Construct>;
L1273:         this->SetHandle(1);
L1292:         int32 mint325 = this->mSelections - 1;
L1334:         float mfloat5 = Conv_IntToFloat(mint325);
L1371:         float mfloat6 = 1 / mfloat5;
L1413:         this->SelectionNormalizedSize = mfloat6;
L1440:         goto ExecutionFlow.Pop();
L1441:         if (!this->mSliderLocked) goto L1696;
L1455:         float mfloat7 = this->CurrentSelectionIndex * this->SelectionNormalizedSize;
L1501:         float mfloat8 = 1 - mfloat7;
L1543:         this->LeverHandle->SetValue(mfloat8);
L1584:         mfloat7 = this->CurrentSelectionIndex * this->SelectionNormalizedSize;
L1630:         mfloat8 = 1 - mfloat7;
L1672:         this->SetHandle(mfloat8);
L1695:         goto ExecutionFlow.Pop();
L1696:         float mfloat9 = FClamp(mfloat, 0, 1);
L1743:         float mfloat10 = 1 - mfloat9;
L1785:         float mfloat11 = this->GetSliderMaxClamp();
L1817:         float mfloat12 = this->GetSliderMinClamp();
L1849:         float mfloat13 = FClamp(mfloat10, mfloat12, mfloat11);
L1904:         float mfloat14 = this->GetCalculatedCurve(this->mLeverCurve, mfloat13);
L1954:         float mfloat15 = 1 - mfloat14;
L1996:         float mfloat16 = FClamp(mfloat15, 0, 1);
L2043:         this->LeverHandle->SetValue(mfloat16);
L2084:         mfloat9 = FClamp(mfloat, 0, 1);
L2131:         mfloat10 = 1 - mfloat9;
L2173:         mfloat11 = this->GetSliderMaxClamp();
L2205:         mfloat12 = this->GetSliderMinClamp();
L2237:         mfloat13 = FClamp(mfloat10, mfloat12, mfloat11);
L2292:         mfloat14 = this->GetCalculatedCurve(this->mLeverCurve, mfloat13);
L2342:         mfloat15 = 1 - mfloat14;
L2384:         mfloat16 = FClamp(mfloat15, 0, 1);
L2431:         this->SetHandle(mfloat16);
L2454:         if (!this->mAutoSelectSelection) goto ExecutionFlow.Pop();
L2464:         float mfloat17 = this->SelectionNormalizedSize / 2;
L2506:         float mfloat18 = this->GetSliderMaxClamp();
L2538:         float mfloat19 = this->LeverHandle->GetValue();
L2588:         float mfloat20 = 1 - mfloat19;
L2630:         bool mbool7 = NearlyEqual_FloatFloat(mfloat20, mfloat18, mfloat17);
L2677:         if (!mbool7) goto L474;
L2691:         goto L982;
L2696:         // <Begin Inlined EventGraph Function BndEvt__LeverHandle_K2Node_ComponentBoundEvent_3_OnMouseCaptureEndEvent__DelegateSignature>;
L2696:         if (!this->ShowButton) goto L2756;
L2710:         UMGSequencePlayer* mUMGSequencePlayer = this->PlayAnimation(this->PushButtonAnim, 0, 1, 1, 1);
L2756:         float mfloat21 = this->SelectionNormalizedSize / 2;
L2798:         float mfloat22 = this->GetSliderMaxClamp();
L2830:         float mfloat23 = this->LeverHandle->GetValue();
L2880:         float mfloat24 = 1 - mfloat23;
L2922:         bool mbool8 = NearlyEqual_FloatFloat(mfloat24, mfloat22, mfloat21);
L2969:         if (!mbool8) goto L3135;
L2983:         this->LeverShake(this->mMaxSelectionIndex);
L3006:         int32 mint326 = this->CurrentSelectionIndex + 1;
L3048:         int32 mint327 = Clamp(mint326, this->mMinSelectionIndex, this->mMaxSelectionIndex);
L3103:         this->CurrentSelectionIndex = mint327;
L3130:         goto L1010;
L3135:         float mfloat25 = this->GetSliderMinClamp();
L3167:         float mfloat26 = this->LeverHandle->GetValue();
L3217:         float mfloat27 = 1 - mfloat26;
L3259:         float mfloat28 = this->SelectionNormalizedSize / 2;
L3301:         bool mbool9 = NearlyEqual_FloatFloat(mfloat27, mfloat25, mfloat28);
L3348:         if (!mbool9) goto L3514;
L3362:         this->LeverShake(this->mMinSelectionIndex);
L3385:         int32 mint328 = this->CurrentSelectionIndex - 1;
L3427:         int32 mint329 = Clamp(mint328, this->mMinSelectionIndex, this->mMaxSelectionIndex);
L3482:         this->CurrentSelectionIndex = mint329;
L3509:         goto L1010;
L3514:         goto L1010;
L3519:         // <Begin Inlined EventGraph Function BndEvt__LeverHandle_K2Node_ComponentBoundEvent_4_OnControllerCaptureEndEvent__DelegateSignature>;
L3519:         goto L2696;
L3524:         float mfloat29 = this->GetCurrentSelectionPosOnSlider();
L3556:         this->SetHandle(mfloat29);
L3579:         goto ExecutionFlow.Pop();
L3580:         mfloat29 = this->GetCurrentSelectionPosOnSlider();
L3612:         this->LeverHandle->SetValue(mfloat29);
L3653:         goto L3524;
L3658:         this->OnNewSelection->ProcessMulticastDelegate(this->CurrentSelectionIndex);
L3686:         goto ExecutionFlow.Pop();
L3687:         this->LatestSelectionIndex = this->CurrentSelectionIndex;
L3714:         KismetSystemLibrary->K2_ClearAndInvalidateTimerHandle(this, [ref] this->LerpHandle);
L3756:         if (!this->mUseCutomSounds) goto L3658;
L3770:         PlayerController* mPlayerController1 = this->GetOwningPlayer();
L3794:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(this->mCustomAKSound, mPlayerController1, true);
L3855:         goto L3658;
L3860:         bool mbool10 = this->CurrentSelectionIndex != this->LatestSelectionIndex;
L3898:         if (!mbool10) goto ExecutionFlow.Pop();
L3908:         goto L3687;
L3913:         // <Begin Inlined EventGraph Function LerpLever>;
L3913:         bool mbool11 = this->LerpT <= 1;
L3947:         if (!mbool11) goto L3860;
L3961:         float mfloat30 = this->mLerpDelta / this->LerpDuration;
L4007:         float mfloat31 = mfloat30 + this->LerpT;
L4053:         this->LerpT = mfloat31;
L4080:         float mfloat32 = this->GetCurrentSelectionPosOnSlider();
L4112:         float mfloat33 = Ease(this->LerpStartValue, mfloat32, this->LerpT, 5, 3, 2);
L4179:         this->LeverHandle->SetValue(mfloat33);
L4220:         mfloat32 = this->GetCurrentSelectionPosOnSlider();
L4252:         mfloat33 = Ease(this->LerpStartValue, mfloat32, this->LerpT, 5, 3, 2);
L4319:         this->SetHandle(mfloat33);
L4342:         bool mbool12 = this->LerpT <= 1;
L4376:         if (!mbool12) goto L3580;
L4390:         goto ExecutionFlow.Pop();
L4391:         // <Begin Inlined EventGraph Function BndEvt__LeverHandle_K2Node_ComponentBoundEvent_5_OnMouseCaptureBeginEvent__DelegateSignature>;
L4391:         if (!this->ShowButton) goto ExecutionFlow.Pop();
L4401:         UMGSequencePlayer* mUMGSequencePlayer1 = this->PlayAnimation(this->PushButtonAnim, 0, 1, 0, 1);
L4447:         goto ExecutionFlow.Pop();
L4448:         // <Begin Inlined EventGraph Function BndEvt__LeverHandle_K2Node_ComponentBoundEvent_6_OnControllerCaptureBeginEvent__DelegateSignature>;
L4448:         goto L4391;
============ END FUNCTION ExecuteUbergraph_Widget_Lever ==============





============ BEGIN FUNCTION OnNewSelection__DelegateSignature ==============
============ END FUNCTION OnNewSelection__DelegateSignature ==============
