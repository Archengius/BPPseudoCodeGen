########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/Menu/Widget_Multiplayer_ListButton.Widget_Multiplayer_ListButton_C
########################





============ BEGIN FUNCTION UpdateNATWarningForClient ==============
L0:            LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L24:           FGLocalPlayer* mFGLocalPlayer = Cast<Class /Script/FactoryGame.FGLocalPlayer>(mLocalPlayer);
L60:           bool mbool = mFGLocalPlayer;
L89:           if (!mbool) goto L492;
L103:          uint8 muint8 = FGNetworkLibrary->GetCachedNATType(mFGLocalPlayer);
L162:          this->IsNATIssue(this->mNatType, muint8, [ref] mbool1);
L203:          uint8 Temp_byte_Variable = 0;
L223:          uint8 Temp_byte_Variable1 = 1;
L243:          bool Temp_bool_Variable = mbool1;
L262:          this->Widget_NatInformation->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint81;
});
L351:          muint8 = FGNetworkLibrary->GetCachedNATType(mFGLocalPlayer);
L410:          this->GetConnectingNATIsse(this->mNatType, muint8, [ref] mFText);
L451:          this->Widget_NatInformation->SetToolTipText([ref] mFText);
============ END FUNCTION UpdateNATWarningForClient ==============





============ BEGIN FUNCTION GetHostingNATIsse ==============
L0:            FText mFText = FGNetworkLibrary->NATTypeToText(HostNAT);
L59:           FText mFText1 = FGNetworkLibrary->NATTypeToText(ClientNat);
L118:          mFormatArgumentData.ArgumentName = "hostNat";
L154:          mFormatArgumentData.ArgumentValueType = 4;
L183:          mFormatArgumentData.ArgumentValue = mFText;
L219:          mFormatArgumentData.ArgumentValueInt = 0;
L251:          mFormatArgumentData.ArgumentValueFloat = 0;
L283:          mFormatArgumentData.ArgumentValueGender = 0;
L312:          mFormatArgumentData1.ArgumentName = "clientNat";
L350:          mFormatArgumentData1.ArgumentValueType = 4;
L379:          mFormatArgumentData1.ArgumentValue = mFText1;
L415:          mFormatArgumentData1.ArgumentValueInt = 0;
L447:          mFormatArgumentData1.ArgumentValueFloat = 0;
L479:          mFormatArgumentData1.ArgumentValueGender = 0;
L508:          TArray<FormatArgumentData> mTArray<FormatArgumentData> = [mFormatArgumentData, mFormatArgumentData1];
L537:          FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArray<FormatArgumentData>);
L794:          FText Tooltip = mFText2;
============ END FUNCTION GetHostingNATIsse ==============





============ BEGIN FUNCTION GetConnectingNATIsse ==============
L0:            FText mFText = FGNetworkLibrary->NATTypeToText(HostNAT);
L59:           FText mFText1 = FGNetworkLibrary->NATTypeToText(ClientNat);
L118:          mFormatArgumentData.ArgumentName = "hostNat";
L154:          mFormatArgumentData.ArgumentValueType = 4;
L183:          mFormatArgumentData.ArgumentValue = mFText;
L219:          mFormatArgumentData.ArgumentValueInt = 0;
L251:          mFormatArgumentData.ArgumentValueFloat = 0;
L283:          mFormatArgumentData.ArgumentValueGender = 0;
L312:          mFormatArgumentData1.ArgumentName = "clientNat";
L350:          mFormatArgumentData1.ArgumentValueType = 4;
L379:          mFormatArgumentData1.ArgumentValue = mFText1;
L415:          mFormatArgumentData1.ArgumentValueInt = 0;
L447:          mFormatArgumentData1.ArgumentValueFloat = 0;
L479:          mFormatArgumentData1.ArgumentValueGender = 0;
L508:          TArray<FormatArgumentData> mTArray<FormatArgumentData> = [mFormatArgumentData, mFormatArgumentData1];
L537:          FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArray<FormatArgumentData>);
L786:          FText Tooltip = mFText2;
============ END FUNCTION GetConnectingNATIsse ==============





============ BEGIN FUNCTION IsNATIssue ==============
L0:            bool mbool = NotEqual_ByteByte(HostNAT, 0);
L31:           if (!mbool) goto L185;
L45:           mbool = NotEqual_ByteByte(HostNAT, 1);
L76:           if (!mbool) goto L201;
L90:           mbool = NotEqual_ByteByte(HostNAT, 2);
L121:          if (!mbool) goto L386;
L135:          mbool = NotEqual_ByteByte(HostNAT, 3);
L166:          if (!mbool) goto L386;
L180:          <End of Inlined Event Graph Function>;
L185:          bool isIssue = false;
L196:          <End of Inlined Event Graph Function>;
L201:          bool mbool1 = NotEqual_ByteByte(ClientNat, 0);
L232:          if (!mbool1) goto L185;
L246:          mbool1 = NotEqual_ByteByte(ClientNat, 1);
L277:          if (!mbool1) goto L185;
L291:          mbool1 = NotEqual_ByteByte(ClientNat, 2);
L322:          if (!mbool1) goto L386;
L336:          mbool1 = NotEqual_ByteByte(ClientNat, 3);
L367:          if (!mbool1) goto L386;
L381:          <End of Inlined Event Graph Function>;
L386:          isIssue = true;
============ END FUNCTION IsNATIssue ==============





============ BEGIN FUNCTION UpdateNATWarningForHost ==============
L0:            LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L24:           FGLocalPlayer* mFGLocalPlayer = Cast<Class /Script/FactoryGame.FGLocalPlayer>(mLocalPlayer);
L60:           bool mbool = mFGLocalPlayer;
L89:           if (!mbool) goto L492;
L103:          uint8 muint8 = FGNetworkLibrary->GetCachedNATType(mFGLocalPlayer);
L162:          this->IsNATIssue(muint8, this->mNatType, [ref] mbool1);
L203:          uint8 Temp_byte_Variable = 0;
L223:          uint8 Temp_byte_Variable1 = 1;
L243:          bool Temp_bool_Variable = mbool1;
L262:          this->Widget_NatInformation->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint81;
});
L351:          muint8 = FGNetworkLibrary->GetCachedNATType(mFGLocalPlayer);
L410:          this->GetHostingNATIsse(muint8, this->mNatType, [ref] mFText);
L451:          this->Widget_NatInformation->SetToolTipText([ref] mFText);
============ END FUNCTION UpdateNATWarningForHost ==============





============ BEGIN FUNCTION SetupForManagePlayers ==============
L0:            bool mbool = PlayerState->IsServerAdmin();
L42:           FText Temp_text_Variable = "[object Object]";
L115:          FString mFString = PlayerState->GetPlayerName();
L165:          FText mFText = KismetTextLibrary->Conv_StringToText(mFString);
L224:          int32 mint32 = Conv_ByteToInt(PlayerState->Ping);
L283:          UniqueNetIdRepl mUniqueNetIdRepl = PlayerState->GetUniqeNetId();
L333:          int32 mint321 = Multiply_IntInt(mint32, 4);
L375:          mFormatArgumentData.ArgumentName = "Ping";
L408:          mFormatArgumentData.ArgumentValueType = 0;
L437:          mFormatArgumentData.ArgumentValue = ;
L466:          mFormatArgumentData.ArgumentValueInt = mint321;
L502:          mFormatArgumentData.ArgumentValueFloat = 0;
L534:          mFormatArgumentData.ArgumentValueGender = 0;
L563:          FText Temp_text_Variable1 = "[object Object]";
L655:          PlayerController* mPlayerController = this->GetOwningPlayer();
L679:          HUDHelpers->HasValidAdminInterface(mPlayerController, this, [ref] mbool1);
L734:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L758:          bool Temp_bool_Variable = mbool1;
L777:          OnlinePresence mOnlinePresence = FGPresenceLibrary->GetPresenceFromNetId(mPlayerController1, [ref] mUniqueNetIdRepl);
L845:          BlueprintSessionResult mBlueprintSessionResult = FGPresenceLibrary->GetSessionFromPresence([ref] mOnlinePresence);
L904:          FString mFString1 = FGPresenceLibrary->GetPresenceString([ref] mOnlinePresence);
L963:          bool mbool2 = FGSessionLibrary->IsSessionValid(mBlueprintSessionResult);
L1014:         FText mFText1 = KismetTextLibrary->Conv_StringToText(mFString1);
L1073:         bool mbool3 = Not_PreBool(mbool1);
L1102:         mFormatArgumentData1.ArgumentName = "Activity";
L1139:         mFormatArgumentData1.ArgumentValueType = 4;
L1168:         mFormatArgumentData1.ArgumentValue = mFText1;
L1204:         mFormatArgumentData1.ArgumentValueInt = 0;
L1236:         mFormatArgumentData1.ArgumentValueFloat = 0;
L1268:         mFormatArgumentData1.ArgumentValueGender = 0;
L1297:         TArray<FormatArgumentData> mTArray<FormatArgumentData> = [mFormatArgumentData1, mFormatArgumentData];
L1326:         FText mFText2 = KismetTextLibrary->Format("[object Object]", mTArray<FormatArgumentData>);
L1446:         this->Internal_UpdateButton(mFText, true, mFText2, 0, false, 0, "[object Object]", true, true, mbool, true, mbool3, switch (Temp_bool_Variable) {
case false -> Temp_text_Variable1;
case true -> Temp_text_Variable;
default -> mFText3;
}, mbool2, ScriptStruct /Script/OnlineSubsystemUtils.BlueprintSessionResult(), false, false, 0, false, false, false);
============ END FUNCTION SetupForManagePlayers ==============





============ BEGIN FUNCTION SetupForJoinInvite ==============
L0:            UniqueNetIdRepl mUniqueNetIdRepl = FGInviteLibrary->GetInviteSenderUniqueNetId([ref] invite);
L59:           PlayerController* mPlayerController = this->GetOwningPlayer();
L83:           BP_OnlineHelpers->CanJoinInvite(mPlayerController, invite, this, [ref] muint8);
L147:          FText Temp_text_Variable = "[object Object]";
L235:          bool mbool = NotEqual_ByteByte(muint8, 4);
L266:          FText Temp_text_Variable1 = "[object Object]";
L362:          FText Temp_text_Variable2 = "[object Object]";
L455:          FText Temp_text_Variable3 = "[object Object]";
L565:          FText Temp_text_Variable4 = "[object Object]";
L634:          LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L658:          uint8 Temp_byte_Variable = muint8;
L685:          bool mbool1 = FGNetworkLibrary->GetNameFromUniqueNetId(mLocalPlayer, [ref] mUniqueNetIdRepl, [ref] mFString);
L754:          FText mFText = KismetTextLibrary->Conv_StringToText(mFString);
L813:          BP_OnlineHelpers->GetInvitePresence(mLocalPlayer, invite, this, [ref] mOnlinePresence);
L877:          BlueprintSessionResult mBlueprintSessionResult = FGPresenceLibrary->GetSessionFromPresence([ref] mOnlinePresence);
L936:          FString mFString1 = FGPresenceLibrary->GetPresenceString([ref] mOnlinePresence);
L995:          bool mbool2 = FGSessionLibrary->IsSessionValid(mBlueprintSessionResult);
L1046:         FText mFText1 = KismetTextLibrary->Conv_StringToText(mFString1);
L1105:         bool mbool3 = Not_PreBool(mbool2);
L1134:         uint8 muint81 = FGSessionLibrary->GetSessionVisibility([ref] mBlueprintSessionResult);
L1193:         FGOnlineSessionSettings mFGOnlineSessionSettings = FGSessionLibrary->GetSessionSettings([ref] mBlueprintSessionResult);
L1252:         bool mbool4 = EqualEqual_ByteByte(muint81, 0);
L1283:         bool mbool5 = FGPresenceLibrary->IsPlayingThisGame([ref] mOnlinePresence);
L1334:         bool mbool6 = FGPresenceLibrary->IsOnline([ref] mOnlinePresence);
L1385:         bool mbool7 = Not_PreBool(mbool5);
L1414:         bool mbool8 = BooleanOR(mbool7, mbool3);
L1452:         this->Internal_UpdateButton(mFText, mbool6, mFText1, mFGOnlineSessionSettings.NumConnectedPlayers, mbool4, mFGOnlineSessionSettings.PlayDuration, "[object Object]", mbool8, mbool5, false, true, mbool, switch (Temp_byte_Variable) {
case 0 -> Temp_text_Variable;
case 1 -> Temp_text_Variable1;
case 2 -> Temp_text_Variable2;
case 3 -> Temp_text_Variable3;
case 4 -> Temp_text_Variable4;
default -> mFText2;
}, mbool2, ScriptStruct /Script/OnlineSubsystemUtils.BlueprintSessionResult(), true, false, mFGOnlineSessionSettings.natType, false, true, false);
============ END FUNCTION SetupForJoinInvite ==============





============ BEGIN FUNCTION SetupForSendInvite ==============
L0:            LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L24:           bool mbool = FGFriendsLibrary->IsWaitingForData(mLocalPlayer, [ref] friend);
L84:           if (!mbool) goto L412;
L98:           LocalPlayer* mLocalPlayer1 = this->GetOwningLocalPlayer();
L122:          bool mbool1 = FGFriendsLibrary->GetFriendName(mLocalPlayer1, [ref] friend, [ref] mFString);
L191:          FText mFText = KismetTextLibrary->Conv_StringToText(mFString);
L250:          this->Internal_UpdateButton(mFText, false, "[object Object]", 0, false, 0, "[object Object]", true, false, true, true, false, , false, ScriptStruct /Script/OnlineSubsystemUtils.BlueprintSessionResult(), false, false, 0, true, false, false);
L407:          <End of Inlined Event Graph Function>;
L412:          FText Temp_text_Variable = "[object Object]";
L476:          FText Temp_text_Variable1 = "[object Object]";
L547:          FText Temp_text_Variable2 = ;
L567:          FText Temp_text_Variable3 = "[object Object]";
L647:          FText Temp_text_Variable4 = "[object Object]";
L736:          PlayerController* mPlayerController = this->GetOwningPlayer();
L760:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L784:          BP_OnlineHelpers->CanSendInvite(mPlayerController, friend, this, [ref] muint8);
L848:          BP_OnlineHelpers->IsFriendInOnlineSession(mPlayerController1, [ref] friend, this, [ref] mbool2);
L912:          uint8 Temp_byte_Variable = muint8;
L939:          bool mbool3 = Not_PreBool(mbool2);
L968:          bool mbool4 = NotEqual_ByteByte(muint8, 3);
L999:          FText Temp_text_Variable5 = "[object Object]";
L1064:         PlayerController* mPlayerController2 = this->GetOwningPlayer();
L1088:         mLocalPlayer1 = this->GetOwningLocalPlayer();
L1112:         OnlinePresence mOnlinePresence = BP_OnlineHelpers->GetFriendPresence([ref] friend, mPlayerController2, this);
L1185:         mbool1 = FGFriendsLibrary->GetFriendName(mLocalPlayer1, [ref] friend, [ref] mFString);
L1254:         BP_OnlineHelpers->GetCompactPresence(mOnlinePresence, this, [ref] mFCompactPresence);
L1309:         mFText = KismetTextLibrary->Conv_StringToText(mFString);
L1368:         bool mbool5 = BooleanOR(mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA, mFCompactPresence.IsPlayingOtherGame_7_ED9DBFB84A164DABCD8A488B070BE8C3);
L1424:         bool mbool6 = Not_PreBool(mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA);
L1462:         bool Temp_bool_Variable = mbool5;
L1481:         bool mbool7 = BooleanOR(mbool6, mbool3);
L1519:         bool Temp_bool_Variable1 = mFCompactPresence.IsOnline_3_0B4A819747012DC786FA4097038402CD;
L1547:         FText mFText1 = KismetTextLibrary->Conv_StringToText(mFCompactPresence.PresenceString_8_73B095B54A983F2391EE189D60CC1495);
L1615:         BP_OnlineHelpers->GetFriendSession(friend, mLocalPlayer1, this, [ref] mBlueprintSessionResult);
L1679:         FGOnlineSessionSettings mFGOnlineSessionSettings = FGSessionLibrary->GetSessionSettings([ref] mBlueprintSessionResult);
L1738:         uint8 muint81 = FGSessionLibrary->GetSessionVisibility([ref] mBlueprintSessionResult);
L1797:         bool mbool8 = EqualEqual_ByteByte(muint81, 0);
L1828:         this->Internal_UpdateButton(mFText, mFCompactPresence.IsOnline_3_0B4A819747012DC786FA4097038402CD, switch (Temp_bool_Variable1) {
case false -> Temp_text_Variable5;
case true -> switch (Temp_bool_Variable) {
case false -> Temp_text_Variable;
case true -> mFText1;
default -> mFText3;
};
default -> mFText2;
}, mFGOnlineSessionSettings.NumConnectedPlayers, mbool8, mFGOnlineSessionSettings.PlayDuration, "[object Object]", mbool7, mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA, false, true, mbool4, switch (Temp_byte_Variable) {
case 0 -> Temp_text_Variable4;
case 1 -> Temp_text_Variable3;
case 2 -> Temp_text_Variable2;
case 3 -> Temp_text_Variable1;
default -> mFText4;
}, mbool2, ScriptStruct /Script/OnlineSubsystemUtils.BlueprintSessionResult(), false, mFCompactPresence.IsPlayingOtherGame_7_ED9DBFB84A164DABCD8A488B070BE8C3, mFGOnlineSessionSettings.natType, true, true, false);
============ END FUNCTION SetupForSendInvite ==============





============ BEGIN FUNCTION Internal_UpdateButton ==============
L0:            FString mFString = KismetTextLibrary->Conv_TextToString([ref] Title);
L59:           this->mTitle = mFString;
L86:           this->mIsOnline = IsOnline;
L105:          this->mAdditionalInfo = AdditionalInfo;
L132:          this->mPlayersInSession = playersInSession;
L159:          this->mPrivateSession = privateSession;
L178:          this->mTimePlayed = TimePlayed;
L205:          this->mActionButtonText = ActionButtonText;
L232:          this->mHideSessionInfo = hideSessionInfo;
L251:          this->mIsPlayingSatisfactory = isPlayingSatisfactory;
L270:          this->mHideActionButton = hideActionButton;
L289:          this->mHideSecondaryActionButton = hideSecondaryActionButton;
L308:          this->mDisableActionButton = disableActionButton;
L327:          this->mActionButtonTooltip = actionButtonTooltip;
L354:          this->mInAGame = inAGame;
L373:          this->mSession = session;
L400:          this->mIsSelectable = isSelectable;
L419:          this->IsNonInteractable = IsNonInteractable;
L438:          this->mNatType = natType;
L465:          this->mIsHost = IsHost;
L484:          this->mCareAboutNAT = careAboutNAT;
L503:          this->mShowWarning = ShowWarning;
L522:          this->UpdateButton();
============ END FUNCTION Internal_UpdateButton ==============





============ BEGIN FUNCTION SetupForJoinGame ==============
L0:            LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L24:           BP_OnlineHelpers->GetFriendSession(friend, mLocalPlayer, this, [ref] mBlueprintSessionResult);
L88:           FGOnlineSessionSettings mFGOnlineSessionSettings = FGSessionLibrary->GetSessionSettings([ref] mBlueprintSessionResult);
L147:          FGOnlineSessionSettings SessionSettings = mFGOnlineSessionSettings;
L174:          FText Temp_text_Variable = "[object Object]";
L239:          BlueprintSessionResult Temp_struct_Variable = ScriptStruct /Script/OnlineSubsystemUtils.BlueprintSessionResult();
L271:          FText Temp_text_Variable1 = "[object Object]";
L333:          FText Temp_text_Variable2 = "[object Object]";
L422:          FText Temp_text_Variable3 = "[object Object]";
L532:          FText Temp_text_Variable4 = "[object Object]";
L624:          FText Temp_text_Variable5 = "[object Object]";
L731:          FText Temp_text_Variable6 = "[object Object]";
L841:          FText Temp_text_Variable7 = "[object Object]";
L933:          FText Temp_text_Variable8 = "[object Object]";
L997:          PlayerController* mPlayerController = this->GetOwningPlayer();
L1021:         bool Temp_bool_Variable3 = true;
L1032:         BP_OnlineHelpers->GetFriendSession(friend, mPlayerController, this, [ref] mBlueprintSessionResult1);
L1096:         bool mbool = FGSessionLibrary->IsSessionValid(mBlueprintSessionResult1);
L1147:         bool Temp_bool_Variable4 = false;
L1158:         bool Temp_bool_Variable1 = mbool;
L1177:         bool mbool1 = Not_PreBool(mbool);
L1206:         bool Temp_bool_Variable5 = false;
L1217:         bool Temp_bool_Variable6 = false;
L1228:         bool Temp_bool_Variable7 = true;
L1239:         bool Temp_bool_Variable8 = true;
L1250:         mLocalPlayer = this->GetOwningLocalPlayer();
L1274:         bool Temp_bool_Variable9 = false;
L1285:         bool mbool2 = FGFriendsLibrary->GetFriendName(mLocalPlayer, [ref] friend, [ref] mFString);
L1354:         uint8 muint8 = FGFriendsLibrary->IsFriendJoinable(mLocalPlayer, [ref] friend);
L1422:         FText mFText = KismetTextLibrary->Conv_StringToText(mFString);
L1481:         uint8 Temp_byte_Variable = muint8;
L1508:         bool mbool3 = NotEqual_ByteByte(muint8, 6);
L1539:         bool mbool4 = Not_PreBool(mbool3);
L1568:         BP_OnlineHelpers->GetFriendSession(friend, mLocalPlayer, this, [ref] mBlueprintSessionResult);
L1632:         OnlinePresence mOnlinePresence = BP_OnlineHelpers->GetFriendPresence([ref] friend, mLocalPlayer, this);
L1705:         BP_OnlineHelpers->GetCompactPresence(mOnlinePresence, this, [ref] mFCompactPresence);
L1760:         uint8 muint81 = FGSessionLibrary->GetSessionVisibility([ref] mBlueprintSessionResult);
L1819:         bool mbool5 = BooleanOR(mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA, mFCompactPresence.IsPlayingOtherGame_7_ED9DBFB84A164DABCD8A488B070BE8C3);
L1875:         bool mbool6 = EqualEqual_ByteByte(muint81, 0);
L1906:         bool Temp_bool_Variable2 = mbool5;
L1925:         bool mbool7 = Not_PreBool(mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA);
L1963:         bool Temp_bool_Variable = mFCompactPresence.IsOnline_3_0B4A819747012DC786FA4097038402CD;
L1991:         bool mbool8 = BooleanOR(mbool7, mbool1);
L2029:         FText mFText1 = KismetTextLibrary->Conv_StringToText(mFCompactPresence.PresenceString_8_73B095B54A983F2391EE189D60CC1495);
L2097:         uint8 Temp_byte_Variable1 = muint8;
L2124:         bool mbool9 = BooleanOR(mbool8, switch (Temp_byte_Variable1) {
case 0 -> Temp_bool_Variable3;
case 1 -> Temp_bool_Variable4;
case 2 -> Temp_bool_Variable5;
case 3 -> Temp_bool_Variable6;
case 4 -> Temp_bool_Variable7;
case 5 -> Temp_bool_Variable8;
case 6 -> Temp_bool_Variable9;
default -> mbool10;
});
L2283:         this->Internal_UpdateButton(mFText, mFCompactPresence.IsOnline_3_0B4A819747012DC786FA4097038402CD, switch (Temp_bool_Variable) {
case false -> Temp_text_Variable;
case true -> switch (Temp_bool_Variable2) {
case false -> Temp_text_Variable8;
case true -> mFText1;
default -> mFText3;
};
default -> mFText2;
}, SessionSettings.NumConnectedPlayers, mbool6, SessionSettings.PlayDuration, "[object Object]", mbool9, mFCompactPresence.IsPlayingThisGame_6_D07FB68E4051EB599EEFC5B695C2B0FA, true, true, mbool3, switch (Temp_byte_Variable) {
case 0 -> Temp_text_Variable7;
case 1 -> Temp_text_Variable6;
case 2 -> Temp_text_Variable5;
case 3 -> Temp_text_Variable4;
case 4 -> Temp_text_Variable3;
case 5 -> Temp_text_Variable2;
case 6 -> Temp_text_Variable1;
default -> mFText4;
}, mbool, switch (Temp_bool_Variable1) {
case false -> Temp_struct_Variable;
case true -> mBlueprintSessionResult1;
default -> mBlueprintSessionResult2;
}, mbool4, mbool7, SessionSettings.natType, false, true, switch (Temp_byte_Variable1) {
case 0 -> Temp_bool_Variable3;
case 1 -> Temp_bool_Variable4;
case 2 -> Temp_bool_Variable5;
case 3 -> Temp_bool_Variable6;
case 4 -> Temp_bool_Variable7;
case 5 -> Temp_bool_Variable8;
case 6 -> Temp_bool_Variable9;
default -> mbool10;
});
============ END FUNCTION SetupForJoinGame ==============





============ BEGIN FUNCTION SetButtonColor ==============
L0:            mSlateColor.SpecifiedColor = Color;
L36:           mSlateColor.ColorUseRule = 0;
L65:           mSlateBrush.ImageSize = this->mButton->WidgetStyle.Normal.ImageSize;
L141:          mSlateBrush.Margin = this->mButton->WidgetStyle.Normal.Margin;
L217:          mSlateBrush.TintColor = mSlateColor;
L253:          mSlateBrush.ResourceObject = this->mButton->WidgetStyle.Normal.ResourceObject;
L321:          mSlateBrush.DrawAs = this->mButton->WidgetStyle.Normal.DrawAs;
L397:          mSlateBrush.Tiling = this->mButton->WidgetStyle.Normal.Tiling;
L473:          mSlateBrush.Mirroring = this->mButton->WidgetStyle.Normal.Mirroring;
L549:          mButtonStyle.Normal = mSlateBrush;
L585:          mButtonStyle.Hovered = this->mButton->WidgetStyle.Hovered;
L652:          mButtonStyle.Pressed = this->mButton->WidgetStyle.Pressed;
L719:          mButtonStyle.Disabled = this->mButton->WidgetStyle.Disabled;
L786:          mButtonStyle.NormalPadding = this->mButton->WidgetStyle.NormalPadding;
L853:          mButtonStyle.PressedPadding = this->mButton->WidgetStyle.PressedPadding;
L920:          mButtonStyle.PressedSlateSound = this->mButton->WidgetStyle.PressedSlateSound;
L987:          mButtonStyle.HoveredSlateSound = this->mButton->WidgetStyle.HoveredSlateSound;
L1054:         this->mButton->SetStyle([ref] mButtonStyle);
============ END FUNCTION SetButtonColor ==============





============ BEGIN FUNCTION ClearListSelection ==============
L0:            ExecutionFlow.Push(L501);
L5:            int32 Temp_int_Variable = 0;
L28:           int32 mint32 = this->mParentWidget->GetChildrenCount();
L78:           bool mbool = LessEqual_IntInt(Temp_int_Variable, mint32);
L116:          if (!mbool) goto ExecutionFlow.Pop();
L126:          ExecutionFlow.Push(L427);
L131:          Widget* mWidget = this->mParentWidget->GetChildAt(Temp_int_Variable);
L182:          Widget_Multiplayer_ListButton* mWidget_Multiplayer_ListButton = Cast<WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/Menu/Widget_Multiplayer_ListButton.Widget_Multiplayer_ListButton_C>(mWidget);
L218:          bool mbool1 = mWidget_Multiplayer_ListButton;
L247:          if (!mbool1) goto ExecutionFlow.Pop();
L257:          bool mbool2 = NotEqual_ObjectObject(mWidget_Multiplayer_ListButton, this);
L287:          if (!mbool2) goto ExecutionFlow.Pop();
L297:          mWidget_Multiplayer_ListButton->mIsSelected = false;
L330:          mWidget_Multiplayer_ListButton->UpdateButton();
L366:          mWidget_Multiplayer_ListButton->ActionButtonContainer->SetVisibility(2);
L426:          goto ExecutionFlow.Pop();
L427:          int32 mint321 = Add_IntInt(Temp_int_Variable, 1);
L469:          Temp_int_Variable = mint321;
L496:          goto L28;
============ END FUNCTION ClearListSelection ==============





============ BEGIN FUNCTION UpdateButton ==============
L0:            ExecutionFlow.Push(L4338);
L5:            this->ActionButtonText->SetText(this->mActionButtonText);
L50:           bool mbool = Not_PreBool(this->mHideSessionInfo);
L79:           bool mbool1 = BooleanAND(mbool, this->mIsPlayingSatisfactory);
L117:          if (!mbool1) goto L3189;
L131:          this->SessionInfo->SetVisibility(3);
L169:          this->mTitleObject->SetTitle(this->mTitle);
L214:          this->mAdditionalInfoObject->SetText(this->mAdditionalInfo);
L259:          if (!this->mIsOnline) goto L3232;
L273:          if (!this->mIsPlayingSatisfactory) goto L3582;
L287:          if (!this->mInAGame) goto L3582;
L301:          HUDHelpers->GetFactoryGameWhite(this, [ref] mSlateColor, [ref] mLinearColor);
L356:          mSlateBrush.ImageSize = ScriptStruct /Script/CoreUObject.Vector2D(X = 64, Y = 64);
L407:          mSlateBrush.Margin = ScriptStruct /Script/SlateCore.Margin(Left = 0, Top = 0, Right = 0, Bottom = 0);
L468:          mSlateBrush.TintColor = mSlateColor;
L504:          mSlateBrush.ResourceObject = Menu_PlayerIcon_Satisfactory;
L532:          mSlateBrush.DrawAs = 3;
L561:          mSlateBrush.Tiling = 0;
L590:          mSlateBrush.Mirroring = 0;
L619:          SlateBrush LocalIconBrush = mSlateBrush;
L646:          this->mIcon->SetBrush([ref] LocalIconBrush);
L691:          int32 Temp_int_Variable = 0;
L714:          int32 mint32 = this->PlayersInSessionContainer->GetChildrenCount();
L764:          bool mbool2 = LessEqual_IntInt(Temp_int_Variable, mint32);
L802:          if (!mbool2) goto ExecutionFlow.Pop();
L812:          ExecutionFlow.Push(L3932);
L817:          int32 LocalPlayerInt = Temp_int_Variable;
L844:          Widget* mWidget = this->PlayersInSessionContainer->GetChildAt(LocalPlayerInt);
L895:          Image* mImage = Cast<Class /Script/UMG.Image>(mWidget);
L931:          bool mbool3 = mImage;
L960:          if (!mbool3) goto ExecutionFlow.Pop();
L970:          int32 mint321 = this->PlayersInSessionContainer->GetChildrenCount();
L1020:         int32 mint322 = Subtract_IntInt(mint321, this->mPlayersInSession);
L1066:         bool mbool4 = Less_IntInt(LocalPlayerInt, mint322);
L1104:         if (!mbool4) goto L4006;
L1118:         HUDHelpers->GetFactoryGameDarkGray(this, [ref] mSlateColor1, [ref] mLinearColor1);
L1173:         mImage->SetBrushTintColor(mSlateColor1);
L1214:         Timespan mTimespan = MakeTimespan(0, 0, 0, this->mTimePlayed, 0);
L1271:         BreakTimespan(mTimespan, [ref] mint323, [ref] mint324, [ref] mint325, [ref] mint326, [ref] mint327);
L1335:         mFormatArgumentData.ArgumentName = "Minutes";
L1371:         mFormatArgumentData.ArgumentValueType = 0;
L1400:         mFormatArgumentData.ArgumentValue = ;
L1429:         mFormatArgumentData.ArgumentValueInt = mint325;
L1465:         mFormatArgumentData.ArgumentValueFloat = 0;
L1497:         mFormatArgumentData.ArgumentValueGender = 0;
L1526:         int32 mint328 = Multiply_IntInt(mint323, 24);
L1568:         int32 mint329 = Add_IntInt(mint328, mint324);
L1614:         mFormatArgumentData1.ArgumentName = "Hours";
L1648:         mFormatArgumentData1.ArgumentValueType = 0;
L1677:         mFormatArgumentData1.ArgumentValue = ;
L1706:         mFormatArgumentData1.ArgumentValueInt = mint329;
L1742:         mFormatArgumentData1.ArgumentValueFloat = 0;
L1774:         mFormatArgumentData1.ArgumentValueGender = 0;
L1803:         TArray<FormatArgumentData> mTArray<FormatArgumentData> = [mFormatArgumentData1, mFormatArgumentData];
L1832:         FText mFText = KismetTextLibrary->Format("[object Object]", mTArray<FormatArgumentData>);
L1950:         this->TimePlayed->SetText(mFText);
L1995:         bool mbool5 = Not_PreBool(this->mPrivateSession);
L2024:         if (!mbool5) goto L4107;
L2038:         this->playersInSession->SetVisibility(0);
L2076:         this->LockIcon->SetVisibility(1);
L2114:         if (!this->mIsSelected) goto L4188;
L2128:         HUDHelpers->GetFactoryGameDarkGray(this, [ref] mSlateColor2, [ref] mLinearColor2);
L2183:         this->SetButtonColor(mLinearColor2);
L2206:         HUDHelpers->GetFactoryGameWhite(this, [ref] mSlateColor3, [ref] mLinearColor3);
L2261:         this->TimePlayed->SetColorAndOpacity(mSlateColor3);
L2302:         this->mAdditionalInfoObject->SetColorAndOpacity(mSlateColor3);
L2343:         uint8 Temp_byte_Variable1 = 1;
L2363:         uint8 Temp_byte_Variable2 = 0;
L2383:         bool Temp_bool_Variable = this->mHideActionButton;
L2402:         this->ActionButtonContainer->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable2;
case true -> Temp_byte_Variable1;
default -> muint8;
});
L2491:         uint8 Temp_byte_Variable = 0;
L2511:         uint8 Temp_byte_Variable3 = 1;
L2531:         bool Temp_bool_Variable1 = this->mHideSecondaryActionButton;
L2550:         this->ActionButtonContainer2->SetVisibility(switch (Temp_bool_Variable1) {
case false -> Temp_byte_Variable;
case true -> Temp_byte_Variable3;
default -> muint81;
});
L2639:         bool mbool6 = Not_PreBool(this->mDisableActionButton);
L2668:         this->ActionButton->SetIsEnabled(mbool6);
L2713:         this->ActionButtonContainer->SetIsEnabled(mbool6);
L2758:         this->ActionButton->SetToolTipText([ref] this->mActionButtonTooltip);
L2799:         uint8 Temp_byte_Variable4 = 0;
L2819:         uint8 Temp_byte_Variable5 = 3;
L2839:         bool Temp_bool_Variable2 = this->IsNonInteractable;
L2858:         this->SetVisibility(switch (Temp_bool_Variable2) {
case false -> Temp_byte_Variable4;
case true -> Temp_byte_Variable5;
default -> muint82;
});
L2925:         LinearColor Temp_struct_Variable = ScriptStruct /Script/CoreUObject.LinearColor(R = 1, G = 1, B = 1, A = 1);
L2977:         LinearColor Temp_struct_Variable1 = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.09530699998140335, G = 0.09530699998140335, B = 0.09530699998140335, A = 1);
L3029:         bool Temp_bool_Variable3 = this->IsNonInteractable;
L3048:         this->mTintBorder->SetContentColorAndOpacity(switch (Temp_bool_Variable3) {
case false -> Temp_struct_Variable;
case true -> Temp_struct_Variable1;
default -> mLinearColor4;
});
L3133:         if (!this->mShowWarning) goto L4241;
L3147:         this->Widget_NatInformation->SetToolTipText([ref] this->mActionButtonTooltip);
L3188:         goto ExecutionFlow.Pop();
L3189:         this->SessionInfo->SetVisibility(1);
L3227:         goto L169;
L3232:         HUDHelpers->GetFactoryGameLightGray(this, [ref] mSlateColor4, [ref] mLinearColor5);
L3287:         mSlateBrush1.ImageSize = ScriptStruct /Script/CoreUObject.Vector2D(X = 64, Y = 64);
L3338:         mSlateBrush1.Margin = ScriptStruct /Script/SlateCore.Margin(Left = 0, Top = 0, Right = 0, Bottom = 0);
L3399:         mSlateBrush1.TintColor = mSlateColor4;
L3435:         mSlateBrush1.ResourceObject = Menu_PlayerIcon_Offline;
L3463:         mSlateBrush1.DrawAs = 3;
L3492:         mSlateBrush1.Tiling = 0;
L3521:         mSlateBrush1.Mirroring = 0;
L3550:         LocalIconBrush = mSlateBrush1;
L3577:         goto L646;
L3582:         HUDHelpers->GetFactoryGameWhite(this, [ref] mSlateColor5, [ref] mLinearColor6);
L3637:         mSlateBrush2.ImageSize = ScriptStruct /Script/CoreUObject.Vector2D(X = 64, Y = 64);
L3688:         mSlateBrush2.Margin = ScriptStruct /Script/SlateCore.Margin(Left = 0, Top = 0, Right = 0, Bottom = 0);
L3749:         mSlateBrush2.TintColor = mSlateColor5;
L3785:         mSlateBrush2.ResourceObject = Menu_PlayerIcon;
L3813:         mSlateBrush2.DrawAs = 3;
L3842:         mSlateBrush2.Tiling = 0;
L3871:         mSlateBrush2.Mirroring = 0;
L3900:         LocalIconBrush = mSlateBrush2;
L3927:         goto L646;
L3932:         int32 mint3210 = Add_IntInt(Temp_int_Variable, 1);
L3974:         Temp_int_Variable = mint3210;
L4001:         goto L714;
L4006:         HUDHelpers->GetFactoryGameWhite(this, [ref] mSlateColor6, [ref] mLinearColor7);
L4061:         mImage->SetBrushTintColor(mSlateColor6);
L4102:         goto L1214;
L4107:         this->playersInSession->SetVisibility(1);
L4145:         this->LockIcon->SetVisibility(0);
L4183:         goto L2114;
L4188:         this->SetButtonColor(ScriptStruct /Script/CoreUObject.LinearColor(R = 0, G = 0, B = 0, A = 0));
L4236:         goto L2206;
L4241:         if (!this->mCareAboutNAT) goto L4299;
L4255:         if (!this->mIsHost) goto L4284;
L4269:         this->UpdateNATWarningForHost();
L4283:         goto ExecutionFlow.Pop();
L4284:         this->UpdateNATWarningForClient();
L4298:         goto ExecutionFlow.Pop();
L4299:         this->Widget_NatInformation->SetVisibility(1);
L4337:         goto ExecutionFlow.Pop();
============ END FUNCTION UpdateButton ==============





============ BEGIN FUNCTION PreConstruct ==============
L0:            PERSISTENT_FRAME(BoolProperty /Game/FactoryGame/Interface/UI/Menu/Widget_Multiplayer_ListButton.Widget_Multiplayer_ListButton_C:ExecuteUbergraph_Widget_Multiplayer_ListButton.K2Node_Event_IsDesignTime) = IsDesignTime;
L18:           this->ExecuteUbergraph_Widget_Multiplayer_ListButton(10);
============ END FUNCTION PreConstruct ==============





============ BEGIN FUNCTION BndEvt__ActionButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature ==============
L0:            this->ExecuteUbergraph_Widget_Multiplayer_ListButton(252);
============ END FUNCTION BndEvt__ActionButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature ==============
L0:            this->ExecuteUbergraph_Widget_Multiplayer_ListButton(296);
============ END FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature ==============
L0:            this->ExecuteUbergraph_Widget_Multiplayer_ListButton(378);
============ END FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature ==============
L0:            this->ExecuteUbergraph_Widget_Multiplayer_ListButton(464);
============ END FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_Multiplayer_ListButton ==============
L10:           this->UpdateButton();
L24:           <End of Inlined Event Graph Function>;
L29:           this->mActionButtons->SetVisibility(1);
L67:           <End of Inlined Event Graph Function>;
L72:           this->ClearListSelection();
L86:           this->mIsSelected = true;
L97:           this->UpdateButton();
L111:          bool mbool = FGSessionLibrary->IsSessionValid(this->mSession);
L162:          if (!mbool) goto L228;
L176:          this->OnSessionSelected->ProcessMulticastDelegate(this->mSession);
L204:          this->OnButtonClicked->ProcessMulticastDelegate();
L223:          <End of Inlined Event Graph Function>;
L228:          this->OnSessionDeselected->ProcessMulticastDelegate();
L247:          goto L204;
L252:          if (!this->mDisableActionButton) goto L271;
L266:          <End of Inlined Event Graph Function>;
L271:          this->OnActionButtonClicked->ProcessMulticastDelegate(this);
L291:          <End of Inlined Event Graph Function>;
L296:          if (!this->mIsSelectable) goto L354;
L310:          if (!this->mIsSelected) goto L72;
L324:          this->mIsSelected = false;
L335:          this->UpdateButton();
L349:          goto L228;
L354:          this->OnButtonClicked->ProcessMulticastDelegate();
L373:          <End of Inlined Event Graph Function>;
L378:          bool mbool1 = Not_PreBool(this->mHideActionButton);
L407:          if (!mbool1) goto L469;
L421:          this->mActionButtons->SetVisibility(0);
L459:          <End of Inlined Event Graph Function>;
L464:          goto L29;
============ END FUNCTION ExecuteUbergraph_Widget_Multiplayer_ListButton ==============





============ BEGIN FUNCTION OnSessionDeselected__DelegateSignature ==============
============ END FUNCTION OnSessionDeselected__DelegateSignature ==============





============ BEGIN FUNCTION OnButtonClicked__DelegateSignature ==============
============ END FUNCTION OnButtonClicked__DelegateSignature ==============





============ BEGIN FUNCTION OnSessionSelected__DelegateSignature ==============
============ END FUNCTION OnSessionSelected__DelegateSignature ==============





============ BEGIN FUNCTION OnActionButtonClicked__DelegateSignature ==============
============ END FUNCTION OnActionButtonClicked__DelegateSignature ==============
