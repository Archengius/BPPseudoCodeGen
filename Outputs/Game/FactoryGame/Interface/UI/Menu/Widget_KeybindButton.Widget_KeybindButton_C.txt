########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/Menu/Widget_KeybindButton.Widget_KeybindButton_C
########################





============ BEGIN FUNCTION UpdateKeyMapping ==============
L0:            FText Temp_text_Variable = "[object Object]";
L61:           bool Temp_bool_Variable1 = this->mCaptureInput;
L80:           PlayerController* mPlayerController = this->GetOwningPlayer();
L104:          FText mFText = FGInputLibrary->GetKeyNameForAction(mPlayerController, this->mKeyBindData.ActionName_4_C7B4F53E48A16B3F01376F97B2DA4885, false, false);
L183:          FText mFText1 = FGInputLibrary->GetKeyNameForAxis(mPlayerController, this->mKeyBindData.ActionName_4_C7B4F53E48A16B3F01376F97B2DA4885, this->mKeyBindData.PositiveAxisScale_10_3C123C154A1C495D35EE54B5CEA682C6, false);
L279:          bool Temp_bool_Variable = this->mKeyBindData.AxisMapping_7_F80A67E0493A9BB92D5041A364C12ACF;
L307:          this->mKeyNameTextfield->SetText(switch (Temp_bool_Variable1) {
case false -> switch (Temp_bool_Variable) {
case false -> mFText;
case true -> mFText1;
default -> mFText3;
};
case true -> Temp_text_Variable;
default -> mFText2;
});
============ END FUNCTION UpdateKeyMapping ==============





============ BEGIN FUNCTION RebindKey ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           FGPlayerControllerBase* mFGPlayerControllerBase = Cast<Class /Script/FactoryGame.FGPlayerControllerBase>(mPlayerController);
L60:           bool mbool = mFGPlayerControllerBase;
L89:           if (!mbool) goto L165;
L103:          bool mbool1 = mFGPlayerControllerBase->RebindActionKey(this->mCachedFGKeyMapping);
L154:          this->mCaptureInput = false;
============ END FUNCTION RebindKey ==============





============ BEGIN FUNCTION KeyBindingOverrideConfirmed ==============
L0:            this->mKeyBindParent->mOwningWidget->mOwningMenu->RestoreFocusOnPopupClosed(false);
L81:           if (!confirmed) goto L114;
L95:           this->RebindKey();
L109:          // <End Inlined EventGraph Function>;
L114:          this->ShowKeyBindWidget();
============ END FUNCTION KeyBindingOverrideConfirmed ==============





============ BEGIN FUNCTION GetHoverColor ==============
L0:            HUDHelpers->GetFactoryGameDarkGray(this, [ref] mSlateColor, [ref] mLinearColor);
L55:           HUDHelpers->GetFactoryGameOrange(this, [ref] mLinearColor1, [ref] mSlateColor1);
L110:          bool mbool = this->mButton->IsHovered();
L156:          bool mbool1 = mbool || this->mCaptureInput;
L194:          LinearColor mLinearColor2 = SelectColor(mLinearColor1, mLinearColor, mbool1);
L249:          LinearColor ReturnValue = mLinearColor2;
============ END FUNCTION GetHoverColor ==============





============ BEGIN FUNCTION HandleInput ==============
L0:            ExecutionFlow.Push(L1830);
L5:            FGKeyMapping mFGKeyMapping = FGInputLibrary->CreateFGKeyMappingStruct(this->mKeyBindData.ActionName_4_C7B4F53E48A16B3F01376F97B2DA4885, this->mKeyBindData.AxisMapping_7_F80A67E0493A9BB92D5041A364C12ACF, this->mKeyBindData.PositiveAxisScale_10_3C123C154A1C495D35EE54B5CEA682C6, InputEvent, keyPressed);
L127:          this->mCachedFGKeyMapping = mFGKeyMapping;
L154:          PlayerController* mPlayerController = this->GetOwningPlayer();
L178:          bool mbool = FGInputLibrary->IsFGKeyMappingAvailable(mPlayerController, [ref] this->mCachedFGKeyMapping);
L238:          if (!mbool) goto L267;
L252:          this->RebindKey();
L266:          goto ExecutionFlow.Pop();
L267:          bool Temp_bool_True_if_break_was_hit_Variable = false;
L278:          int32 Temp_int_Loop_Counter_Variable = 0;
L301:          int32 Temp_int_Array_Index_Variable = 0;
L324:          bool mbool1 = !Temp_bool_True_if_break_was_hit_Variable;
L353:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] this->mKeyBindParent->mKeyInputsData);
L434:          bool mbool2 = Temp_int_Loop_Counter_Variable < mint32;
L472:          bool mbool3 = mbool1 && mbool2;
L510:          if (!mbool3) goto ExecutionFlow.Pop();
L520:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L547:          ExecutionFlow.Push(L1116);
L552:          KismetArrayLibrary->Array_Get([ref] this->mKeyBindParent->mKeyInputsData, Temp_int_Array_Index_Variable, [ref] mKeyBindData);
L633:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L657:          FGKeyMapping mFGKeyMapping1 = FGInputLibrary->GetOverlappingKeyMapping(mPlayerController1, [ref] this->mCachedFGKeyMapping);
L725:          bool Temp_bool_Variable1 = mFGKeyMapping1.IsAxisMapping;
L753:          bool Temp_bool_Variable = mFGKeyMapping1.IsAxisMapping;
L781:          bool mbool4 = mFGKeyMapping1.AxisKeyMapping.Scale > 0;
L833:          bool mbool5 = mKeyBindData.PositiveAxisScale_10_3C123C154A1C495D35EE54B5CEA682C6 == mbool4;
L880:          bool mbool6 = mKeyBindData.ActionName_4_C7B4F53E48A16B3F01376F97B2DA4885 == switch (Temp_bool_Variable) {
case false -> mFGKeyMapping1.ActionKeyMapping.ActionName;
case true -> mFGKeyMapping1.AxisKeyMapping.AxisName;
default -> mFName;
};
L1007:         bool mbool7 = mbool6 && mbool5;
L1045:         if (!switch (Temp_bool_Variable1) {
case false -> mbool6;
case true -> mbool7;
default -> mbool8;
}) goto ExecutionFlow.Pop();
L1099:         ExecutionFlow.Push(L1190);
L1104:         Temp_bool_True_if_break_was_hit_Variable = true;
L1115:         goto ExecutionFlow.Pop();
L1116:         int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L1158:         Temp_int_Loop_Counter_Variable = mint321;
L1185:         goto L324;
L1190:         KismetArrayLibrary->Array_Get([ref] this->mKeyBindParent->mKeyInputsData, Temp_int_Array_Index_Variable, [ref] mKeyBindData);
L1271:         mFormatArgumentData.ArgumentName = "DisplayName";
L1311:         mFormatArgumentData.ArgumentValueType = 4;
L1340:         mFormatArgumentData.ArgumentValue = mKeyBindData.DisplayName_5_0A86F675465E0C811D17A287BB986630;
L1385:         mFormatArgumentData.ArgumentValueInt = 0;
L1417:         mFormatArgumentData.ArgumentValueFloat = 0;
L1449:         mFormatArgumentData.ArgumentValueGender = 0;
L1478:         TArray<FormatArgumentData> mTArrayFormatArgumentData = [mFormatArgumentData];
L1498:         FText mFText = KismetTextLibrary->Format("[object Object]", mTArrayFormatArgumentData);
L1661:         mFScriptDelegate->BindUFunction(this, KeyBindingOverrideConfirmed);
L1684:         PlayerController* mPlayerController2 = this->GetOwningPlayer();
L1708:         FGBlueprintFunctionLibrary->AddPopupWithCloseDelegate(mPlayerController2, "[object Object]", mFText, [ref] mFScriptDelegate, 1, nullptr, nullptr);
L1829:         goto ExecutionFlow.Pop();
============ END FUNCTION HandleInput ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_KeybindButton, from label L40;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_25_OnButtonClickedEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__mButton_K2Node_ComponentBoundEvent_25_OnButtonClickedEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_KeybindButton, from label L113;
============ END FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_25_OnButtonClickedEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__mButton_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_KeybindButton, from label L380;
============ END FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__mButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_KeybindButton, from label L385;
============ END FUNCTION BndEvt__mButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature ==============





============ BEGIN FUNCTION ShowKeyBindWidget ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShowKeyBindWidget;
L0:            // Implementation: Function ExecuteUbergraph_Widget_KeybindButton, from label L475;
============ END FUNCTION ShowKeyBindWidget ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_KeybindButton ==============
L10:           this->mCaptureInput = true;
L21:           this->UpdateKeyMapping();
L35:           // <End Inlined EventGraph Function>;
L40:           // <Begin Inlined EventGraph Function Construct>;
L40:           this->mLabel->SetText(this->mKeyBindData.DisplayName_5_0A86F675465E0C811D17A287BB986630);
L94:           this->UpdateKeyMapping();
L108:          // <End Inlined EventGraph Function>;
L113:          // <Begin Inlined EventGraph Function BndEvt__mButton_K2Node_ComponentBoundEvent_25_OnButtonClickedEvent__DelegateSignature>;
L113:          PlayerController* mPlayerController = this->GetOwningPlayer();
L137:          Widget_KeyBindFocus* mWidget_KeyBindFocus = WidgetBlueprintLibrary->Create(this, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/Menu/Widget_KeyBindFocus.Widget_KeyBindFocus_C), mPlayerController);
L198:          KismetSystemLibrary->SetObjectPropertyByName(mWidget_KeyBindFocus, "mKeyOwner", this);
L253:          mWidget_KeyBindFocus->AddToViewport(0);
L290:          PlayerController* mPlayerController1 = this->GetOwningPlayer();
L314:          AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Interface/UI/Audio/MainMenu/Play_UI_MainMenu_Click.Play_UI_MainMenu_Click), mPlayerController1, true);
L375:          goto L10;
L380:          // <Begin Inlined EventGraph Function BndEvt__mButton_K2Node_ComponentBoundEvent_3_OnButtonReleasedEvent__DelegateSignature>;
L380:          // <End Inlined EventGraph Function>;
L385:          // <Begin Inlined EventGraph Function BndEvt__mButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature>;
L385:          PlayerController* mPlayerController2 = this->GetOwningPlayer();
L409:          AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Interface/UI/Audio/MainMenu/Play_UI_MainMenu_MouseOver.Play_UI_MainMenu_MouseOver), mPlayerController2, true);
L470:          // <End Inlined EventGraph Function>;
L475:          // <Begin Inlined EventGraph Function ShowKeyBindWidget>;
L475:          goto L113;
============ END FUNCTION ExecuteUbergraph_Widget_KeybindButton ==============
