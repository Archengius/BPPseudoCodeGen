########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/Menu/PauseMenu/Widget_Options.Widget_Options_C
########################





============ BEGIN FUNCTION IsOptionRowRelevant ==============
L0:            bool mbool = KismetSystemLibrary->IsServer(this);
L43:           OptionRowData mOptionRowData = DynamicOptionRow->GetOptionRowData();
L93:           bool mbool1 = !mbool;
L122:          bool mbool2 = mOptionRowData.NetmodeAvailability == 0;
L162:          bool mbool3 = mOptionRowData.NetmodeAvailability == 2;
L202:          bool mbool4 = mOptionRowData.NetmodeAvailability == 1;
L242:          bool mbool5 = mbool1 && mbool3;
L280:          bool mbool6 = mbool4 && mbool;
L318:          bool mbool7 = mbool2 || mbool6;
L356:          bool mbool8 = mbool7 || mbool5;
L394:          bool ReturnValue = mbool8;
============ END FUNCTION IsOptionRowRelevant ==============





============ BEGIN FUNCTION UpdateOnlineButtonsVisiblity ==============
L0:            LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L24:           FGLocalPlayer* mFGLocalPlayer = Cast<Class /Script/FactoryGame.FGLocalPlayer>(mLocalPlayer);
L60:           bool mbool = mFGLocalPlayer;
L89:           if (!mbool) goto L659;
L103:          uint8 Temp_byte_Variable6 = 1;
L123:          uint8 Temp_byte_Variable7 = 1;
L143:          uint8 Temp_byte_Variable8 = 4;
L163:          uint8 Temp_byte_Variable9 = 4;
L183:          uint8 muint8 = mFGLocalPlayer->GetLoginStateEpic();
L233:          uint8 Temp_byte_Variable5 = muint8;
L260:          this->mLoginEpicAccountButton->SetVisibility(switch (Temp_byte_Variable5) {
case 0 -> Temp_byte_Variable9;
case 1 -> Temp_byte_Variable8;
case 2 -> Temp_byte_Variable7;
case 3 -> Temp_byte_Variable6;
default -> muint81;
});
L381:          uint8 Temp_byte_Variable1 = 4;
L401:          uint8 Temp_byte_Variable2 = 1;
L421:          uint8 Temp_byte_Variable3 = 1;
L441:          uint8 Temp_byte_Variable4 = 1;
L461:          muint8 = mFGLocalPlayer->GetLoginStateEpic();
L511:          uint8 Temp_byte_Variable = muint8;
L538:          this->mLogoutEpicAccountButton->SetVisibility(switch (Temp_byte_Variable) {
case 0 -> Temp_byte_Variable4;
case 1 -> Temp_byte_Variable3;
case 2 -> Temp_byte_Variable2;
case 3 -> Temp_byte_Variable1;
default -> muint82;
});
============ END FUNCTION UpdateOnlineButtonsVisiblity ==============





============ BEGIN FUNCTION SetupOnlineSubmenu ==============
L0:            uint8 Temp_byte_Variable = 4;
L20:           uint8 Temp_byte_Variable1 = 1;
L40:           PlayerController* mPlayerController = this->GetOwningPlayer();
L64:           HUDHelpers->IsInMainMenu(mPlayerController, this, [ref] mbool);
L119:          bool Temp_bool_Variable = mbool;
L138:          this->mOnlineButton->SetVisibility(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable1;
case true -> Temp_byte_Variable;
default -> muint8;
});
L227:          mPlayerController = this->GetOwningPlayer();
L251:          HUDHelpers->IsInMainMenu(mPlayerController, this, [ref] mbool);
L306:          if (!mbool) goto L408;
L320:          mFScriptDelegate->BindUFunction(this, UpdateOnlineButtonsVisiblity);
L343:          TimerHandle mTimerHandle = KismetSystemLibrary->K2_SetTimerDelegate(mFScriptDelegate, 0.20000000298023224, true);
============ END FUNCTION SetupOnlineSubmenu ==============





============ BEGIN FUNCTION BindEventsForOnlineOptions ==============
L0:            LocalPlayer* mLocalPlayer = this->GetOwningLocalPlayer();
L24:           FGLocalPlayer* mFGLocalPlayer = Cast<Class /Script/FactoryGame.FGLocalPlayer>(mLocalPlayer);
L60:           bool mbool = mFGLocalPlayer;
L89:           mFScriptDelegate->BindUFunction(mFGLocalPlayer, LoginEpicAccountPortal);
L120:          this->mLoginEpicAccountButton->OnClicked.AddUnique(mFScriptDelegate);
L161:          mLocalPlayer = this->GetOwningLocalPlayer();
L185:          mFGLocalPlayer = Cast<Class /Script/FactoryGame.FGLocalPlayer>(mLocalPlayer);
L221:          mbool = mFGLocalPlayer;
L250:          mFScriptDelegate1->BindUFunction(mFGLocalPlayer, LogoutEpicAccountPortal);
L281:          this->mLogoutEpicAccountButton->OnClicked.AddUnique(mFScriptDelegate1);
============ END FUNCTION BindEventsForOnlineOptions ==============





============ BEGIN FUNCTION UpdateDynamicSettings ==============
L0:            ExecutionFlow.Push(L360);
L5:            int32 Temp_int_Loop_Counter_Variable = 0;
L28:           int32 Temp_int_Array_Index_Variable = 0;
L51:           int32 mint32 = KismetArrayLibrary->Array_Length([ref] this->DynamicOptionWidgets);
L110:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L148:          if (!mbool) goto ExecutionFlow.Pop();
L158:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L185:          ExecutionFlow.Push(L286);
L190:          KismetArrayLibrary->Array_Get([ref] this->DynamicOptionWidgets, Temp_int_Array_Index_Variable, [ref] mFGDynamicOptionsRow);
L249:          mFGDynamicOptionsRow->OnOptionValueUpdated();
L285:          goto ExecutionFlow.Pop();
L286:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L328:          Temp_int_Loop_Counter_Variable = mint321;
L355:          goto L51;
============ END FUNCTION UpdateDynamicSettings ==============





============ BEGIN FUNCTION SetupDynamicOptions ==============
L0:            ExecutionFlow.Push(L1448);
L5:            int32 Temp_int_Variable1 = 0;
L28:           int32 Temp_int_Variable = 0;
L51:           int32 mint32 = KismetSystemLibrary->MakeLiteralInt(5);
L106:          bool mbool = Temp_int_Variable1 < mint32;
L144:          if (!mbool) goto ExecutionFlow.Pop();
L154:          uint8 muint8 = Conv_IntToByte(Temp_int_Variable1);
L191:          uint8 muint81 = KismetNodeHelperLibrary->GetEnumeratorValueFromIndex(ObjectConst(Enum /Script/FactoryGame.EOptionCategory), muint8);
L259:          int32 mint321 = Conv_ByteToInt(muint81);
L296:          Temp_int_Variable = mint321;
L323:          ExecutionFlow.Push(L1300);
L328:          uint8 muint82 = Conv_IntToByte(Temp_int_Variable);
L365:          uint8 muint83 = KismetNodeHelperLibrary->GetValidValue(ObjectConst(Enum /Script/FactoryGame.EOptionCategory), muint82);
L433:          TArray<FGDynamicOptionsRow*> mTArrayFGDynamicOptionsRow = FGOptionsLibrary->GetDynamicOptionsWidgets(this, muint83);
L493:          this->DynamicOptionWidgets = mTArrayFGDynamicOptionsRow;
L520:          int32 Temp_int_Loop_Counter_Variable = 0;
L543:          int32 Temp_int_Array_Index_Variable = 0;
L566:          int32 mint322 = KismetArrayLibrary->Array_Length([ref] this->DynamicOptionWidgets);
L625:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint322;
L663:          if (!mbool1) goto ExecutionFlow.Pop();
L673:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L700:          ExecutionFlow.Push(L1374);
L705:          KismetArrayLibrary->Array_Get([ref] this->DynamicOptionWidgets, Temp_int_Array_Index_Variable, [ref] mFGDynamicOptionsRow);
L764:          bool mbool2 = this->IsOptionRowRelevant(mFGDynamicOptionsRow);
L797:          if (!mbool2) goto ExecutionFlow.Pop();
L807:          muint82 = Conv_IntToByte(Temp_int_Variable);
L844:          muint83 = KismetNodeHelperLibrary->GetValidValue(ObjectConst(Enum /Script/FactoryGame.EOptionCategory), muint82);
L912:          uint8 Temp_byte_Variable = muint83;
L939:          KismetArrayLibrary->Array_Get([ref] this->DynamicOptionWidgets, Temp_int_Array_Index_Variable, [ref] mFGDynamicOptionsRow);
L998:          PanelSlot* mPanelSlot = switch (Temp_byte_Variable) {
case 0 -> this->OptionsGameplay;
case 1 -> this->OptionAudio;
case 2 -> this->OptionsVideo;
case 3 -> this->OptionsControls;
case 4 -> this->OptionsUserInterface;
default -> mVerticalBox;
}->AddChild(mFGDynamicOptionsRow);
L1140:         KismetArrayLibrary->Array_Get([ref] this->DynamicOptionWidgets, Temp_int_Array_Index_Variable, [ref] mFGDynamicOptionsRow);
L1199:         OptionRowData mOptionRowData = mFGDynamicOptionsRow->GetOptionRowData();
L1249:         mFGDynamicOptionsRow->SetToolTipText([ref] mOptionRowData.Tooltip);
L1299:         goto ExecutionFlow.Pop();
L1300:         int32 mint323 = Temp_int_Variable1 + 1;
L1342:         Temp_int_Variable1 = mint323;
L1369:         goto L51;
L1374:         int32 mint324 = Temp_int_Loop_Counter_Variable + 1;
L1416:         Temp_int_Loop_Counter_Variable = mint324;
L1443:         goto L566;
============ END FUNCTION SetupDynamicOptions ==============





============ BEGIN FUNCTION ApplyVideoSettings ==============
L0:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L42:           mFGGameUserSettings->SetHZBOEnabled(this->mHZBOCheckbox->mIsChecked);
============ END FUNCTION ApplyVideoSettings ==============





============ BEGIN FUNCTION SetCurrentShowBreakNotifications ==============
L0:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L42:           bool mbool = mFGGameUserSettings->GetShowBreakNotification();
L84:           this->mBreakNotificationCheckbox->SetChecked(mbool, false, [ref] mbool1);
============ END FUNCTION SetCurrentShowBreakNotifications ==============





============ BEGIN FUNCTION BindEventsForGameplayOptions ==============
L0:            mFScriptDelegate->BindUFunction(this, NetworkQualityPrevious);
L23:           this->mNetworkQualityOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate);
L86:           mFScriptDelegate1->BindUFunction(this, NetworkQualityNext);
L109:          this->mNetworkQualityOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate1);
============ END FUNCTION BindEventsForGameplayOptions ==============





============ BEGIN FUNCTION ResetMouseSensitivity ==============
L0:            PlayerController* mPlayerController = this->GetOwningPlayer();
L24:           FGPlayerControllerBase* mFGPlayerControllerBase = Cast<Class /Script/FactoryGame.FGPlayerControllerBase>(mPlayerController);
L60:           bool mbool = mFGPlayerControllerBase;
L89:           float mfloat = mFGPlayerControllerBase->GetDefaultMouseSensitivity();
L139:          mFGPlayerControllerBase->SetMouseSensitivity(mfloat);
============ END FUNCTION ResetMouseSensitivity ==============





============ BEGIN FUNCTION ResetAudioSettings ==============
L0:            ExecutionFlow.Push(L926);
L5:            GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L47:           FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings);
L83:           bool mbool = mFGGameUserSettings;
L112:          if (!mbool) goto ExecutionFlow.Pop();
L122:          FGGameUserSettings* local_userSettings = mFGGameUserSettings;
L141:          TArray<FString> mTArrayFString = [];
L152:          BlueprintMapLibrary->Map_Keys([ref] this->mAudioOptions, [ref] mTArrayFString);
L202:          int32 Temp_int_Loop_Counter_Variable = 0;
L225:          int32 Temp_int_Array_Index_Variable = 0;
L248:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFString);
L307:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint32;
L345:          if (!mbool1) goto ExecutionFlow.Pop();
L355:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L382:          ExecutionFlow.Push(L852);
L387:          KismetArrayLibrary->Array_Get([ref] mTArrayFString, Temp_int_Array_Index_Variable, [ref] mFString);
L446:          float mfloat = local_userSettings->GetAudioVolume(mFString);
L505:          FName mFName = KismetStringLibrary->Conv_StringToName(mFString);
L564:          AkGameplayStatics->SetGlobalRTPCValue(mFName, mfloat, 0);
L619:          KismetArrayLibrary->Array_Get([ref] mTArrayFString, Temp_int_Array_Index_Variable, [ref] mFString);
L678:          bool mbool2 = BlueprintMapLibrary->Map_Find([ref] this->mAudioOptions, [ref] mFString, [ref] mWidget_OptionsSlider);
L747:          mfloat = local_userSettings->GetAudioVolume(mFString);
L806:          mWidget_OptionsSlider->SetProgressBarPercentage(mfloat);
L851:          goto ExecutionFlow.Pop();
L852:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L894:          Temp_int_Loop_Counter_Variable = mint321;
L921:          goto L248;
============ END FUNCTION ResetAudioSettings ==============





============ BEGIN FUNCTION UpdateGameplaySettings ==============
L0:            ExecutionFlow.Push(L582);
L5:            ExecutionFlow.Push(L407);
L10:           ExecutionFlow.Push(L86);
L15:           this->SetCurrentLanguage();
L29:           this->SetCurrentArachnophobiaMode();
L43:           this->SetCurrentHeadbobScale();
L57:           this->SetCurrentAnalyticsSetting();
L71:           this->SetCurrentShowBreakNotifications();
L85:           goto ExecutionFlow.Pop();
L86:           GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L128:          FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings);
L164:          bool mbool = mFGGameUserSettings;
L193:          if (!mbool) goto ExecutionFlow.Pop();
L203:          int32 mint32 = mFGGameUserSettings->GetNeworkQuality();
L253:          this->mNetworkQualityIndex = mint32;
L280:          KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mNetworkQualityIndex, [ref] mFText);
L339:          this->mNetworkQualityOption->mOptionNameText->SetText(mFText);
L406:          goto ExecutionFlow.Pop();
L407:          FGGameUserSettings* mFGGameUserSettings1 = FGGameUserSettings->GetFGGameUserSettings();
L449:          int32 mint321 = mFGGameUserSettings1->GetAutosaveInterval();
L499:          float mfloat = Conv_IntToFloat(mint321);
L536:          this->AutosaveIntervalSlider->SetNormalizedValue(mfloat);
L581:          goto ExecutionFlow.Pop();
============ END FUNCTION UpdateGameplaySettings ==============





============ BEGIN FUNCTION SetCurrentAnalyticsSetting ==============
L0:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L42:           bool mbool = mFGGameUserSettings->GetAnalyticsDisabled();
L84:           bool mbool1 = !mbool;
L113:          this->mDataCheckbox->SetChecked(mbool1, false, [ref] mbool2);
============ END FUNCTION SetCurrentAnalyticsSetting ==============





============ BEGIN FUNCTION SetCurrentHeadbobScale ==============
L0:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L42:           float mfloat = mFGGameUserSettings->GetHeadBobScale();
L92:           this->mHeadBobSlider->SetProgressBarPercentage(mfloat);
============ END FUNCTION SetCurrentHeadbobScale ==============





============ BEGIN FUNCTION UpdatePostProcessValues ==============
L0:            ExecutionFlow.Push(L598);
L5:            GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L47:           FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings);
L83:           bool mbool = mFGGameUserSettings;
L112:          if (!mbool) goto ExecutionFlow.Pop();
L122:          ExecutionFlow.Push(L500);
L127:          int32 mint32 = mFGGameUserSettings->GetPostProcessingQuality();
L177:          this->mPostProcessQualityIndex = mint32;
L204:          FText Temp_text_Variable = "[object Object]";
L268:          KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mPostProcessQualityIndex, [ref] mFText);
L327:          bool mbool1 = mFGGameUserSettings->IsPostProcessUsingCustomSettings();
L369:          bool Temp_bool_Variable = mbool1;
L388:          this->mPostProcessingOption->mOptionNameText->SetText(switch (Temp_bool_Variable) {
case false -> mFText;
case true -> Temp_text_Variable;
default -> mFText1;
});
L499:          goto ExecutionFlow.Pop();
L500:          bool mbool2 = mFGGameUserSettings->IsMotionBlurEnabled();
L542:          this->mMotionBlurCheckbox->SetChecked(mbool2, false, [ref] mbool3);
L597:          goto ExecutionFlow.Pop();
============ END FUNCTION UpdatePostProcessValues ==============





============ BEGIN FUNCTION SetupSubmenuOptionsForSpawnAnim ==============
L0:            ExecutionFlow.Push(L622);
L5:            Widget* mWidget = this->mSwitcher->GetActiveWidget();
L47:           PanelWidget* mPanelWidget = Cast<Class /Script/UMG.PanelWidget>(mWidget);
L83:           bool mbool = mPanelWidget;
L112:          if (!mbool) goto ExecutionFlow.Pop();
L122:          int32 Temp_int_Variable = 0;
L145:          int32 mint32 = mPanelWidget->GetChildrenCount();
L195:          bool mbool1 = Temp_int_Variable <= mint32;
L233:          if (!mbool1) goto L516;
L247:          ExecutionFlow.Push(L548);
L252:          Widget* mWidget1 = mPanelWidget->GetChildAt(Temp_int_Variable);
L303:          UserWidget* mUserWidget = Cast<Class /Script/UMG.UserWidget>(mWidget1);
L339:          bool mbool2 = mUserWidget;
L368:          if (!mbool2) goto ExecutionFlow.Pop();
L378:          mUserWidget->StopAllAnimations();
L410:          mUserWidget->SetRenderOpacity(0);
L447:          int32 mint321 = KismetArrayLibrary->Array_Add([ref] LocalActiveOptions, [ref] mUserWidget);
L515:          goto ExecutionFlow.Pop();
L516:          TArray<UserWidget*> ActiveOptions = LocalActiveOptions;
L543:          // <End Inlined EventGraph Function>;
L548:          int32 mint322 = Temp_int_Variable + 1;
L590:          Temp_int_Variable = mint322;
L617:          goto L145;
============ END FUNCTION SetupSubmenuOptionsForSpawnAnim ==============





============ BEGIN FUNCTION OnAudioValueChanged ==============
L0:            this->ApplyAudioSliders();
============ END FUNCTION OnAudioValueChanged ==============





============ BEGIN FUNCTION OnResolutionChanged ==============
L0:            GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L42:           bool mbool = KismetStringLibrary->Split(selected item, "x", [ref] mFString, [ref] mFString1, 1, 0);
L118:          int32 mint32 = KismetStringLibrary->Conv_StringToInt(mFString1);
L177:          int32 mint321 = KismetStringLibrary->Conv_StringToInt(mFString);
L236:          mIntPoint.X = mint321;
L272:          mIntPoint.Y = mint32;
L308:          mGameUserSettings->SetScreenResolution(mIntPoint);
L349:          this->mResolutionBox->mDropdownBox->SetSelectedOption(selected item);
============ END FUNCTION OnResolutionChanged ==============





============ BEGIN FUNCTION OnDefaultKeybindPressed ==============
L0:            this->mKeybindView->DefaultBindings();
============ END FUNCTION OnDefaultKeybindPressed ==============





============ BEGIN FUNCTION UpdateControlSettings ==============
L0:            ExecutionFlow.Push(L457);
L5:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L47:           FGGameUserSettings* localSettings = mFGGameUserSettings;
L66:           ExecutionFlow.Push(L272);
L71:           ExecutionFlow.Push(L174);
L76:           bool mbool = localSettings->GetInvertedLook();
L118:          this->mInvertLookOption->SetChecked(mbool, false, [ref] mbool1);
L173:          goto ExecutionFlow.Pop();
L174:          bool mbool2 = localSettings->GetHoldToSprint();
L216:          this->mHoldToSprint->SetChecked(mbool2, false, [ref] mbool3);
L271:          goto ExecutionFlow.Pop();
L272:          PlayerController* mPlayerController = this->GetOwningPlayer();
L296:          FGPlayerControllerBase* mFGPlayerControllerBase = Cast<Class /Script/FactoryGame.FGPlayerControllerBase>(mPlayerController);
L332:          bool mbool4 = mFGPlayerControllerBase;
L361:          float mfloat = mFGPlayerControllerBase->GetMouseSensitivity();
L411:          this->mSensitivitySlider->SetNormalizedValue(mfloat);
L456:          goto ExecutionFlow.Pop();
============ END FUNCTION UpdateControlSettings ==============





============ BEGIN FUNCTION SetCurrentArachnophobiaMode ==============
L0:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L42:           bool mbool = mFGGameUserSettings->GetArachnophobiaMode();
L84:           this->mArachnophobiaModeCheckbox->SetChecked(mbool, false, [ref] mbool1);
============ END FUNCTION SetCurrentArachnophobiaMode ==============





============ BEGIN FUNCTION SetCurrentLanguage ==============
L0:            ExecutionFlow.Push(L780);
L5:            TArray<FText> mTArrayFText = [];
L16:           BlueprintMapLibrary->Map_Values([ref] this->mLanguageData, [ref] mTArrayFText);
L66:           TArray<FString> mTArrayFString = [];
L77:           BlueprintMapLibrary->Map_Keys([ref] this->mLanguageData, [ref] mTArrayFString);
L127:          int32 Temp_int_Loop_Counter_Variable = 0;
L150:          int32 Temp_int_Array_Index_Variable = 0;
L173:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFString);
L232:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L270:          if (!mbool) goto L523;
L284:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L311:          ExecutionFlow.Push(L706);
L316:          FString mFString = FGBlueprintFunctionLibrary->GetLanguage();
L366:          KismetArrayLibrary->Array_Get([ref] mTArrayFString, Temp_int_Array_Index_Variable, [ref] mFString1);
L425:          bool mbool1 = KismetStringLibrary->EqualEqual_StriStri(mFString, mFString1);
L485:          if (!mbool1) goto ExecutionFlow.Pop();
L495:          int32 localLanguageIndex = Temp_int_Array_Index_Variable;
L522:          goto ExecutionFlow.Pop();
L523:          FString mFString2 = KismetTextLibrary->Conv_TextToString([ref] mTArrayFText[localLanguageIndex]);
L592:          this->mLanguageBox->mDropdownBox->SetSelectedOption(mFString2);
L655:          FString mFString3 = FGBlueprintFunctionLibrary->GetLanguage();
L705:          goto ExecutionFlow.Pop();
L706:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L748:          Temp_int_Loop_Counter_Variable = mint321;
L775:          goto L173;
============ END FUNCTION SetCurrentLanguage ==============





============ BEGIN FUNCTION ApplyControlsSettings ==============
L0:            ExecutionFlow.Push(L380);
L5:            FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L47:           FGGameUserSettings* localSettings = mFGGameUserSettings;
L66:           ExecutionFlow.Push(L204);
L71:           ExecutionFlow.Push(L140);
L76:           localSettings->SetInvertedLook(this->mInvertLookOption->mIsChecked);
L139:          goto ExecutionFlow.Pop();
L140:          localSettings->SetHoldToSprint(this->mHoldToSprint->mIsChecked);
L203:          goto ExecutionFlow.Pop();
L204:          PlayerController* mPlayerController = this->GetOwningPlayer();
L228:          FGPlayerControllerBase* mFGPlayerControllerBase = Cast<Class /Script/FactoryGame.FGPlayerControllerBase>(mPlayerController);
L264:          bool mbool = mFGPlayerControllerBase;
L293:          this->mSensitivitySlider->GetAdjustedValue([ref] mfloat);
L338:          mFGPlayerControllerBase->SetMouseSensitivity(mfloat);
L379:          goto ExecutionFlow.Pop();
============ END FUNCTION ApplyControlsSettings ==============





============ BEGIN FUNCTION ApplyAudioSettings ==============
L0:            this->ApplyAudioSliders();
============ END FUNCTION ApplyAudioSettings ==============





============ BEGIN FUNCTION ApplyGameplaySettings ==============
L0:            ExecutionFlow.Push(L1624);
L5:            ExecutionFlow.Push(L1444);
L10:           ExecutionFlow.Push(L1278);
L15:           ExecutionFlow.Push(L1149);
L20:           ExecutionFlow.Push(L962);
L25:           ExecutionFlow.Push(L738);
L30:           TArray<FString> mTArrayFString = [];
L41:           BlueprintMapLibrary->Map_Keys([ref] this->mLanguageData, [ref] mTArrayFString);
L91:           TArray<FText> mTArrayFText = [];
L102:          BlueprintMapLibrary->Map_Values([ref] this->mLanguageData, [ref] mTArrayFText);
L152:          bool Temp_bool_True_if_break_was_hit_Variable = false;
L163:          int32 Temp_int_Loop_Counter_Variable = 0;
L186:          int32 Temp_int_Array_Index_Variable = 0;
L209:          bool mbool = !Temp_bool_True_if_break_was_hit_Variable;
L238:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFText);
L297:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint32;
L335:          bool mbool2 = mbool && mbool1;
L373:          if (!mbool2) goto ExecutionFlow.Pop();
L383:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L410:          ExecutionFlow.Push(L1550);
L415:          FString mFString = this->mLanguageBox->mDropdownBox->GetSelectedOption();
L487:          FText mFText = KismetTextLibrary->Conv_StringToText(mFString);
L546:          KismetArrayLibrary->Array_Get([ref] mTArrayFText, Temp_int_Array_Index_Variable, [ref] mFText1);
L605:          bool mbool3 = KismetTextLibrary->EqualEqual_IgnoreCase_TextText([ref] mFText1, [ref] mFText);
L665:          if (!mbool3) goto ExecutionFlow.Pop();
L675:          FGBlueprintFunctionLibrary->ChangeLanguage(mTArrayFString[Temp_int_Array_Index_Variable]);
L726:          Temp_bool_True_if_break_was_hit_Variable = true;
L737:          goto ExecutionFlow.Pop();
L738:          FGGameUserSettings* mFGGameUserSettings = FGGameUserSettings->GetFGGameUserSettings();
L780:          mFGGameUserSettings->SetArachnophobiaMode(this->mArachnophobiaModeCheckbox->mIsChecked);
L843:          float mfloat = Conv_BoolToFloat(this->mArachnophobiaModeCheckbox->mIsChecked);
L902:          AkGameplayStatics->SetGlobalRTPCValue("RTPC_ArachnophobiaMode", mfloat, 0);
L961:          goto ExecutionFlow.Pop();
L962:          FGGameUserSettings* mFGGameUserSettings1 = FGGameUserSettings->GetFGGameUserSettings();
L1004:         bool mbool4 = !this->mDataCheckbox->mIsChecked;
L1055:         AnalyticsService* mAnalyticsService = FGGameInstance->GetGameAnalyticsService(this);
L1098:         mFGGameUserSettings1->SetAnalyticsDisabled(mbool4, mAnalyticsService);
L1148:         goto ExecutionFlow.Pop();
L1149:         FGGameUserSettings* mFGGameUserSettings2 = FGGameUserSettings->GetFGGameUserSettings();
L1191:         this->mHeadBobSlider->GetAdjustedValue([ref] mfloat1);
L1236:         mFGGameUserSettings2->SetHeadBobScale(mfloat1);
L1277:         goto ExecutionFlow.Pop();
L1278:         FGGameUserSettings* mFGGameUserSettings3 = FGGameUserSettings->GetFGGameUserSettings();
L1320:         this->AutosaveIntervalSlider->GetAdjustedValue([ref] mfloat2);
L1365:         int32 mint321 = FTrunc(mfloat2);
L1402:         mFGGameUserSettings3->SetAutosaveInterval(mint321);
L1443:         goto ExecutionFlow.Pop();
L1444:         FGGameUserSettings* mFGGameUserSettings4 = FGGameUserSettings->GetFGGameUserSettings();
L1486:         mFGGameUserSettings4->SetShowBreakNotification(this->mBreakNotificationCheckbox->mIsChecked);
L1549:         goto ExecutionFlow.Pop();
L1550:         int32 mint322 = Temp_int_Loop_Counter_Variable + 1;
L1592:         Temp_int_Loop_Counter_Variable = mint322;
L1619:         goto L209;
============ END FUNCTION ApplyGameplaySettings ==============





============ BEGIN FUNCTION ApplyAudioSliders ==============
L0:            ExecutionFlow.Push(L1026);
L5:            GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L47:           FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings);
L83:           bool mbool = mFGGameUserSettings;
L112:          if (!mbool) goto ExecutionFlow.Pop();
L122:          FGGameUserSettings* local_userSettings = mFGGameUserSettings;
L141:          TArray<FString> mTArrayFString = [];
L152:          BlueprintMapLibrary->Map_Keys([ref] this->mAudioOptions, [ref] mTArrayFString);
L202:          int32 Temp_int_Loop_Counter_Variable = 0;
L225:          int32 Temp_int_Array_Index_Variable = 0;
L248:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFString);
L307:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint32;
L345:          if (!mbool1) goto ExecutionFlow.Pop();
L355:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L382:          ExecutionFlow.Push(L952);
L387:          KismetArrayLibrary->Array_Get([ref] mTArrayFString, Temp_int_Array_Index_Variable, [ref] mFString);
L446:          bool mbool2 = BlueprintMapLibrary->Map_Find([ref] this->mAudioOptions, [ref] mFString, [ref] mWidget_OptionsSlider);
L515:          float mfloat = mWidget_OptionsSlider->OptionSlider->GetValue();
L587:          FName mFName = KismetStringLibrary->Conv_StringToName(mFString);
L646:          AkGameplayStatics->SetGlobalRTPCValue(mFName, mfloat, 0);
L701:          KismetArrayLibrary->Array_Get([ref] mTArrayFString, Temp_int_Array_Index_Variable, [ref] mFString);
L760:          mbool2 = BlueprintMapLibrary->Map_Find([ref] this->mAudioOptions, [ref] mFString, [ref] mWidget_OptionsSlider);
L829:          mfloat = mWidget_OptionsSlider->OptionSlider->GetValue();
L901:          local_userSettings->SetAudioVolume(mFString, mfloat);
L951:          goto ExecutionFlow.Pop();
L952:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L994:          Temp_int_Loop_Counter_Variable = mint321;
L1021:         goto L248;
============ END FUNCTION ApplyAudioSliders ==============





============ BEGIN FUNCTION CacheAudioSliders ==============
L0:            mFScriptDelegate->BindUFunction(this, OnAudioValueChanged);
L23:           this->mMasterVolumeSlider->GetNewValue.AddUnique(mFScriptDelegate);
L64:           const FString Temp_string_Variable5 = "Master_Bus_Volume";
L101:          BlueprintMapLibrary->Map_Add([ref] this->mAudioOptions, [ref] Temp_string_Variable5, [ref] this->mMasterVolumeSlider);
L160:          mFScriptDelegate1->BindUFunction(this, OnAudioValueChanged);
L183:          this->mAmbientVolumeSlider->GetNewValue.AddUnique(mFScriptDelegate1);
L224:          const FString Temp_string_Variable2 = "Ambient_Bus_Volume";
L262:          BlueprintMapLibrary->Map_Add([ref] this->mAudioOptions, [ref] Temp_string_Variable2, [ref] this->mAmbientVolumeSlider);
L321:          mFScriptDelegate2->BindUFunction(this, OnAudioValueChanged);
L344:          this->mFactoryVolSlider->GetNewValue.AddUnique(mFScriptDelegate2);
L385:          const FString Temp_string_Variable1 = "Factory_Bus_Volume";
L423:          BlueprintMapLibrary->Map_Add([ref] this->mAudioOptions, [ref] Temp_string_Variable1, [ref] this->mFactoryVolSlider);
L482:          mFScriptDelegate3->BindUFunction(this, OnAudioValueChanged);
L505:          this->mMusicVolumeSlider->GetNewValue.AddUnique(mFScriptDelegate3);
L546:          const FString Temp_string_Variable = "Music_Bus_Volume";
L582:          BlueprintMapLibrary->Map_Add([ref] this->mAudioOptions, [ref] Temp_string_Variable, [ref] this->mMusicVolumeSlider);
L641:          mFScriptDelegate4->BindUFunction(this, OnAudioValueChanged);
L664:          this->mSFXVolSlider->GetNewValue.AddUnique(mFScriptDelegate4);
L705:          const FString Temp_string_Variable3 = "SFX_Bus_Volume";
L739:          BlueprintMapLibrary->Map_Add([ref] this->mAudioOptions, [ref] Temp_string_Variable3, [ref] this->mSFXVolSlider);
L798:          mFScriptDelegate5->BindUFunction(this, OnAudioValueChanged);
L821:          this->mVOVolSlider->GetNewValue.AddUnique(mFScriptDelegate5);
L862:          const FString Temp_string_Variable4 = "VO_Bus_Volume";
L895:          BlueprintMapLibrary->Map_Add([ref] this->mAudioOptions, [ref] Temp_string_Variable4, [ref] this->mVOVolSlider);
============ END FUNCTION CacheAudioSliders ==============





============ BEGIN FUNCTION UpdateAudioSettings ==============
L0:            ExecutionFlow.Push(L741);
L5:            GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L47:           FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings);
L83:           bool mbool = mFGGameUserSettings;
L112:          if (!mbool) goto ExecutionFlow.Pop();
L122:          FGGameUserSettings* local_userSettings = mFGGameUserSettings;
L141:          TArray<FString> mTArrayFString = [];
L152:          BlueprintMapLibrary->Map_Keys([ref] this->mAudioOptions, [ref] mTArrayFString);
L202:          int32 Temp_int_Loop_Counter_Variable = 0;
L225:          int32 Temp_int_Array_Index_Variable = 0;
L248:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFString);
L307:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint32;
L345:          if (!mbool1) goto ExecutionFlow.Pop();
L355:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L382:          ExecutionFlow.Push(L667);
L387:          KismetArrayLibrary->Array_Get([ref] mTArrayFString, Temp_int_Array_Index_Variable, [ref] mFString);
L446:          float mfloat = local_userSettings->GetAudioVolume(mFString);
L505:          float mfloat1 = FClamp(mfloat, 0, 1);
L552:          bool mbool2 = BlueprintMapLibrary->Map_Find([ref] this->mAudioOptions, [ref] mFString, [ref] mWidget_OptionsSlider);
L621:          mWidget_OptionsSlider->SetProgressBarPercentage(mfloat1);
L666:          goto ExecutionFlow.Pop();
L667:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L709:          Temp_int_Loop_Counter_Variable = mint321;
L736:          goto L248;
============ END FUNCTION UpdateAudioSettings ==============





============ BEGIN FUNCTION BindEventsForVolumeSliders ==============
L0:            ExecutionFlow.Push(L1068);
L5:            ExecutionFlow.Push(L895);
L10:           ExecutionFlow.Push(L722);
L15:           ExecutionFlow.Push(L549);
L20:           ExecutionFlow.Push(L376);
L25:           ExecutionFlow.Push(L203);
L30:           mFScriptDelegate->BindUFunction(this, DoVolumeThings);
L53:           this->mAmbientVolumeSlider->OptionSlider->OnValueChanged.AddUnique(mFScriptDelegate);
L116:          mFScriptDelegate1->BindUFunction(this, SaveSettings);
L139:          this->mAmbientVolumeSlider->OptionSlider->OnMouseCaptureEnd.AddUnique(mFScriptDelegate1);
L202:          goto ExecutionFlow.Pop();
L203:          mFScriptDelegate->BindUFunction(this, DoVolumeThings);
L226:          this->mFactoryVolSlider->OptionSlider->OnValueChanged.AddUnique(mFScriptDelegate);
L289:          mFScriptDelegate1->BindUFunction(this, SaveSettings);
L312:          this->mFactoryVolSlider->OptionSlider->OnMouseCaptureEnd.AddUnique(mFScriptDelegate1);
L375:          goto ExecutionFlow.Pop();
L376:          mFScriptDelegate->BindUFunction(this, DoVolumeThings);
L399:          this->mSFXVolSlider->OptionSlider->OnValueChanged.AddUnique(mFScriptDelegate);
L462:          mFScriptDelegate1->BindUFunction(this, SaveSettings);
L485:          this->mSFXVolSlider->OptionSlider->OnMouseCaptureEnd.AddUnique(mFScriptDelegate1);
L548:          goto ExecutionFlow.Pop();
L549:          mFScriptDelegate->BindUFunction(this, DoVolumeThings);
L572:          this->mMusicVolumeSlider->OptionSlider->OnValueChanged.AddUnique(mFScriptDelegate);
L635:          mFScriptDelegate1->BindUFunction(this, SaveSettings);
L658:          this->mMusicVolumeSlider->OptionSlider->OnMouseCaptureEnd.AddUnique(mFScriptDelegate1);
L721:          goto ExecutionFlow.Pop();
L722:          mFScriptDelegate->BindUFunction(this, DoVolumeThings);
L745:          this->mVOVolSlider->OptionSlider->OnValueChanged.AddUnique(mFScriptDelegate);
L808:          mFScriptDelegate1->BindUFunction(this, SaveSettings);
L831:          this->mVOVolSlider->OptionSlider->OnMouseCaptureEnd.AddUnique(mFScriptDelegate1);
L894:          goto ExecutionFlow.Pop();
L895:          mFScriptDelegate->BindUFunction(this, DoVolumeThings);
L918:          this->mMasterVolumeSlider->OptionSlider->OnValueChanged.AddUnique(mFScriptDelegate);
L981:          mFScriptDelegate1->BindUFunction(this, SaveSettings);
L1004:         this->mMasterVolumeSlider->OptionSlider->OnMouseCaptureEnd.AddUnique(mFScriptDelegate1);
L1067:         goto ExecutionFlow.Pop();
============ END FUNCTION BindEventsForVolumeSliders ==============





============ BEGIN FUNCTION ClampedNextIndex ==============
L0:            int32 mint32 = currentIndex + 1;
L42:           int32 mint321 = KismetArrayLibrary->Array_LastIndex([ref] settingsArray);
L101:          int32 mint322 = Min(mint32, mint321);
L147:          int32 nextIndex = mint322;
============ END FUNCTION ClampedNextIndex ==============





============ BEGIN FUNCTION BindEventsToAllButtonsForVideoSettings ==============
L0:            ExecutionFlow.Push(L1618);
L5:            ExecutionFlow.Push(L1531);
L10:           ExecutionFlow.Push(L1466);
L15:           ExecutionFlow.Push(L1401);
L20:           ExecutionFlow.Push(L1336);
L25:           ExecutionFlow.Push(L1163);
L30:           ExecutionFlow.Push(L990);
L35:           ExecutionFlow.Push(L817);
L40:           ExecutionFlow.Push(L644);
L45:           ExecutionFlow.Push(L401);
L50:           ExecutionFlow.Push(L228);
L55:           mFScriptDelegate->BindUFunction(this, AntiAliasPrevious);
L78:           this->mAntiAliasingOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate);
L141:          mFScriptDelegate1->BindUFunction(this, AntiAliasNext);
L164:          this->mAntiAliasingOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate1);
L227:          goto ExecutionFlow.Pop();
L228:          mFScriptDelegate2->BindUFunction(this, FoliagePrevious);
L251:          this->mFoliageQualityOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate2);
L314:          mFScriptDelegate3->BindUFunction(this, FoliageNext);
L337:          this->mFoliageQualityOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate3);
L400:          goto ExecutionFlow.Pop();
L401:          ExecutionFlow.Push(L579);
L406:          mFScriptDelegate4->BindUFunction(this, PostProcessingPrevious);
L429:          this->mPostProcessingOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate4);
L492:          mFScriptDelegate5->BindUFunction(this, PostProcessingNext);
L515:          this->mPostProcessingOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate5);
L578:          goto ExecutionFlow.Pop();
L579:          mFScriptDelegate6->BindUFunction(this, OnMotionBlurChecked);
L602:          this->mMotionBlurCheckbox->OnCheckChanged.AddUnique(mFScriptDelegate6);
L643:          goto ExecutionFlow.Pop();
L644:          mFScriptDelegate7->BindUFunction(this, ShadowQualityPrevious);
L667:          this->mShadowQualityOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate7);
L730:          mFScriptDelegate8->BindUFunction(this, ShadowQualityNext);
L753:          this->mShadowQualityOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate8);
L816:          goto ExecutionFlow.Pop();
L817:          mFScriptDelegate9->BindUFunction(this, TextureQualityPrevious);
L840:          this->mTextureQualityOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate9);
L903:          mFScriptDelegate10->BindUFunction(this, TextureQualityNext);
L926:          this->mTextureQualityOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate10);
L989:          goto ExecutionFlow.Pop();
L990:          mFScriptDelegate11->BindUFunction(this, VFXQualityPrevious);
L1013:         this->mVFXQualityOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate11);
L1076:         mFScriptDelegate12->BindUFunction(this, VFXQualityNext);
L1099:         this->mVFXQualityOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate12);
L1162:         goto ExecutionFlow.Pop();
L1163:         mFScriptDelegate13->BindUFunction(this, ViewDistancePrevious);
L1186:         this->mViewDistanceOption->mButtonOptionLeft->OnClicked.AddUnique(mFScriptDelegate13);
L1249:         mFScriptDelegate14->BindUFunction(this, ViewDistanceNext);
L1272:         this->mViewDistanceOption->mButtonOptionRight->OnClicked.AddUnique(mFScriptDelegate14);
L1335:         goto ExecutionFlow.Pop();
L1336:         mFScriptDelegate15->BindUFunction(this, OnVSyncChecked);
L1359:         this->mVSyncCheckbox->OnCheckChanged.AddUnique(mFScriptDelegate15);
L1400:         goto ExecutionFlow.Pop();
L1401:         mFScriptDelegate16->BindUFunction(this, OnFullScreenChecked);
L1424:         this->mFullScreenCheckbox->OnCheckChanged.AddUnique(mFScriptDelegate16);
L1465:         goto ExecutionFlow.Pop();
L1466:         mFScriptDelegate17->BindUFunction(this, OnFOVChanged);
L1489:         this->mFOVSlider->GetNewValue.AddUnique(mFScriptDelegate17);
L1530:         goto ExecutionFlow.Pop();
L1531:         mFScriptDelegate18->BindUFunction(this, OnResolutionChanged);
L1554:         this->mResolutionBox->mDropdownBox->OnSelectionChanged.AddUnique(mFScriptDelegate18);
L1617:         goto ExecutionFlow.Pop();
============ END FUNCTION BindEventsToAllButtonsForVideoSettings ==============





============ BEGIN FUNCTION UpdateVideoSettings ==============
L0:            ExecutionFlow.Push(L2759);
L5:            ExecutionFlow.Push(L2619);
L10:           ExecutionFlow.Push(L2292);
L15:           ExecutionFlow.Push(L2152);
L20:           ExecutionFlow.Push(L1906);
L25:           ExecutionFlow.Push(L1660);
L30:           ExecutionFlow.Push(L1414);
L35:           ExecutionFlow.Push(L1168);
L40:           ExecutionFlow.Push(L1153);
L45:           ExecutionFlow.Push(L907);
L50:           ExecutionFlow.Push(L661);
L55:           ExecutionFlow.Push(L482);
L60:           GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L102:          IntPoint mIntPoint = mGameUserSettings->GetScreenResolution();
L152:          FString mFString = KismetStringLibrary->Conv_IntToString(mIntPoint.Y);
L220:          FString mFString1 = KismetStringLibrary->Conv_IntToString(mIntPoint.X);
L288:          FString mFString2 = KismetStringLibrary->Concat_StrStr(mFString1, "x");
L350:          FString mFString3 = KismetStringLibrary->Concat_StrStr(mFString2, mFString);
L418:          this->mResolutionBox->mDropdownBox->SetSelectedOption(mFString3);
L481:          goto ExecutionFlow.Pop();
L482:          GameUserSettings* mGameUserSettings1 = GameUserSettings->GetGameUserSettings();
L524:          uint8 muint8 = mGameUserSettings1->GetFullscreenMode();
L574:          bool mbool = muint8 == 0;
L605:          this->mFullScreenCheckbox->SetChecked(mbool, false, [ref] mbool1);
L660:          goto ExecutionFlow.Pop();
L661:          GameUserSettings* mGameUserSettings2 = GameUserSettings->GetGameUserSettings();
L703:          int32 mint32 = mGameUserSettings2->GetAntiAliasingQuality();
L753:          this->mAntiAliasingIndex = mint32;
L780:          KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mAntiAliasingIndex, [ref] mFText);
L839:          this->mAntiAliasingOption->mOptionNameText->SetText(mFText);
L906:          goto ExecutionFlow.Pop();
L907:          GameUserSettings* mGameUserSettings3 = GameUserSettings->GetGameUserSettings();
L949:          int32 mint321 = mGameUserSettings3->GetFoliageQuality();
L999:          this->mFoliageQualityIndex = mint321;
L1026:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mFoliageQualityIndex, [ref] mFText1);
L1085:         this->mFoliageQualityOption->mOptionNameText->SetText(mFText1);
L1152:         goto ExecutionFlow.Pop();
L1153:         this->UpdatePostProcessValues();
L1167:         goto ExecutionFlow.Pop();
L1168:         GameUserSettings* mGameUserSettings4 = GameUserSettings->GetGameUserSettings();
L1210:         int32 mint322 = mGameUserSettings4->GetShadowQuality();
L1260:         this->mShadowQualityIndex = mint322;
L1287:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mShadowQualityIndex, [ref] mFText2);
L1346:         this->mShadowQualityOption->mOptionNameText->SetText(mFText2);
L1413:         goto ExecutionFlow.Pop();
L1414:         GameUserSettings* mGameUserSettings5 = GameUserSettings->GetGameUserSettings();
L1456:         int32 mint323 = mGameUserSettings5->GetTextureQuality();
L1506:         this->mTextureQualityIndex = mint323;
L1533:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mTextureQualityIndex, [ref] mFText3);
L1592:         this->mTextureQualityOption->mOptionNameText->SetText(mFText3);
L1659:         goto ExecutionFlow.Pop();
L1660:         GameUserSettings* mGameUserSettings6 = GameUserSettings->GetGameUserSettings();
L1702:         int32 mint324 = mGameUserSettings6->GetViewDistanceQuality();
L1752:         this->mViewDistanceIndex = mint324;
L1779:         KismetArrayLibrary->Array_Get([ref] this->mViewDistanceSettings, this->mViewDistanceIndex, [ref] mFText4);
L1838:         this->mViewDistanceOption->mOptionNameText->SetText(mFText4);
L1905:         goto ExecutionFlow.Pop();
L1906:         GameUserSettings* mGameUserSettings7 = GameUserSettings->GetGameUserSettings();
L1948:         int32 mint325 = mGameUserSettings7->GetVisualEffectQuality();
L1998:         this->mVFXIndex = mint325;
L2025:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mVFXIndex, [ref] mFText5);
L2084:         this->mVFXQualityOption->mOptionNameText->SetText(mFText5);
L2151:         goto ExecutionFlow.Pop();
L2152:         GameUserSettings* mGameUserSettings8 = GameUserSettings->GetGameUserSettings();
L2194:         bool mbool2 = mGameUserSettings8->IsVSyncEnabled();
L2236:         this->mVSyncCheckbox->SetChecked(mbool2, false, [ref] mbool3);
L2291:         goto ExecutionFlow.Pop();
L2292:         GameUserSettings* mGameUserSettings9 = GameUserSettings->GetGameUserSettings();
L2334:         FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings9);
L2370:         bool mbool4 = mFGGameUserSettings;
L2399:         if (!mbool4) goto ExecutionFlow.Pop();
L2409:         int32 mint326 = mFGGameUserSettings->GetFOV();
L2459:         this->mFOV = mint326;
L2486:         mint326 = mFGGameUserSettings->GetFOV();
L2536:         float mfloat = Conv_IntToFloat(mint326);
L2573:         this->mFOVSlider->SetNormalizedValue(mfloat);
L2618:         goto ExecutionFlow.Pop();
L2619:         FGGameUserSettings* mFGGameUserSettings1 = FGGameUserSettings->GetFGGameUserSettings();
L2661:         bool mbool5 = mFGGameUserSettings1->IsHZBOEnabled();
L2703:         this->mHZBOCheckbox->SetChecked(mbool5, false, [ref] mbool6);
L2758:         goto ExecutionFlow.Pop();
============ END FUNCTION UpdateVideoSettings ==============





============ BEGIN FUNCTION PopulateLanguageBox ==============
L0:            ExecutionFlow.Push(L507);
L5:            TArray<FText> mTArrayFText = [];
L16:           BlueprintMapLibrary->Map_Values([ref] this->mLanguageData, [ref] mTArrayFText);
L66:           int32 Temp_int_Loop_Counter_Variable = 0;
L89:           int32 Temp_int_Array_Index_Variable = 0;
L112:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayFText);
L171:          bool mbool = Temp_int_Loop_Counter_Variable < mint32;
L209:          if (!mbool) goto ExecutionFlow.Pop();
L219:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L246:          ExecutionFlow.Push(L433);
L251:          KismetArrayLibrary->Array_Get([ref] mTArrayFText, Temp_int_Array_Index_Variable, [ref] mFText);
L310:          FString mFString = KismetTextLibrary->Conv_TextToString([ref] mFText);
L369:          this->mLanguageBox->mDropdownBox->AddOption(mFString);
L432:          goto ExecutionFlow.Pop();
L433:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L475:          Temp_int_Loop_Counter_Variable = mint321;
L502:          goto L112;
============ END FUNCTION PopulateLanguageBox ==============





============ BEGIN FUNCTION PopulateResolutionBox ==============
L0:            ExecutionFlow.Push(L715);
L5:            TArray<IntPoint> mTArrayIntPoint = [];
L16:           bool mbool = KismetSystemLibrary->GetSupportedFullscreenResolutions([ref] mTArrayIntPoint);
L67:           int32 Temp_int_Loop_Counter_Variable = 0;
L90:           int32 Temp_int_Array_Index_Variable = 0;
L113:          int32 mint32 = KismetArrayLibrary->Array_Length([ref] mTArrayIntPoint);
L172:          bool mbool1 = Temp_int_Loop_Counter_Variable < mint32;
L210:          if (!mbool1) goto ExecutionFlow.Pop();
L220:          Temp_int_Array_Index_Variable = Temp_int_Loop_Counter_Variable;
L247:          ExecutionFlow.Push(L641);
L252:          KismetArrayLibrary->Array_Get([ref] mTArrayIntPoint, Temp_int_Array_Index_Variable, [ref] mIntPoint);
L311:          FString mFString = KismetStringLibrary->Conv_IntToString(mIntPoint.Y);
L379:          FString mFString1 = KismetStringLibrary->Conv_IntToString(mIntPoint.X);
L447:          FString mFString2 = KismetStringLibrary->Concat_StrStr(mFString1, "x");
L509:          FString mFString3 = KismetStringLibrary->Concat_StrStr(mFString2, mFString);
L577:          this->mResolutionBox->mDropdownBox->AddOption(mFString3);
L640:          goto ExecutionFlow.Pop();
L641:          int32 mint321 = Temp_int_Loop_Counter_Variable + 1;
L683:          Temp_int_Loop_Counter_Variable = mint321;
L710:          goto L113;
============ END FUNCTION PopulateResolutionBox ==============





============ BEGIN FUNCTION PostProcessingNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PostProcessingNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L4360;
============ END FUNCTION PostProcessingNext ==============





============ BEGIN FUNCTION PostProcessingPrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: PostProcessingPrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L4355;
============ END FUNCTION PostProcessingPrevious ==============





============ BEGIN FUNCTION ShadowQualityNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShadowQualityNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L3660;
============ END FUNCTION ShadowQualityNext ==============





============ BEGIN FUNCTION ShadowQualityPrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShadowQualityPrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L3655;
============ END FUNCTION ShadowQualityPrevious ==============





============ BEGIN FUNCTION TextureQualityNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: TextureQualityNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L30;
============ END FUNCTION TextureQualityNext ==============





============ BEGIN FUNCTION TextureQualityPrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: TextureQualityPrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L308;
============ END FUNCTION TextureQualityPrevious ==============





============ BEGIN FUNCTION FoliagePrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: FoliagePrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L896;
============ END FUNCTION FoliagePrevious ==============





============ BEGIN FUNCTION ViewDistanceNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ViewDistanceNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L901;
============ END FUNCTION ViewDistanceNext ==============





============ BEGIN FUNCTION ViewDistancePrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ViewDistancePrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L1179;
============ END FUNCTION ViewDistancePrevious ==============





============ BEGIN FUNCTION FoliageNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: FoliageNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L1473;
============ END FUNCTION FoliageNext ==============





============ BEGIN FUNCTION VFXQualityNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: VFXQualityNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L1751;
============ END FUNCTION VFXQualityNext ==============





============ BEGIN FUNCTION VFXQualityPrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: VFXQualityPrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L2029;
============ END FUNCTION VFXQualityPrevious ==============





============ BEGIN FUNCTION OnVSyncChecked ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnVSyncChecked;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L2887;
============ END FUNCTION OnVSyncChecked ==============





============ BEGIN FUNCTION OnFullScreenChecked ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnFullScreenChecked;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L3081;
============ END FUNCTION OnFullScreenChecked ==============





============ BEGIN FUNCTION ResetVideoSettings ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ResetVideoSettings;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L3504;
============ END FUNCTION ResetVideoSettings ==============





============ BEGIN FUNCTION OnEscape ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OnEscape;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L3571;
============ END FUNCTION OnEscape ==============





============ BEGIN FUNCTION SaveChanges ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: SaveChanges;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L3665;
============ END FUNCTION SaveChanges ==============





============ BEGIN FUNCTION DoVolumeThings ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: DoVolumeThings;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L4365;
============ END FUNCTION DoVolumeThings ==============





============ BEGIN FUNCTION OnFOVChanged ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnFOVChanged;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L5507;
============ END FUNCTION OnFOVChanged ==============





============ BEGIN FUNCTION ShowConfirmResetPopup ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShowConfirmResetPopup;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L5512;
============ END FUNCTION ShowConfirmResetPopup ==============





============ BEGIN FUNCTION BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L6163;
============ END FUNCTION BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature ==============





============ BEGIN FUNCTION BndEvt__Widget_FrontEnd_Button_C_0_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__Widget_FrontEnd_Button_C_0_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L6168;
============ END FUNCTION BndEvt__Widget_FrontEnd_Button_C_0_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature ==============





============ BEGIN FUNCTION ShowConfirmChangesPopup ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: ShowConfirmChangesPopup;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L6329;
============ END FUNCTION ShowConfirmChangesPopup ==============





============ BEGIN FUNCTION BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L6334;
============ END FUNCTION BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature ==============





============ BEGIN FUNCTION Init ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Init;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L6615;
============ END FUNCTION Init ==============





============ BEGIN FUNCTION OnMotionBlurChecked ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: OnMotionBlurChecked;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L6847;
============ END FUNCTION OnMotionBlurChecked ==============





============ BEGIN FUNCTION BndEvt__mSwitcher_K2Node_ComponentBoundEvent_4_OnActiveWidgetSet__DelegateSignature ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: BndEvt__mSwitcher_K2Node_ComponentBoundEvent_4_OnActiveWidgetSet__DelegateSignature;
L36:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7319;
============ END FUNCTION BndEvt__mSwitcher_K2Node_ComponentBoundEvent_4_OnActiveWidgetSet__DelegateSignature ==============





============ BEGIN FUNCTION AntiAliasNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AntiAliasNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7372;
============ END FUNCTION AntiAliasNext ==============





============ BEGIN FUNCTION NetworkQualityPrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: NetworkQualityPrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7377;
============ END FUNCTION NetworkQualityPrevious ==============





============ BEGIN FUNCTION NetworkQualityNext ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: NetworkQualityNext;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7746;
============ END FUNCTION NetworkQualityNext ==============





============ BEGIN FUNCTION AntiAliasPrevious ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: AntiAliasPrevious;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7819;
============ END FUNCTION AntiAliasPrevious ==============





============ BEGIN FUNCTION SaveSettings ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: SaveSettings;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7824;
============ END FUNCTION SaveSettings ==============





============ BEGIN FUNCTION OnMenuExit ==============
L36:           // EventGraph implemented function stub;
L36:           // Function Name: OnMenuExit;
L36:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7903;
============ END FUNCTION OnMenuExit ==============





============ BEGIN FUNCTION CheckResolutionChanges ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: CheckResolutionChanges;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L7946;
============ END FUNCTION CheckResolutionChanges ==============





============ BEGIN FUNCTION ResolutionChangedAccepted ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: ResolutionChangedAccepted;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L8246;
============ END FUNCTION ResolutionChangedAccepted ==============





============ BEGIN FUNCTION OpenRequireRestartIfRequired ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: OpenRequireRestartIfRequired;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L8493;
============ END FUNCTION OpenRequireRestartIfRequired ==============





============ BEGIN FUNCTION PreConstruct ==============
L18:           // EventGraph implemented function stub;
L18:           // Function Name: PreConstruct;
L18:           // Implementation: Function ExecuteUbergraph_Widget_Options, from label L9015;
============ END FUNCTION PreConstruct ==============





============ BEGIN FUNCTION Destruct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Destruct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L9030;
============ END FUNCTION Destruct ==============





============ BEGIN FUNCTION RevertUnsavedChanges ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: RevertUnsavedChanges;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L9045;
============ END FUNCTION RevertUnsavedChanges ==============





============ BEGIN FUNCTION Construct ==============
L0:            // EventGraph implemented function stub;
L0:            // Function Name: Construct;
L0:            // Implementation: Function ExecuteUbergraph_Widget_Options, from label L9161;
============ END FUNCTION Construct ==============





============ BEGIN FUNCTION ExecuteUbergraph_Widget_Options ==============
L5:            goto ComputedJump(EntryPoint);
L15:           this->SetupOnlineSubmenu();
L29:           goto ExecutionFlow.Pop();
L30:           // <Begin Inlined EventGraph Function TextureQualityNext>;
L30:           GameUserSettings* mGameUserSettings = GameUserSettings->GetGameUserSettings();
L72:           this->ClampedNextIndex(this->mTextureQualityIndex, [ref] this->mSettings, [ref] mint32);
L113:          this->mTextureQualityIndex = mint32;
L140:          mGameUserSettings->SetTextureQuality(this->mTextureQualityIndex);
L181:          KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mTextureQualityIndex, [ref] mFText);
L240:          this->mTextureQualityOption->mOptionNameText->SetText(mFText);
L307:          goto ExecutionFlow.Pop();
L308:          // <Begin Inlined EventGraph Function TextureQualityPrevious>;
L308:          GameUserSettings* mGameUserSettings1 = GameUserSettings->GetGameUserSettings();
L350:          int32 mint321 = Max(this->mTextureQualityIndex - 1, 0);
L407:          this->mTextureQualityIndex = mint321;
L434:          mGameUserSettings1->SetTextureQuality(this->mTextureQualityIndex);
L475:          KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mTextureQualityIndex, [ref] mFText1);
L534:          this->mTextureQualityOption->mOptionNameText->SetText(mFText1);
L601:          goto ExecutionFlow.Pop();
L602:          GameUserSettings* mGameUserSettings2 = GameUserSettings->GetGameUserSettings();
L644:          int32 mint322 = Max(this->mFoliageQualityIndex - 1, 0);
L701:          this->mFoliageQualityIndex = mint322;
L728:          mGameUserSettings2->SetFoliageQuality(this->mFoliageQualityIndex);
L769:          KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mFoliageQualityIndex, [ref] mFText2);
L828:          this->mFoliageQualityOption->mOptionNameText->SetText(mFText2);
L895:          goto ExecutionFlow.Pop();
L896:          // <Begin Inlined EventGraph Function FoliagePrevious>;
L896:          goto L602;
L901:          // <Begin Inlined EventGraph Function ViewDistanceNext>;
L901:          GameUserSettings* mGameUserSettings3 = GameUserSettings->GetGameUserSettings();
L943:          this->ClampedNextIndex(this->mViewDistanceIndex, [ref] this->mViewDistanceSettings, [ref] mint323);
L984:          this->mViewDistanceIndex = mint323;
L1011:         mGameUserSettings3->SetViewDistanceQuality(this->mViewDistanceIndex);
L1052:         KismetArrayLibrary->Array_Get([ref] this->mViewDistanceSettings, this->mViewDistanceIndex, [ref] mFText3);
L1111:         this->mViewDistanceOption->mOptionNameText->SetText(mFText3);
L1178:         goto ExecutionFlow.Pop();
L1179:         // <Begin Inlined EventGraph Function ViewDistancePrevious>;
L1179:         GameUserSettings* mGameUserSettings4 = GameUserSettings->GetGameUserSettings();
L1221:         int32 mint324 = Max(this->mViewDistanceIndex - 1, 0);
L1278:         this->mViewDistanceIndex = mint324;
L1305:         mGameUserSettings4->SetViewDistanceQuality(this->mViewDistanceIndex);
L1346:         KismetArrayLibrary->Array_Get([ref] this->mViewDistanceSettings, this->mViewDistanceIndex, [ref] mFText4);
L1405:         this->mViewDistanceOption->mOptionNameText->SetText(mFText4);
L1472:         goto ExecutionFlow.Pop();
L1473:         // <Begin Inlined EventGraph Function FoliageNext>;
L1473:         GameUserSettings* mGameUserSettings5 = GameUserSettings->GetGameUserSettings();
L1515:         this->ClampedNextIndex(this->mFoliageQualityIndex, [ref] this->mSettings, [ref] mint325);
L1556:         this->mFoliageQualityIndex = mint325;
L1583:         mGameUserSettings5->SetFoliageQuality(this->mFoliageQualityIndex);
L1624:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mFoliageQualityIndex, [ref] mFText5);
L1683:         this->mFoliageQualityOption->mOptionNameText->SetText(mFText5);
L1750:         goto ExecutionFlow.Pop();
L1751:         // <Begin Inlined EventGraph Function VFXQualityNext>;
L1751:         GameUserSettings* mGameUserSettings6 = GameUserSettings->GetGameUserSettings();
L1793:         this->ClampedNextIndex(this->mVFXIndex, [ref] this->mSettings, [ref] mint326);
L1834:         this->mVFXIndex = mint326;
L1861:         mGameUserSettings6->SetVisualEffectQuality(this->mVFXIndex);
L1902:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mVFXIndex, [ref] mFText6);
L1961:         this->mVFXQualityOption->mOptionNameText->SetText(mFText6);
L2028:         goto ExecutionFlow.Pop();
L2029:         // <Begin Inlined EventGraph Function VFXQualityPrevious>;
L2029:         GameUserSettings* mGameUserSettings7 = GameUserSettings->GetGameUserSettings();
L2071:         int32 mint327 = Max(this->mVFXIndex - 1, 0);
L2128:         this->mVFXIndex = mint327;
L2155:         mGameUserSettings7->SetVisualEffectQuality(this->mVFXIndex);
L2196:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mVFXIndex, [ref] mFText7);
L2255:         this->mVFXQualityOption->mOptionNameText->SetText(mFText7);
L2322:         goto ExecutionFlow.Pop();
L2323:         int32 mint328 = Max(this->mShadowQualityIndex - 1, 0);
L2380:         this->mShadowQualityIndex = mint328;
L2407:         mGameUserSettings8->SetShadowQuality(this->mShadowQualityIndex);
L2448:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mShadowQualityIndex, [ref] mFText8);
L2507:         this->mShadowQualityOption->mOptionNameText->SetText(mFText8);
L2574:         goto ExecutionFlow.Pop();
L2575:         this->ClampedNextIndex(this->mShadowQualityIndex, [ref] this->mSettings, [ref] mint329);
L2616:         this->mShadowQualityIndex = mint329;
L2643:         mGameUserSettings9->SetShadowQuality(this->mShadowQualityIndex);
L2684:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mShadowQualityIndex, [ref] mFText9);
L2743:         this->mShadowQualityOption->mOptionNameText->SetText(mFText9);
L2810:         goto ExecutionFlow.Pop();
L2811:         GameUserSettings* mGameUserSettings10 = GameUserSettings->GetGameUserSettings();
L2853:         mGameUserSettings10->SetVSyncEnabled(true);
L2886:         goto ExecutionFlow.Pop();
L2887:         if (!mbool) goto L2906;
L2901:         goto L2811;
L2906:         GameUserSettings* mGameUserSettings11 = GameUserSettings->GetGameUserSettings();
L2948:         bool mbool1 = mGameUserSettings11->IsVSyncEnabled();
L2990:         if (!mbool1) goto ExecutionFlow.Pop();
L3000:         mGameUserSettings11->SetVSyncEnabled(false);
L3033:         goto ExecutionFlow.Pop();
L3034:         GameUserSettings* mGameUserSettings9 = GameUserSettings->GetGameUserSettings();
L3076:         goto L2575;
L3081:         GameUserSettings* mGameUserSettings12 = GameUserSettings->GetGameUserSettings();
L3123:         uint8 Temp_byte_Variable = 2;
L3143:         uint8 Temp_byte_Variable1 = 0;
L3163:         bool Temp_bool_Variable = mbool2;
L3182:         mGameUserSettings12->SetFullscreenMode(switch (Temp_bool_Variable) {
case false -> Temp_byte_Variable;
case true -> Temp_byte_Variable1;
default -> muint8;
});
L3267:         goto ExecutionFlow.Pop();
L3268:         GameUserSettings* mGameUserSettings13 = GameUserSettings->GetGameUserSettings();
L3310:         mGameUserSettings13->SetToDefaults();
L3346:         mGameUserSettings13->ValidateSettings();
L3382:         this->ResetMouseSensitivity();
L3396:         this->ResetAudioSettings();
L3410:         mGameUserSettings13->ApplySettings(true);
L3447:         this->UpdateGameplaySettings();
L3461:         this->UpdateVideoSettings();
L3475:         this->UpdateControlSettings();
L3489:         this->UpdateDynamicSettings();
L3503:         goto ExecutionFlow.Pop();
L3504:         this->mOwningMenu->RestoreFocusOnPopupClosed(false);
L3541:         if (!mbool3) goto ExecutionFlow.Pop();
L3551:         goto L3268;
L3556:         this->UpdateVideoSettings();
L3570:         goto ExecutionFlow.Pop();
L3571:         this->mOwningMenu->OnEscape();
L3607:         goto ExecutionFlow.Pop();
L3608:         GameUserSettings* mGameUserSettings8 = GameUserSettings->GetGameUserSettings();
L3650:         goto L2323;
L3655:         // <Begin Inlined EventGraph Function ShadowQualityPrevious>;
L3655:         goto L3608;
L3660:         // <Begin Inlined EventGraph Function ShadowQualityNext>;
L3660:         goto L3034;
L3665:         this->mOwningMenu->RestoreFocusOnPopupClosed(false);
L3702:         if (!mbool4) goto ExecutionFlow.Pop();
L3712:         GameUserSettings* mGameUserSettings14 = GameUserSettings->GetGameUserSettings();
L3754:         bool mbool5 = mGameUserSettings14->IsFullscreenModeDirty();
L3796:         bool mbool6 = mGameUserSettings14->IsScreenResolutionDirty();
L3838:         bool mbool7 = mbool5 || mbool6;
L3876:         this->ResolutionChanged = mbool7;
L3895:         this->ApplyAudioSettings();
L3909:         this->ApplyGameplaySettings();
L3923:         this->ApplyControlsSettings();
L3937:         this->ApplyVideoSettings();
L3951:         mGameUserSettings14->ApplySettings(true);
L3988:         mGameUserSettings14->SaveSettings();
L4024:         PlayerController* mPlayerController = this->GetOwningPlayer();
L4048:         mPlayerController->bShowMouseCursor = true;
L4081:         this->CheckResolutionChanges();
L4095:         goto ExecutionFlow.Pop();
L4096:         int32 mint3210 = Max(this->mPostProcessQualityIndex - 1, 0);
L4153:         this->mPostProcessQualityIndex = mint3210;
L4180:         GameUserSettings* mGameUserSettings15 = GameUserSettings->GetGameUserSettings();
L4222:         mGameUserSettings15->SetPostProcessingQuality(this->mPostProcessQualityIndex);
L4267:         this->UpdatePostProcessValues();
L4281:         goto ExecutionFlow.Pop();
L4282:         this->ClampedNextIndex(this->mPostProcessQualityIndex, [ref] this->mSettings, [ref] mint3211);
L4323:         this->mPostProcessQualityIndex = mint3211;
L4350:         goto L4180;
L4355:         // <Begin Inlined EventGraph Function PostProcessingPrevious>;
L4355:         goto L4096;
L4360:         // <Begin Inlined EventGraph Function PostProcessingNext>;
L4360:         goto L4282;
L4365:         goto ExecutionFlow.Pop();
L4366:         this->BindEventsForVolumeSliders();
L4380:         this->BindEventsForGameplayOptions();
L4394:         this->BindEventsForOnlineOptions();
L4408:         goto ExecutionFlow.Pop();
L4409:         this->UpdateAudioSettings();
L4423:         goto ExecutionFlow.Pop();
L4424:         this->CacheAudioSliders();
L4438:         goto ExecutionFlow.Pop();
L4439:         this->Construct();
L4449:         ExecutionFlow.Push(L15);
L4454:         ExecutionFlow.Push(L5281);
L4459:         ExecutionFlow.Push(L5247);
L4464:         ExecutionFlow.Push(L4424);
L4469:         ExecutionFlow.Push(L5218);
L4474:         ExecutionFlow.Push(L5199);
L4479:         ExecutionFlow.Push(L5083);
L4484:         TMap<FString, FText> mTMapFString, FText = [("[object Object]" = "en-US-POSIX"), ("[object Object]" = "en-GB"), ("[object Object]" = "ar-001"), ("[object Object]" = "cs-CZ"), ("[object Object]" = "de-DE"), ("[object Object]" = "es-ES"), ("[object Object]" = "pt-BR"), ("[object Object]" = "pt-PT"), ("[object Object]" = "fr-FR"), ("[object Object]" = "it-IT"), ("[object Object]" = "ja"), ("[object Object]" = "zh-Hans-HK"), ("[object Object]" = "ru-RU"), ("[object Object]" = "tr-TR"), ("[object Object]" = "zh-Hans-CN"), ("[object Object]" = "zh-Hant"), ("[object Object]" = "pl-PL"), ("[object Object]" = "el"), ("[object Object]" = "nl-NL"), ("[object Object]" = "fi-FI"), ("[object Object]" = "uk-UA"), ("[object Object]" = "fa-IR"), ("[object Object]" = "hu"), ("[object Object]" = "vi-VN"), ("[object Object]" = "he"), ("[object Object]" = "sr-Cyrl")];
L5055:         this->mLanguageData = mTMapFString, FText;
L5082:         goto ExecutionFlow.Pop();
L5083:         GameUserSettings* mGameUserSettings16 = GameUserSettings->GetGameUserSettings();
L5125:         mGameUserSettings16->LoadSettings(true);
L5162:         mGameUserSettings16->ValidateSettings();
L5198:         goto ExecutionFlow.Pop();
L5199:         this->BindEventsToAllButtonsForVideoSettings();
L5213:         goto L4366;
L5218:         this->PopulateResolutionBox();
L5232:         this->PopulateLanguageBox();
L5246:         goto ExecutionFlow.Pop();
L5247:         this->mKeybindView->mOwningWidget = this;
L5280:         goto ExecutionFlow.Pop();
L5281:         this->Init();
L5295:         goto ExecutionFlow.Pop();
L5296:         this->UpdateControlSettings();
L5310:         goto ExecutionFlow.Pop();
L5311:         GameUserSettings* mGameUserSettings17 = GameUserSettings->GetGameUserSettings();
L5353:         FGGameUserSettings* mFGGameUserSettings = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings17);
L5389:         bool mbool8 = mFGGameUserSettings;
L5418:         if (!mbool8) goto ExecutionFlow.Pop();
L5428:         int32 mint3212 = FTrunc(mfloat);
L5465:         mFGGameUserSettings->SetFOV(mint3212);
L5506:         goto ExecutionFlow.Pop();
L5507:         goto L5311;
L5512:         // <Begin Inlined EventGraph Function ShowConfirmResetPopup>;
L5512:         mFScriptDelegate->BindUFunction(this, ResetVideoSettings);
L5535:         PlayerController* mPlayerController1 = this->GetOwningPlayer();
L5559:         FGBlueprintFunctionLibrary->AddPopupWithCloseDelegate(mPlayerController1, "[object Object]", "[object Object]", [ref] mFScriptDelegate, 1, nullptr, nullptr);
L5766:         goto ExecutionFlow.Pop();
L5767:         this->ShowConfirmChangesPopup();
L5781:         goto ExecutionFlow.Pop();
L5782:         this->ShowConfirmResetPopup();
L5796:         goto ExecutionFlow.Pop();
L5797:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mAntiAliasingIndex, [ref] mFText10);
L5856:         this->mAntiAliasingOption->mOptionNameText->SetText(mFText10);
L5923:         goto ExecutionFlow.Pop();
L5924:         mFScriptDelegate1->BindUFunction(this, SaveChanges);
L5947:         PlayerController* mPlayerController2 = this->GetOwningPlayer();
L5971:         FGBlueprintFunctionLibrary->AddPopupWithCloseDelegate(mPlayerController2, "[object Object]", "[object Object]", [ref] mFScriptDelegate1, 1, nullptr, nullptr);
L6162:         goto ExecutionFlow.Pop();
L6163:         // <Begin Inlined EventGraph Function BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature>;
L6163:         goto L5782;
L6168:         // <Begin Inlined EventGraph Function BndEvt__Widget_FrontEnd_Button_C_0_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature>;
L6168:         goto L5767;
L6173:         GameUserSettings* mGameUserSettings18 = GameUserSettings->GetGameUserSettings();
L6215:         this->ClampedNextIndex(this->mAntiAliasingIndex, [ref] this->mSettings, [ref] mint3213);
L6256:         this->mAntiAliasingIndex = mint3213;
L6283:         mGameUserSettings18->SetAntiAliasingQuality(this->mAntiAliasingIndex);
L6324:         goto L5797;
L6329:         // <Begin Inlined EventGraph Function ShowConfirmChangesPopup>;
L6329:         goto L5924;
L6334:         // <Begin Inlined EventGraph Function BndEvt__Widget_FrontEnd_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature>;
L6334:         AkGameplayStatics->SetGlobalRTPCValue("RTPC_CaveReverb", 0, 0);
L6389:         AkGameplayStatics->SetGlobalRTPCValue("RTPC_WorldReverb", 0, 0);
L6444:         PlayerController* mPlayerController3 = this->GetOwningPlayer();
L6468:         AkComponent* mAkComponent = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Character/Player/Audio/SB_CharacterEssentials/Swim/Stop_P_Swim_UnderWater.Stop_P_Swim_UnderWater), mPlayerController3, true);
L6529:         PlayerController* mPlayerController4 = this->GetOwningPlayer();
L6553:         AkComponent* mAkComponent1 = AkGameplayStatics->PostAkEvent(ObjectConst(AkAudioEvent /Game/FactoryGame/Buildable/Factory/-Shared/Audio/Traversal_Shared/Stop_B_FactoryTraversal_Jelly_Inside.Stop_B_FactoryTraversal_Jelly_Inside), mPlayerController4, true);
L6614:         goto ExecutionFlow.Pop();
L6615:         // <Begin Inlined EventGraph Function Init>;
L6615:         ExecutionFlow.Push(L6650);
L6620:         ExecutionFlow.Push(L5296);
L6625:         ExecutionFlow.Push(L3556);
L6630:         ExecutionFlow.Push(L4409);
L6635:         this->UpdateGameplaySettings();
L6649:         goto ExecutionFlow.Pop();
L6650:         GameUserSettings* mGameUserSettings19 = GameUserSettings->GetGameUserSettings();
L6692:         IntPoint mIntPoint = mGameUserSettings19->GetScreenResolution();
L6742:         this->CachedScreenResolution = mIntPoint;
L6769:         uint8 muint81 = mGameUserSettings19->GetFullscreenMode();
L6819:         this->CachedFullscreenMode = muint81;
L6846:         goto ExecutionFlow.Pop();
L6847:         GameUserSettings* mGameUserSettings20 = GameUserSettings->GetGameUserSettings();
L6889:         FGGameUserSettings* mFGGameUserSettings1 = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings20);
L6925:         bool mbool9 = mFGGameUserSettings1;
L6954:         if (!mbool9) goto ExecutionFlow.Pop();
L6964:         mFGGameUserSettings1->SetMotionBlurEnabled(mbool10);
L7005:         this->UpdatePostProcessValues();
L7019:         goto ExecutionFlow.Pop();
L7020:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mAntiAliasingIndex, [ref] mFText11);
L7079:         this->mAntiAliasingOption->mOptionNameText->SetText(mFText11);
L7146:         goto ExecutionFlow.Pop();
L7147:         GameUserSettings* mGameUserSettings21 = GameUserSettings->GetGameUserSettings();
L7189:         int32 mint3214 = Max(this->mAntiAliasingIndex - 1, 0);
L7246:         this->mAntiAliasingIndex = mint3214;
L7273:         mGameUserSettings21->SetAntiAliasingQuality(this->mAntiAliasingIndex);
L7314:         goto L7020;
L7319:         bool mbool11 = mWidget != mWidget1;
L7357:         if (!mbool11) goto ExecutionFlow.Pop();
L7367:         goto L6615;
L7372:         // <Begin Inlined EventGraph Function AntiAliasNext>;
L7372:         goto L6173;
L7377:         // <Begin Inlined EventGraph Function NetworkQualityPrevious>;
L7377:         int32 mint3215 = Max(this->mNetworkQualityIndex - 1, 0);
L7434:         this->mNetworkQualityIndex = mint3215;
L7461:         GameUserSettings* mGameUserSettings22 = GameUserSettings->GetGameUserSettings();
L7503:         FGGameUserSettings* mFGGameUserSettings2 = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings22);
L7539:         bool mbool12 = mFGGameUserSettings2;
L7568:         if (!mbool12) goto ExecutionFlow.Pop();
L7578:         mFGGameUserSettings2->SetNeworkQuality(this->mNetworkQualityIndex);
L7619:         KismetArrayLibrary->Array_Get([ref] this->mSettings, this->mNetworkQualityIndex, [ref] mFText12);
L7678:         this->mNetworkQualityOption->mOptionNameText->SetText(mFText12);
L7745:         goto ExecutionFlow.Pop();
L7746:         // <Begin Inlined EventGraph Function NetworkQualityNext>;
L7746:         this->ClampedNextIndex(this->mNetworkQualityIndex, [ref] this->mSettings, [ref] mint3216);
L7787:         this->mNetworkQualityIndex = mint3216;
L7814:         goto L7461;
L7819:         // <Begin Inlined EventGraph Function AntiAliasPrevious>;
L7819:         goto L7147;
L7824:         // <Begin Inlined EventGraph Function SaveSettings>;
L7824:         GameUserSettings* mGameUserSettings23 = GameUserSettings->GetGameUserSettings();
L7866:         mGameUserSettings23->SaveSettings();
L7902:         goto ExecutionFlow.Pop();
L7903:         this->RevertUnsavedChanges();
L7917:         this->OnMenuExit(mWidget2, mbool13);
L7945:         goto ExecutionFlow.Pop();
L7946:         // <Begin Inlined EventGraph Function CheckResolutionChanges>;
L7946:         if (!this->ResolutionChanged) goto L8231;
L7960:         mFScriptDelegate2->BindUFunction(this, ResolutionChangedAccepted);
L7983:         PlayerController* mPlayerController5 = this->GetOwningPlayer();
L8007:         FGBlueprintFunctionLibrary->AddPopupWithCloseDelegate(mPlayerController5, "[object Object]", "[object Object]", [ref] mFScriptDelegate2, 1, ObjectConst(WidgetBlueprintGeneratedClass /Game/FactoryGame/Interface/UI/InGame/Widget_PopupContentResolutionTimer.Widget_PopupContentResolutionTimer_C), this);
L8230:         goto ExecutionFlow.Pop();
L8231:         this->OpenRequireRestartIfRequired();
L8245:         goto ExecutionFlow.Pop();
L8246:         ExecutionFlow.Push(L8478);
L8251:         if (!mbool14) goto L8266;
L8265:         goto ExecutionFlow.Pop();
L8266:         GameUserSettings* mGameUserSettings24 = GameUserSettings->GetGameUserSettings();
L8308:         mGameUserSettings24->SetFullscreenMode(this->CachedFullscreenMode);
L8349:         mGameUserSettings24->SetScreenResolution(this->CachedScreenResolution);
L8390:         mGameUserSettings24->ApplySettings(true);
L8427:         mGameUserSettings24->SaveSettings();
L8463:         this->UpdateVideoSettings();
L8477:         goto ExecutionFlow.Pop();
L8478:         this->OpenRequireRestartIfRequired();
L8492:         goto ExecutionFlow.Pop();
L8493:         // <Begin Inlined EventGraph Function OpenRequireRestartIfRequired>;
L8493:         GameUserSettings* mGameUserSettings25 = GameUserSettings->GetGameUserSettings();
L8535:         FGGameUserSettings* mFGGameUserSettings3 = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings25);
L8571:         bool mbool15 = mFGGameUserSettings3;
L8600:         bool mbool16 = mFGGameUserSettings3->GetRequireRestart();
L8642:         if (!mbool16) goto ExecutionFlow.Pop();
L8652:         mFGGameUserSettings3 = Cast<Class /Script/FactoryGame.FGGameUserSettings>(mGameUserSettings25);
L8688:         mbool15 = mFGGameUserSettings3;
L8717:         mFGGameUserSettings3->ClearRequireRestart();
L8749:         PlayerController* mPlayerController6 = this->GetOwningPlayer();
L8773:         mFScriptDelegate3->BindUFunction(this, ResolutionChangedAccepted);
L8796:         FGBlueprintFunctionLibrary->AddPopupWithCloseDelegate(mPlayerController6, "[object Object]", "[object Object]", [ref] mFScriptDelegate3, 0, nullptr, nullptr);
L9014:         goto ExecutionFlow.Pop();
L9015:         this->SetupDynamicOptions();
L9029:         goto ExecutionFlow.Pop();
L9030:         this->RevertUnsavedChanges();
L9044:         goto ExecutionFlow.Pop();
L9045:         // <Begin Inlined EventGraph Function RevertUnsavedChanges>;
L9045:         GameUserSettings* mGameUserSettings26 = GameUserSettings->GetGameUserSettings();
L9087:         mGameUserSettings26->LoadSettings(true);
L9124:         mGameUserSettings26->ValidateSettings();
L9160:         goto ExecutionFlow.Pop();
L9161:         goto L4439;
============ END FUNCTION ExecuteUbergraph_Widget_Options ==============





============ BEGIN FUNCTION OnBackClicked__DelegateSignature ==============
============ END FUNCTION OnBackClicked__DelegateSignature ==============
