########################'
FUNCTION CODE DUMP OF: /Game/FactoryGame/Interface/UI/HUDHelpers/HUDHelpers.HUDHelpers_C
########################





============ BEGIN FUNCTION GetKeyNameForActionSimple ==============
L0:            FGPlayerController* mFGPlayerController = Cast<Class /Script/FactoryGame.FGPlayerController>(Controller);
L36:           bool mbool = mFGPlayerController;
L65:           bool mbool1 = mFGPlayerController->GetIsUsingGamepad();
L107:          FText mFText = mFGPlayerController->GetKeyNameForAction(buttonName, mbool1);
L175:          FText Button = mFText;
============ END FUNCTION GetKeyNameForActionSimple ==============





============ BEGIN FUNCTION GetAdminInterface ==============
L0:            FGPlayerControllerBase* mFGPlayerControllerBase = Cast<Class /Script/FactoryGame.FGPlayerControllerBase>(PlayerController);
L36:           bool mbool = mFGPlayerControllerBase;
L65:           if (!mbool) goto L145;
L79:           FGAdminInterface* mFGAdminInterface = mFGPlayerControllerBase->GetAdminInterface();
L121:          FGAdminInterface* adminInterface = mFGAdminInterface;
L140:          <End of Inlined Event Graph Function>;
L145:          adminInterface = nullptr;
============ END FUNCTION GetAdminInterface ==============





============ BEGIN FUNCTION HasValidAdminInterface ==============
L0:            FGPlayerControllerBase* mFGPlayerControllerBase = Cast<Class /Script/FactoryGame.FGPlayerControllerBase>(Controller);
L36:           bool mbool = mFGPlayerControllerBase;
L65:           if (!mbool) goto L196;
L79:           FGAdminInterface* mFGAdminInterface = mFGPlayerControllerBase->GetAdminInterface();
L121:          bool mbool1 = KismetSystemLibrary->IsValid(mFGAdminInterface);
L172:          bool Valid = mbool1;
L191:          <End of Inlined Event Graph Function>;
L196:          Valid = false;
============ END FUNCTION HasValidAdminInterface ==============





============ BEGIN FUNCTION IsInMainMenu ==============
L0:            GameModeBase* mGameModeBase = GameplayStatics->GetGameMode(WorldContext);
L51:           FGGameMode* mFGGameMode = Cast<Class /Script/FactoryGame.FGGameMode>(mGameModeBase);
L87:           bool mbool = mFGGameMode;
L116:          if (!mbool) goto L191;
L130:          bool mbool1 = mFGGameMode->IsMainMenuGameMode();
L172:          bool IsInMainMenu = mbool1;
============ END FUNCTION IsInMainMenu ==============





============ BEGIN FUNCTION GetFGGameUI ==============
L0:            PlayerController* mPlayerController = Cast<Class /Script/Engine.PlayerController>(Controller);
L36:           bool mbool = mPlayerController;
L65:           if (!mbool) goto L261;
L79:           HUD* mHUD = mPlayerController->GetHUD();
L121:          FGHUD* mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L157:          bool mbool1 = mFGHUD;
L186:          if (!mbool1) goto L261;
L200:          FGGameUI* mFGGameUI = mFGHUD->GetGameUI();
L242:          FGGameUI* localGameUI = mFGGameUI;
L261:          FGGameUI* gameUI = localGameUI;
============ END FUNCTION GetFGGameUI ==============





============ BEGIN FUNCTION GetNumItemsFromCentralStorage ==============
L0:            FGCentralStorageSubsystem* mFGCentralStorageSubsystem = FGCentralStorageSubsystem->Get(OwningPawn);
L51:           bool mbool = KismetSystemLibrary->IsValid(mFGCentralStorageSubsystem);
L102:          if (!mbool) goto L258;
L116:          mFGCentralStorageSubsystem = FGCentralStorageSubsystem->Get(OwningPawn);
L167:          int32 mint32 = mFGCentralStorageSubsystem->GetNumItemsFromCentralStorage(mItemClass);
L226:          int32 NumItems = mint32;
L253:          <End of Inlined Event Graph Function>;
L258:          NumItems = -1;
============ END FUNCTION GetNumItemsFromCentralStorage ==============





============ BEGIN FUNCTION GetNumItemsOwned ==============
============ END FUNCTION GetNumItemsOwned ==============





============ BEGIN FUNCTION GetFactoryGameLightBlue ==============
L0:            LinearColor GraphicsBlue = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.10702300071716309, G = 0.4341540038585663, B = 0.5583410263061523, A = 1);
L52:           SlateColor TextBlue = ScriptStruct /Script/SlateCore.SlateColor(SpecifiedColor = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.10702300071716309, G = 0.4341540038585663, B = 0.5583410263061523, A = 1), ColorUseRule = 0);
L120:          LinearColor Graphics = GraphicsBlue;
L147:          SlateColor text = TextBlue;
============ END FUNCTION GetFactoryGameLightBlue ==============





============ BEGIN FUNCTION GetFactoryGameLightGray ==============
L0:            SlateColor mText = ScriptStruct /Script/SlateCore.SlateColor(SpecifiedColor = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.6038280129432678, G = 0.5972020030021667, B = 0.5972020030021667, A = 1), ColorUseRule = 0);
L68:           LinearColor mGraphics = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.6038280129432678, G = 0.5972020030021667, B = 0.5972020030021667, A = 1);
L120:          SlateColor text = mText;
L147:          LinearColor Graphics = mGraphics;
============ END FUNCTION GetFactoryGameLightGray ==============





============ BEGIN FUNCTION GetFactoryGameDarkGray ==============
L0:            LinearColor mGraphics = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.13286800682544708, G = 0.13286800682544708, B = 0.13563300669193268, A = 1);
L52:           SlateColor mText = ScriptStruct /Script/SlateCore.SlateColor(SpecifiedColor = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.09530699998140335, G = 0.09530699998140335, B = 0.09530699998140335, A = 1), ColorUseRule = 0);
L120:          SlateColor text = mText;
L147:          LinearColor Graphics = mGraphics;
============ END FUNCTION GetFactoryGameDarkGray ==============





============ BEGIN FUNCTION SetSliderSteps ==============
L0:            float mfloat = mSlider->GetValue();
L50:           int32 mint32 = Subtract_IntInt(mSteps, 1);
L92:           int32 mint321 = Multiply_IntInt(mint32, 100);
L134:          float mfloat1 = Conv_IntToFloat(mint32);
L171:          int32 mint322 = Divide_IntInt(mint321, mint32);
L217:          float mfloat2 = Multiply_IntFloat(mint321, mfloat);
L263:          int32 mint323 = FFloor(mfloat2);
L300:          int32 mint324 = Divide_IntInt(mint323, mint322);
L346:          float mfloat3 = Conv_IntToFloat(mint324);
L383:          float mfloat4 = Divide_FloatFloat(mfloat3, mfloat1);
L429:          mSlider->SetValue(mfloat4);
============ END FUNCTION SetSliderSteps ==============





============ BEGIN FUNCTION GetScanningObjectName ==============
L0:            FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(OwningPawn);
L36:           bool mbool = mFGCharacterPlayer;
L65:           if (!mbool) goto L349;
L79:           FGEquipment* mFGEquipment = mFGCharacterPlayer->GetEquipmentInSlot(1);
L123:          FGObjectScanner* mFGObjectScanner = Cast<Class /Script/FactoryGame.FGObjectScanner>(mFGEquipment);
L159:          bool mbool1 = mFGObjectScanner;
L188:          if (!mbool1) goto L369;
L202:          bool mbool2 = mFGObjectScanner->HasValidCurrentDetails();
L244:          if (!mbool2) goto L349;
L258:          ScannableDetails mScannableDetails = mFGObjectScanner->GetCurrentDetails();
L308:          FText Object Name = mScannableDetails.DisplayText;
L344:          <End of Inlined Event Graph Function>;
L349:          Object Name = ;
============ END FUNCTION GetScanningObjectName ==============





============ BEGIN FUNCTION ShowHideHUD ==============
L0:            PlayerController* mPlayerController = Cast<Class /Script/Engine.PlayerController>(Controller);
L36:           bool mbool = mPlayerController;
L65:           if (!mbool) goto L270;
L79:           HUD* mHUD = mPlayerController->GetHUD();
L121:          FGHUD* mFGHUD = Cast<Class /Script/FactoryGame.FGHUD>(mHUD);
L157:          bool mbool1 = mFGHUD;
L186:          if (!mbool1) goto L270;
L200:          bool mbool2 = Not_PreBool(isMenuOpen);
L229:          mFGHUD->SetHUDVisibility(mbool2);
============ END FUNCTION ShowHideHUD ==============





============ BEGIN FUNCTION GetNumItemsFromInventory ==============
L0:            bool mbool = KismetSystemLibrary->IsValid(inventoryComponent);
L51:           if (!mbool) goto L156;
L65:           int32 mint32 = inventoryComponent->GetNumItems(mItemClass);
L124:          int32 NumItems = mint32;
L151:          <End of Inlined Event Graph Function>;
L156:          NumItems = -1;
============ END FUNCTION GetNumItemsFromInventory ==============





============ BEGIN FUNCTION GetFactoryGameOrange ==============
L0:            mSlateColor.SpecifiedColor = ScriptStruct /Script/CoreUObject.LinearColor(R = 0.7835379838943481, G = 0.2917709946632385, B = 0.057805001735687256, A = 1);
L61:           mSlateColor.ColorUseRule = 0;
L90:           LinearColor Orange = mSlateColor.SpecifiedColor;
L126:          SlateColor OrangeText = mSlateColor;
============ END FUNCTION GetFactoryGameOrange ==============





============ BEGIN FUNCTION GetFactoryGameWhite ==============
L0:            SlateColor mTextWhite = ScriptStruct /Script/SlateCore.SlateColor(SpecifiedColor = ScriptStruct /Script/CoreUObject.LinearColor(R = 1, G = 1, B = 1, A = 1), ColorUseRule = 0);
L68:           LinearColor mGraphicsWhite = ScriptStruct /Script/CoreUObject.LinearColor(R = 1, G = 1, B = 1, A = 1);
L120:          SlateColor TextWhite = mTextWhite;
L147:          LinearColor GraphicsWhite = mGraphicsWhite;
============ END FUNCTION GetFactoryGameWhite ==============





============ BEGIN FUNCTION GetNumItemsFromPlayerInventory ==============
L0:            FGCharacterPlayer* mFGCharacterPlayer = Cast<Class /Script/FactoryGame.FGCharacterPlayer>(OwningPawn);
L36:           bool mbool = mFGCharacterPlayer;
L65:           if (!mbool) goto L212;
L79:           FGInventoryComponent* mFGInventoryComponent = mFGCharacterPlayer->GetInventory();
L121:          int32 mint32 = mFGInventoryComponent->GetNumItems(mItemClass);
L180:          int32 NumItems = mint32;
L207:          <End of Inlined Event Graph Function>;
L212:          FGVehicle* mFGVehicle = Cast<Class /Script/FactoryGame.FGVehicle>(OwningPawn);
L248:          bool mbool1 = mFGVehicle;
L277:          if (!mbool1) goto L466;
L291:          FGCharacterPlayer* mFGCharacterPlayer1 = mFGVehicle->GetDriver();
L333:          FGInventoryComponent* mFGInventoryComponent1 = mFGCharacterPlayer1->GetInventory();
L375:          int32 mint321 = mFGInventoryComponent1->GetNumItems(mItemClass);
L434:          NumItems = mint321;
L461:          <End of Inlined Event Graph Function>;
L466:          NumItems = -1;
============ END FUNCTION GetNumItemsFromPlayerInventory ==============
